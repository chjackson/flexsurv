[{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/articles/standsurv.html","id":"standardized-survival-measures","dir":"Articles","previous_headings":"Background","what":"Standardized survival measures","title":"Calculating standardized survival measures in flexsurv","text":"standsurv post-estimation command takes flexsurvreg object calculates standardized survival measures. fitting parametric survival model flexsurv often useful compute visualise marginal (standardized) survival. example, suppose survival model fitted adjusted treatment group, age, sex. separate predicted survival curve can obtained individual based covariate pattern prediction can obtained setting covariates mean values (can obtained using summary.flexsurvreg), may useful obtain marginal survival treatment group. Regression standardization achieves fitting regression model including treatment group \\(Z\\), covariates \\(X\\) possible interactions \\(X\\) \\(Z\\). standardized survival can estimated obtaining predictions every individual study fixed treatment arm averaging individual-specific estimates. marginal survival distribution covariates study assuming participants assigned arm \\(Z=z\\) : \\[\\begin{equation} S_s(t|Z=z) = E[S(t | Z=z, X)] = \\frac{1}{N} \\sum_{=1}^{N} S(t | Z=z, X=x_i) \\end{equation}\\] covariate values (vectors) \\(x_1,...,x_{N}\\). standarization done \\(N\\) patients study provides counterfactual marginal estimate setting \\(Z=z\\). standardized survival therefore estimate marginal survival study patients assigned group \\(z\\). certain assumptions, differences marginal survival provide estimates causal effects (Syriopoulou, Rutherford, Lambert (2021)) certain estimands average treatment effect (ATE) can targeted: \\[ ATE = S_s(t|Z=z_1) - S_s(t|Z=z_0)]\\] Alternatively, average treatment effect treated (ATET) estimand can targeted averaging patients intervention treatment arm \\(Z=z_1\\). Standardization estimates can also obtained target populations interest. example may important predict survival external population different characteristics study population. hazard function standardized survival can obtained understand shape hazard changes time. provides estimate marginal hazard. can shown (Rutherford et al. (2020), Appendix ) hazard standardized survival can calculated \\[\\begin{equation} h_s(t|Z=z) = \\frac{\\sum_{=1}^{N} S(t|Z=z,X=x_i)h(t|Z=z,X=x_i)}{\\sum_{=1}^{N} S(t | Z=z, X=x_i)} \\end{equation}\\] weighted average \\(N\\) individual hazard functions, weighted probability survival time \\(t\\). Patients unlikely survived \\(t\\) contribute less weight hazard function.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/articles/standsurv.html","id":"calculating-marginal-expected-survival-and-hazard","dir":"Articles","previous_headings":"Background","what":"Calculating marginal expected survival and hazard","title":"Calculating standardized survival measures in flexsurv","text":"economic evaluations parametric survival models used extrapolate clinical trial data estimate lifetime benefits. context often useful plot marginal ‘expected’ (general population) survival alongside parametric models fitted extrapolated trial data order aid interpretation visual comparison trial subjects population large. Displaying expected survival hazard functions can aid understanding whether assumed hazard survival functions credible (Rutherford et al. (2020)). Expected survival defined -cause survival general population key characteristics study subjects. General population mortality rates often taken national lifetables stratified age, sex, calendar year occasionally prognostic factors (e.g. deprivation indices). Ederer “exact” method estimating expected survival assumes subjects trial population censored end stated follow-time (Ederer, Axtell, Cutler 1961). expected survival survival expect see age-sex matched general population patients continuously followed-. approach used standsurv calculate expected survival “appropriate forcasting, sample size calculations predictions ‘future’ censoring issue” (Therneau 1999). Based exact method, marginal expected survival using background mortality rates calculated using \\(N\\) patients trial time point \\(t\\): \\[\\begin{equation} S^*(t) = \\frac{1}{N} \\sum_{=1}^N S_i^*(t) \\end{equation}\\] \\(S_i^*(t)\\) expected survival \\(\\)th subject time \\(t\\). follows marginal expected hazard weighted average expected hazard rates: \\[\\begin{equation} h^*(t) = \\frac{ \\sum_{=1}^N S_i^*(t) h_i^*(t)}{\\sum_{=1}^N S_i^*(t)} \\end{equation}\\] expected survival \\(\\)th subject follow-time \\(t\\) calculated based matching general population hazard rates. lifetables utilised often provide mortality rates sex (\\(s\\)), age (\\(\\)) calendar year (\\(y\\)), yearly 5-yearly categories. practice expected survival time \\(t\\) given subject calculated cumulative hazard. given follow-time \\(t\\) sum \\(h^*_{asy} \\times \\textrm{Number days state } (,s,y)\\) follow-\\(h^*_{asy}\\) expected hazard age \\(\\), sex \\(s\\), year \\(y\\). requires follow-time individual study dataset split multiple timescales (e.g. age year) time epochs, can visualised Lexis diagram. epoch can matched corresponding expected mortality rate.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/articles/standsurv.html","id":"incorporation-of-background-mortality-into-survival-models","dir":"Articles","previous_headings":"Background","what":"Incorporation of background mortality into survival models","title":"Calculating standardized survival measures in flexsurv","text":"Incorporating background mortality survival models directly recommended helps avoid extremely implausible projections (Rutherford et al. (2020)). can done using excess mortality / relative survival model population based ‘expected’ rates, often life tables, introduced explain background mortality. concept behind models partition -cause mortality excess mortality caused disease interest due causes. parametric model can applied isolated excess mortality. may particularly useful making long-term extrapolations pattern disease-specific mortality cause mortality likely different time. Alternatively, cause death information available reliable, separate cause-specific model can fitted disease-specific mortality cause mortality. -cause mortality rate time \\(t\\) individual \\(\\) can partitioned two constituent parts: \\[\\begin{equation} h_i(t) = h^*_i(t) + \\lambda_i(t) \\end{equation}\\] \\(h_i(t)\\) -cause mortality rate (hazard), \\(h^*_i(t)\\) expected background mortality rate \\(\\lambda_i(t)\\) excess mortality rate. Equivalently, hazard rates can transformed survival scale gives -cause survival time \\(t\\) product expected survival relative survival: \\[\\begin{equation} S_i(t) = S^*_i(t) R_i(t) \\end{equation}\\] relative survival, \\(R_i(t)\\), therefore ratio -cause survival expected survival background population. Typically, \\(h_i^*(t)\\) (hence \\(S_i^*(t)\\)) obtained population lifetables. expected mortality rates assumed fixed known parametric model used estimate relative survival (equivalently excess hazard).","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/articles/standsurv.html","id":"standsurv","dir":"Articles","previous_headings":"","what":"standsurv","title":"Calculating standardized survival measures in flexsurv","text":"standsurv post-estimation command takes flexsurv regression calculates standardized survival measures contrasts. Expected mortality rates survival can also obtained. main features command enables calculation plotting specified follow-times Marginal survival, hazard restricted mean survival time (RMST) metrics Marginal expected (population) survival hazard functions matched study population Marginal -cause survival -cause hazard fitting relative survival models Contrasts survival, hazard RMST metrics (e.g. marginal hazard ratio, differences marginal RMST) Confidence intervals standard errors measures contrasts using either delta method bootstrapping simple syntax user can specify groups wish calculate marginal metrics. groups can formed combination covariate values.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/articles/standsurv.html","id":"a-worked-example-the-pbc-dataset","dir":"Articles","previous_headings":"standsurv","what":"A worked example: the pbc dataset","title":"Calculating standardized survival measures in flexsurv","text":"example use data German Breast Cancer Study Group 1984-1989, R dataset bc found flexsurv package. dataset death, censoring times 686 primary node positive breast cancer patients together 3-level prognostic group variable levels “Good”, “Medium” “Poor”. demonstration collapse prognostic variable 2 levels: “Good” “Medium/Poor”. also create artificial ages diagnosis dates patients, along assuming patients female. allow correlation age diagnosis patient survival time age prognostic variable. mean age 65 standard deviation 5. load dataset create additional variables. plot Kaplan-Meier shows clear separation survival curves two prognostic groups.","code":"library(flexsurv) library(flexsurvcure) library(ggplot2) library(dplyr) library(survminer) data(bc) set.seed(236236) ## Age at diagnosis is correlated with survival time. A longer survival time  ## gives a younger mean age bc$age <- rnorm(dim(bc)[1], mean = 65 - scale(bc$recyrs, scale=F), sd = 5) ## Create age at diagnosis in days - used later for matching to expected rates bc$agedays <- floor(bc$age * 365.25) ## Create some random diagnosis dates between 01/01/1984 and 31/12/1989 bc$diag <- as.Date(floor(runif(dim(bc)[1], as.Date(\"01/01/1984\", \"%d/%m/%Y\"),                                 as.Date(\"31/12/1989\", \"%d/%m/%Y\"))),                     origin=\"1970-01-01\") ## Create sex (assume all are female) bc$sex <- factor(\"female\") ## 2-level prognostic variable bc$group2 <- ifelse(bc$group==\"Good\", \"Good\", \"Medium/Poor\") head(bc) #>   censrec rectime group   recyrs      age agedays       diag    sex group2 #> 1       0    1342  Good 3.676712 64.38839   23517 1986-09-15 female   Good #> 2       0    1578  Good 4.323288 67.31488   24586 1986-08-12 female   Good #> 3       0    1760  Good 4.821918 61.77993   22565 1985-11-10 female   Good #> 4       0    1152  Good 3.156164 65.20415   23815 1987-02-28 female   Good #> 5       0     967  Good 2.649315 68.74975   25110 1986-05-18 female   Good #> 6       0     629  Good 1.723288 64.53328   23570 1987-03-07 female   Good km <- survfit(Surv(recyrs, censrec)~group2, data=bc) kmsurvplot <- ggsurvplot(km)  kmsurvplot + xlab(\"Time from diagnosis (years)\")"},{"path":"http://chjackson.github.io/flexsurv-dev/articles/standsurv.html","id":"a-stratified-weibull-model","dir":"Articles","previous_headings":"standsurv","what":"A stratified Weibull model","title":"Calculating standardized survival measures in flexsurv","text":"start fitting Weibull model group separately. One way fit single saturated model whereby group affects scale shape parameters Weibull distribution. effectively means separate scale shape parameter group, equivalent fitting two separate models. model make proportional hazards assumption hence hazard ratio change time. saturated model approach advantages can use model easily investigate treatment effects using standsurv shall see later. Including group main formula flexsurvreg allows group affect scale parameter Weibull distribution whilst use anc argument flexsurvreg additionally allow group affect shape parameter. Given model contains group2 covariates can obtain predicted (fitted) survival two groups using summary function storing predictions tidy data.frame argument tidy=T.  Weibull model appear fit data well try parametric distributions. However, illustration purposes shall continue using Weibull model. now show predictions can obtained standsurv benefit addition flexibility.","code":"model.weibull.sep <- flexsurvreg(Surv(recyrs, censrec)~group2,                                   anc = list(shape = ~ group2),                                   data=bc, dist=\"weibullPH\") model.weibull.sep #> Call: #> flexsurvreg(formula = Surv(recyrs, censrec) ~ group2, anc = list(shape = ~group2),  #>     data = bc, dist = \"weibullPH\") #>  #> Estimates:  #>                           data mean  est       L95%      U95%      se       #> shape                           NA    1.68681   1.32989   2.13952   0.20461 #> scale                           NA    0.02187   0.01119   0.04274   0.00748 #> group2Medium/Poor          0.66618    1.84846   1.14534   2.55157   0.35874 #> shape(group2Medium/Poor)   0.66618   -0.28237  -0.54219  -0.02254   0.13257 #>                           exp(est)  L95%      U95%     #> shape                           NA        NA        NA #> scale                           NA        NA        NA #> group2Medium/Poor          6.35001   3.14351  12.82725 #> shape(group2Medium/Poor)   0.75400   0.58147   0.97771 #>  #> N = 686,  Events: 299,  Censored: 387 #> Total time at risk: 2113.425 #> Log-likelihood = -830.4043, df = 4 #> AIC = 1668.809 predictions <- summary(model.weibull.sep, type = \"survival\", tidy=T) ggplot() + geom_line(aes(x=time, y=est, color = group2), data=predictions) +    geom_step(aes(x=time, y=surv, group=strata), data=kmsurvplot$data.survplot)"},{"path":"http://chjackson.github.io/flexsurv-dev/articles/standsurv.html","id":"using-standsurv-to-calculate-marginal-survival","dir":"Articles","previous_headings":"standsurv","what":"Using standsurv to calculate marginal survival","title":"Calculating standardized survival measures in flexsurv","text":"standsurv works similarly margins command R standsurv Stata allowing user specify list scenarios specific covariates fixed certain values. done using argument standsurv provide list scenarios scenario list containing covariates fixed. worked example two scenarios list(group2 = \"Good\") list(group2 = \"Medium/Poor\"). covariates specified scenarios averaged , hence creating marginal, standardized, estimates metric interest. example , covariates model get answer obtained summary. later worked example extends models containing covariates. default calculate survival probabilities event times data can changed type t arguments, respectively. returned object tidy data.frame columns named at1 atn n scenarios specified argument. details labels scenarios stored attributes standsurv object. utilised plot function. plot marginal estimates can easily produced using plot function, produces ggplot object.  plot can easily manipulated, example changing axis labels adding plots.","code":"ss.weibull.sep.surv <- standsurv(model.weibull.sep,                                              type = \"survival\",                                              at = list(list(group2 = \"Good\"),                                                        list(group2 = \"Medium/Poor\"))) ss.weibull.sep.surv #> # A tibble: 574 × 3 #>      time   at1   at2 #>     <dbl> <dbl> <dbl> #>  1 0.0219 1.00  0.999 #>  2 0.0411 1.00  0.998 #>  3 0.0438 1.00  0.997 #>  4 0.0466 1.00  0.997 #>  5 0.0493 1.00  0.997 #>  6 0.0795 1.00  0.994 #>  7 0.115  0.999 0.991 #>  8 0.126  0.999 0.990 #>  9 0.156  0.999 0.987 #> 10 0.173  0.999 0.985 #> # ℹ 564 more rows plot(ss.weibull.sep.surv) plot(ss.weibull.sep.surv) + xlab(\"Time since diagnosis (years)\") +   geom_step(aes(x=time, y=surv, group=strata), data=kmsurvplot$data.survplot)"},{"path":"http://chjackson.github.io/flexsurv-dev/articles/standsurv.html","id":"other-metrics-marginal-hazards-and-marginal-rmst","dir":"Articles","previous_headings":"standsurv","what":"Other metrics: marginal hazards and marginal RMST","title":"Calculating standardized survival measures in flexsurv","text":"can use type argument calculate marginal hazards restricted mean survival time (RMST). example plot hazard functions two groups obtained follows:  Whilst plot RMST given ","code":"ss.weibull.sep.haz <- standsurv(model.weibull.sep,                                             type = \"hazard\",                                             at = list(list(group2 = \"Good\"),                                                       list(group2 = \"Medium/Poor\"))) plot(ss.weibull.sep.haz) + xlab(\"Time since diagnosis (years)\") ss.weibull.sep.rmst <- standsurv(model.weibull.sep,                                              type = \"rmst\",                                              at = list(list(group2 = \"Good\"),                                                        list(group2 = \"Medium/Poor\"))) plot(ss.weibull.sep.rmst) + xlab(\"Time since diagnosis (years)\")"},{"path":"http://chjackson.github.io/flexsurv-dev/articles/standsurv.html","id":"calculating-contrasts","dir":"Articles","previous_headings":"standsurv","what":"Calculating contrasts","title":"Calculating standardized survival measures in flexsurv","text":"advantage fitting saturated model now becomes clear can calculate contrasts scenarios. Suppose interested difference survival functions two groups. easily calculated using contrast = \"difference\" argument, plot contrast can obtained using contrast = TRUE argument plot function.  Alternatively, may wish visualise implied hazard ratio fitting separate Weibull models two groups. breast cancer example see hazard ratio (treatment effect) starts high decreasing, suggesting Medium/Poor prognosis start high elevated risk continued excess risk end follow-, compared Good prognosis.","code":"ss.weibull.sep.3 <- standsurv(model.weibull.sep,                                           type = \"survival\",                                                  at = list(list(group2 = \"Good\"),                                                            list(group2 = \"Medium/Poor\")),                                           contrast = \"difference\") plot(ss.weibull.sep.3, contrast=TRUE) + xlab(\"Time since diagnosis (years)\") +   ylab(\"Difference in survival probabilities\")  + geom_hline(yintercept = 0) ss.weibull.sep.4 <- standsurv(model.weibull.sep,                                           type = \"hazard\",                                                  at = list(list(group2 = \"Good\"),                                                            list(group2 = \"Medium/Poor\")),                                           contrast = \"ratio\") plot(ss.weibull.sep.4, contrast=TRUE) + xlab(\"Time since diagnosis (years)\") +   ylab(\"Hazard ratio\") + geom_hline(yintercept = 1)"},{"path":"http://chjackson.github.io/flexsurv-dev/articles/standsurv.html","id":"confidence-intervals-and-standard-errors","dir":"Articles","previous_headings":"standsurv","what":"Confidence intervals and standard errors","title":"Calculating standardized survival measures in flexsurv","text":"Confidence intervals standard errors metric interest contrasts can obtained either bootstrapping using delta method. Bootstrap confidence intervals calculated specifying ci = TRUE, boot = TRUE, providing number bootstrap samples using B. can also set seed using seed argument allow reproducibility. instead delta method used obtain confidence intervals specify ci = TRUE, boot = FALSE. delta method obtains confidence intervals calculating standard errors given transformation metric interest assuming normality. default use log transformation; hence type = \"survival\" confidence intervals symmetric log survival probabilities. Alternative transformations can specified using trans argument. code shows confidence intervals marginal survival calculated bootstrap method (B = 100) compared delta method. computational efficiency predict 10 time points.","code":"ss.weibull.sep.boot <- standsurv(model.weibull.sep,                                           type = \"survival\",                                                  at = list(list(group2 = \"Good\"),                                                            list(group2 = \"Medium/Poor\")),                                           t = seq(0,7,length=10),                                           ci = TRUE,                                           boot = TRUE,                                           B = 100,                                           seed = 2367) #> Calculating bootstrap standard errors / confidence intervals  ss.weibull.sep.deltam <- standsurv(model.weibull.sep,                                           type = \"survival\",                                                  at = list(list(group2 = \"Good\"),                                                            list(group2 = \"Medium/Poor\")),                                           t = seq(0,7,length=10),                                           ci = TRUE,                                           boot = FALSE) #> Calculating standard errors / confidence intervals using delta method  plot(ss.weibull.sep.boot, ci = TRUE) +     geom_ribbon(aes(x=time, ymin=survival_lci, ymax=survival_uci, color=at, linetype = \"Delta method\"), fill=NA,               data=attr(ss.weibull.sep.deltam,\"standpred_at\")) +   scale_linetype_manual(values = c(\"Bootstrap\" = \"solid\", \"Delta method\"= \"dashed\")) +   ggtitle(\"Comparison of bootstrap and delta method confidence intervals\") #> Scale for linetype is already present. #> Adding another scale for linetype, which will replace the existing scale."},{"path":"http://chjackson.github.io/flexsurv-dev/articles/standsurv.html","id":"adding-age-as-a-covariate","dir":"Articles","previous_headings":"standsurv","what":"Adding age as a covariate","title":"Calculating standardized survival measures in flexsurv","text":"Suppose age added covariate survival model. age included scenarios standsurv default produce standardized estimates survival averaged age distribution study population. Alternatively pass new prediction dataset standsurv obtain standardized estimates population. example, obtain marginal survival estimates fitting stratified Weibull model, firstly standardized age-distribution study population secondly standardized older population mean age 75 standard deviation 5.","code":"model.weibull.age.sep <- flexsurvreg(Surv(recyrs, censrec)~group2 + age,                                   anc = list(shape = ~ group2 + age),                                   data=bc, dist=\"weibullPH\")  ## Marginal survival standardized to age distribution of study population ss.weibull.age.sep.surv <- standsurv(model.weibull.age.sep,                                              type = \"survival\",                                              at = list(list(group2 = \"Good\"),                                                        list(group2 = \"Medium/Poor\")),                                              t = seq(0,7,length=50) )  ## Marginal survival standardized to an older population # create a new prediction dataset as a copy of the bc data but whose ages are drawn from # a normal distribution with mean age 75, sd 5. newpred.data <- bc set.seed(247) newpred.data$age = rnorm(dim(bc)[1], 75, 5) ss.weibull.age2.sep.surv <- standsurv(model.weibull.age.sep,                                              type = \"survival\",                                              at = list(list(group2 = \"Good\"),                                                        list(group2 = \"Medium/Poor\")),                                              t = seq(0,7,length=50),                                              newdata=newpred.data)  ## Overlay both marginal survival curves plot(ss.weibull.age.sep.surv) +    geom_line(aes(x=time, y=survival, color=at, linetype = \"Older population\"),             data = attr(ss.weibull.age2.sep.surv, \"standpred_at\") ) +   scale_linetype_manual(values = c(\"Study\" = \"solid\", \"Older population\"= \"dashed\")) #> Scale for linetype is already present. #> Adding another scale for linetype, which will replace the existing scale."},{"path":"http://chjackson.github.io/flexsurv-dev/articles/standsurv.html","id":"calculating-expected-survival-and-hazard-in-standsurv","dir":"Articles","previous_headings":"standsurv","what":"Calculating expected survival and hazard in standsurv","title":"Calculating standardized survival measures in flexsurv","text":"overlay marginal expected survival hazard curves require lifetable population hazard rates. demonstrate use US lifetable comes survival package, called survexp.us. lifetables can obtained directly Human Mortality Database (HMD) using HMDHFDplus package. survexp.us lifetable ratetable object stratification factors age, sex year. gives rates mortality per person-day combinations stratification factors. summary survexp.us object shows time-scale days. use lifetable get expected rates trial population need match age, sex year variables dataset ratetable. can use rmap argument . standsurv utilises survexp function survival package calculate expected survival times specified t using ‘exact’ method Ederer. note sex data coded ratetable (“male” “female”) importantly variables record age diagnosis diagnosis date days. important user ensures study data correctly coded variables timescale ratetable matching successful. code demonstrates data therefore need match year variable ratetable diag variable study data, age variable ratetable agedays variable study data. need specify three arguments standsurv. First, lifetable, must ratetable object specified using ratetable argument. Second, may need pass trial dataset standsurv stratifying factors appear covariates flexsurv model. Finally, need careful tell standsurv time scale transformation fitted flexsurv model time scale ratetable. can use scale.ratetable argument . Typically ratetable objects expressed days (e.g. rates per person-day). default therefore scale.ratetable = 365.25, indicates survival model fitted years ratetable days. running standsurv can plot expected survival (hazard) using argument expected = TRUE plot() function.  can see marginal expected survival much higher marginal (predicted) survival breast cancer population. can also obtain expected hazards:  hazard plot shows model predicting increasing hazard time cancer population, remains significantly higher expected hazard general population. monotonically increasing hazard imposed Weibull distribution may implausible may make us question suitability Weibull model wish extrapolate.","code":"summary(survexp.us) #>  Rate table with 3 dimensions: #>  age ranges from 0 to 39812.25; with 110 categories #>  sex has levels of: male female #>  year ranges from 1940-01-01 to 2014-01-01; with 75 categories ss.weibull.sep.expected <- standsurv(model.weibull.sep,                                                  type = \"survival\",                                                  at = list(list(group2 = \"Good\"),                                                            list(group2 = \"Medium/Poor\")),                                                  t = seq(0,7,length=50),                                                  rmap=list(sex = sex,                                                            year = diag,                                                            age = agedays                                                  ),                                                  ratetable = survexp.us,                                                  scale.ratetable = 365.25,                                                  newdata = bc ) #> Calculating marginal expected survival and hazard plot(ss.weibull.sep.expected, expected = T) ss.weibull.sep.expectedh <- standsurv(model.weibull.sep,                                                  type = \"hazard\",                                                  at = list(list(group2 = \"Good\"),                                                            list(group2 = \"Medium/Poor\")),                                                  t = seq(0,7,length=50),                                                  rmap=list(sex = sex,                                                            year = diag,                                                            age = agedays                                                  ),                                                  ratetable = survexp.us,                                                  scale.ratetable = 365.25,                                                  newdata = bc ) #> Calculating marginal expected survival and hazard plot(ss.weibull.sep.expectedh, expected = T)"},{"path":"http://chjackson.github.io/flexsurv-dev/articles/standsurv.html","id":"incorporation-of-background-mortality","dir":"Articles","previous_headings":"standsurv","what":"Incorporation of background mortality","title":"Calculating standardized survival measures in flexsurv","text":"relative survival model can fitted using flexsurv incorporating background mortality rates. model estimates excess hazard rates relative survival measures. prediction purposes, following fitting relative survival model, standsurv allows user either obtain marginal predictions relative survival / excess hazard -cause survival / -cause hazard. latter calculated multiplying relative survival estimates expected survival get -cause survival, adding excess hazard rates expected hazard get -cause hazard. demonstrate fitting relative survival cure model breast cancer data obtaining predicted -cause survival -cause hazard 30-years diagnosis. mixture cure model makes assumption proportion study population never experience event. relative survival framework cure model assumes excess mortality rate approaches zero (equivalently relative survival reaches asymptote determined cure fraction). fit relative survival cure model Weibull distribution assumed uncured. relative survival mixture-cure model fitted . must pass flexsurvcure expected hazard rates event / censoring time individual, expected rates event times used likelihood function parametric relative survival model. need initally data wrangling. Firstly, calculate attained age attained year (whole years) event time study subjects. Secondly, join data expected rates using matching variables attained age, attained year sex. example, express expected rate per person-year timescale used flexsurv regression model. can now use standsurv obtain -cause survival hazard predictions using type = \"survival\" type = \"hazard\". instead wanted predictions relative survival excess hazards use type = \"relsurvival\" type = \"excesshazard\", respectively.   marginal excess hazard now unimodal since cure model forcing initially increasing excess hazard tend zero long-term ‘cured’ subjects remain. marginal -cause hazard tends expected hazard follows thereafter. plot excess hazard confirms .","code":"## reshape US lifetable to be a tidy data.frame, and convert rates to per person-year as flexsurv regression is in years survexp.us.df <- as.data.frame.table(survexp.us, responseName = \"exprate\") %>%   mutate(exprate = 365.25 * exprate) survexp.us.df$age <- as.numeric(as.character(survexp.us.df$age)) survexp.us.df$year <- as.numeric(as.character(survexp.us.df$year))  ## Obtain attained age and attained calendar year in (whole) years bc <- bc %>% mutate(attained.age.yr = floor(age + recyrs),                     attained.year = lubridate::year(diag + rectime))  ## merge in (left join) expected rates at event time bc <- bc %>% left_join(survexp.us.df, by = c(\"attained.age.yr\"=\"age\",                                          \"attained.year\"=\"year\",                                          \"sex\"=\"sex\"))   # A stratified relative survival mixture-cure model model.weibull.sep.rs <- flexsurvcure(Surv(recyrs, censrec)~group2,                                   anc = list(shape = ~ group2,                                             scale = ~ group2),                                   data=bc, dist=\"weibullPH\",                                  bhazard=exprate)  model.weibull.sep.rs #> Call: #> flexsurvcure(formula = Surv(recyrs, censrec) ~ group2, data = bc,  #>     bhazard = exprate, dist = \"weibullPH\", anc = list(shape = ~group2,  #>         scale = ~group2)) #>  #> Estimates:  #>                           data mean  est       L95%      U95%      se       #> theta                           NA    0.73277   0.60988   0.82787        NA #> shape                           NA    2.62590   1.88756   3.65306   0.44231 #> scale                           NA    0.02973   0.00993   0.08896   0.01663 #> group2Medium/Poor          0.66618   -1.76733  -2.48411  -1.05055   0.36571 #> shape(group2Medium/Poor)   0.66618   -0.52951  -0.88563  -0.17340   0.18170 #> scale(group2Medium/Poor)   0.66618    1.81159   0.68352   2.93965   0.57555 #>                           exp(est)  L95%      U95%     #> theta                           NA        NA        NA #> shape                           NA        NA        NA #> scale                           NA        NA        NA #> group2Medium/Poor          0.17079   0.08340   0.34974 #> shape(group2Medium/Poor)   0.58889   0.41245   0.84080 #> scale(group2Medium/Poor)   6.12014   1.98084  18.90922 #>  #> N = 686,  Events: 299,  Censored: 387 #> Total time at risk: 2113.425 #> Log-likelihood = -784.3236, df = 6 #> AIC = 1580.647 ## All-cause survival ss.weibull.sep.rs.surv <- standsurv(model.weibull.sep.rs,                                                  type = \"survival\",                                                  at = list(list(group2 = \"Good\"),                                                            list(group2 = \"Medium/Poor\")),                                                  t = seq(0,30,length=50),                                                  rmap=list(sex = sex,                                                            year = diag,                                                            age = agedays                                                  ),                                                  ratetable = survexp.us,                                                  scale.ratetable = 365.25,                                                  newdata = bc ) #> Marginal all-cause survival will be calculated #> Calculating marginal expected survival and hazard plot(ss.weibull.sep.rs.surv, expected = T) # All-cause hazard ss.weibull.sep.rs.haz <- standsurv(model.weibull.sep.rs,                                                  type = \"hazard\",                                                  at = list(list(group2 = \"Good\"),                                                            list(group2 = \"Medium/Poor\")),                                                  t = seq(0,30,length=50),                                                  rmap=list(sex = sex,                                                            year = diag,                                                            age = agedays                                                  ),                                                  ratetable = survexp.us,                                                  scale.ratetable = 365.25,                                                  newdata = bc ) #> Marginal all-cause hazard will be calculated #> Calculating marginal expected survival and hazard plot(ss.weibull.sep.rs.haz, expected = T) # Excess hazard ss.weibull.sep.rs.excesshaz <- standsurv(model.weibull.sep.rs,                                                  type = \"excesshazard\",                                                  at = list(list(group2 = \"Good\"),                                                            list(group2 = \"Medium/Poor\")),                                                  t = seq(0,30,length=50),                                                  rmap=list(sex = sex,                                                            year = diag,                                                            age = agedays                                                  ),                                                  ratetable = survexp.us,                                                  scale.ratetable = 365.25,                                                  newdata = bc ) #> Calculating marginal expected survival and hazard plot(ss.weibull.sep.rs.excesshaz)"},{"path":"http://chjackson.github.io/flexsurv-dev/articles/standsurv.html","id":"conclusions","dir":"Articles","previous_headings":"","what":"Conclusions","title":"Calculating standardized survival measures in flexsurv","text":"standsurv powerful post-estimation command allows easy calculation number useful prediction metrics. Contrasts can made counterfactual populations interest , regression standardisation, allows targeting marginal estimands. Confidence intervals, via delta method bootstrapping, available benchmarking incorporating background mortality rates also supported.","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christopher Jackson. Author, maintainer. Paul Metcalfe. Contributor. Jordan Amdahl. Contributor. Matthew T. Warkentin. Contributor. Michael Sweeting. Contributor. Kevin Kunzmann. Contributor.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Christopher Jackson (2016). flexsurv: Platform Parametric Survival Modeling R. Journal Statistical Software, 70(8), 1-33. doi:10.18637/jss.v070.i08","code":"@Article{,   title = {{flexsurv}: A Platform for Parametric Survival Modeling in {R}},   author = {Christopher Jackson},   journal = {Journal of Statistical Software},   year = {2016},   volume = {70},   number = {8},   pages = {1--33},   doi = {10.18637/jss.v070.i08}, }"},{"path":"http://chjackson.github.io/flexsurv-dev/index.html","id":"flexsurv-","dir":"","previous_headings":"","what":"Flexible Parametric Survival and Multi-State Models","title":"Flexible Parametric Survival and Multi-State Models","text":"flexsurv R package parametric survival multi-state modelling.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key features","title":"Flexible Parametric Survival and Multi-State Models","text":"Parametric models time--event (survival) data. Data may right-censored, /left-censored, /left-truncated. Several built-parametric distributions available, including flexible model based splines (Royston Parmar). user-defined parametric model can employed supplying R functions defining distribution. Covariates can included using (log-)linear model parameter distribution. typically defines accelerated failure time proportional hazards model. Multi-state models continuously-observed data can defined piecing together transition-specific parametric models kind. (intermittently-observed data, see instead msm package.)","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/index.html","id":"learn-more","dir":"","previous_headings":"","what":"Learn more","title":"Flexible Parametric Survival and Multi-State Models","text":"User guide (PDF). Guide multi-state modelling flexsurv. Full reference manual package’s functions. Paper Journal Statistical Software (Jackson 2016). Mostly user guide, kept date.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/index.html","id":"installation-stable-cran-version","dir":"","previous_headings":"","what":"Installation (stable CRAN version)","title":"Flexible Parametric Survival and Multi-State Models","text":"","code":"install.packages(\"flexsurv\")"},{"path":"http://chjackson.github.io/flexsurv-dev/index.html","id":"installation-development-version","dir":"","previous_headings":"","what":"Installation (development version)","title":"Flexible Parametric Survival and Multi-State Models","text":"","code":"install.packages(\"devtools\") # if devtools not already installed devtools::install_github('chjackson/flexsurv-dev')"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/AIC.fmsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Akaike's information criterion from a flexible parametric multistate model — AIC.fmsm","title":"Akaike's information criterion from a flexible parametric multistate model — AIC.fmsm","text":"Defined sum AICs transition-specific models.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/AIC.fmsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Akaike's information criterion from a flexible parametric multistate model — AIC.fmsm","text":"","code":"# S3 method for fmsm AIC(object, ..., k = 2)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/AIC.fmsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Akaike's information criterion from a flexible parametric multistate model — AIC.fmsm","text":"object Object returned fmsm representing multistate model. ... arguments (currently unused). k Penalty applied number parameters (defaults standard 2).","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/AIC.fmsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Akaike's information criterion from a flexible parametric multistate model — AIC.fmsm","text":"sum AICs transition-specific models.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/AICc.flexsurvreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Second-order Akaike information criterion — AICc.flexsurvreg","title":"Second-order Akaike information criterion — AICc.flexsurvreg","text":"Second-order \"corrected\" Akaike information criterion, often known AICc (see, e.g. Burnham Anderson 2002).  defined -2 log-likelihood + (2*p*n)/(n - p -1), whereas standard AIC defined -2 log-likelihood + 2*p, p number parameters n sample size.  correction intended adjust AIC small-sample bias, hence makes difference result small n.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/AICc.flexsurvreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Second-order Akaike information criterion — AICc.flexsurvreg","text":"","code":"# S3 method for flexsurvreg AICc(object, cens = TRUE, ...)  # S3 method for flexsurvreg AICC(object, cens = TRUE, ...)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/AICc.flexsurvreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Second-order Akaike information criterion — AICc.flexsurvreg","text":"object Fitted model returned flexsurvreg (flexsurvspline). cens Include censored observations sample size term (n) used calculation. See BIC.flexsurvreg discussion issues defining sample size. ... arguments (currently unused).","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/AICc.flexsurvreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Second-order Akaike information criterion — AICc.flexsurvreg","text":"second-order AIC fitted model.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/AICc.flexsurvreg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Second-order Akaike information criterion — AICc.flexsurvreg","text":"can spelt either AICC AICc.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/AICc.flexsurvreg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Second-order Akaike information criterion — AICc.flexsurvreg","text":"Burnham, K. P., Anderson, D. R. (2002) Model Selection Multimodel Inference: practical information-theoretic approach. Second edition. Springer: New York.","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/AICc.html","id":null,"dir":"Reference","previous_headings":"","what":"Second-order Akaike information criterion — AICc","title":"Second-order Akaike information criterion — AICc","text":"Generic function second-order Akaike information criterion. current implementation flexsurv AICc.flexsurvreg, see details.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/AICc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Second-order Akaike information criterion — AICc","text":"","code":"AICc(object, ...)  AICC(object, ...)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/AICc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Second-order Akaike information criterion — AICc","text":"object Fitted model object. ... arguments (currently unused).","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/AICc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Second-order Akaike information criterion — AICc","text":"can spelt either AICC AICc.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/BIC.flexsurvreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian Information Criterion (BIC) for comparison of flexsurvreg models — BIC.flexsurvreg","title":"Bayesian Information Criterion (BIC) for comparison of flexsurvreg models — BIC.flexsurvreg","text":"Bayesian Information Criterion (BIC) comparison flexsurvreg models","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/BIC.flexsurvreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian Information Criterion (BIC) for comparison of flexsurvreg models — BIC.flexsurvreg","text":"","code":"# S3 method for flexsurvreg BIC(object, cens = TRUE, ...)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/BIC.flexsurvreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian Information Criterion (BIC) for comparison of flexsurvreg models — BIC.flexsurvreg","text":"object Fitted model returned flexsurvreg (flexsurvspline). cens Include censored observations sample size term (n) used calculation BIC. ... arguments (currently unused).","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/BIC.flexsurvreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian Information Criterion (BIC) for comparison of flexsurvreg models — BIC.flexsurvreg","text":"BIC fitted model.  minus twice log likelihood plus p*log(n),  p number parameters n sample   size data.  weights supplied  flexsurv, sample size defined sum   weights.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/BIC.flexsurvreg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian Information Criterion (BIC) for comparison of flexsurvreg models — BIC.flexsurvreg","text":"\"official\" definition sample size   use BIC censored survival analysis.  BIC   based approximation Bayesian model comparison using   Bayes factors implicit vague prior.  Informally,   sample size describes number \"units\" giving rise   distinct piece information (Kass Raftery 1995).  However   censored observations provide less information observed   events, principle.  default used number   individuals, consistency familiar kinds   statistical modelling.  However censoring heavy,   number events may better represent amount   information.  Following principles, best approximation   expected somewere . AIC BIC intended measure different things.  Briefly, AIC measures predictive ability, whereas BIC expected choose true model set models one truth.  Therefore BIC chooses simpler models tiniest sample sizes (\\(log(n)>2\\), \\(n>7\\)).  AIC might preferred typical situation \"models wrong useful\". AIC also gives similar results cross-validation (Stone 1977).","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/BIC.flexsurvreg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bayesian Information Criterion (BIC) for comparison of flexsurvreg models — BIC.flexsurvreg","text":"Kass, R. E., & Raftery, . E. (1995). Bayes   factors. Journal American Statistical Association,   90(430), 773-795. Stone, M. (1977). asymptotic equivalence choice   model cross‐validation Akaike's criterion. Journal   Royal Statistical Society: Series B (Methodological), 39(1),   44-47.","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenF.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized F distribution — GenF","title":"Generalized F distribution — GenF","text":"Density, distribution function, hazards, quantile function random generation generalized F distribution, using reparameterisation Prentice (1975).","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized F distribution — GenF","text":"","code":"dgenf(x, mu = 0, sigma = 1, Q, P, log = FALSE)  pgenf(q, mu = 0, sigma = 1, Q, P, lower.tail = TRUE, log.p = FALSE)  Hgenf(x, mu = 0, sigma = 1, Q, P)  hgenf(x, mu = 0, sigma = 1, Q, P)  qgenf(p, mu = 0, sigma = 1, Q, P, lower.tail = TRUE, log.p = FALSE)  rgenf(n, mu = 0, sigma = 1, Q, P)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized F distribution — GenF","text":"x, q Vector quantiles. mu Vector location parameters. sigma Vector scale parameters. Q Vector first shape parameters. P Vector second shape parameters. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P(X \\le x)\\), otherwise, \\(P(X > x)\\). p Vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized F distribution — GenF","text":"dgenf gives density, pgenf gives distribution function, qgenf gives quantile function, rgenf generates random deviates, Hgenf retuns cumulative hazard hgenf hazard.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenF.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generalized F distribution — GenF","text":"\\(y \\sim F(2s_1, 2s_2)\\), \\(w = \\)\\( \\log(y)\\) \\(x = \\exp(w\\sigma + \\mu)\\) original generalized F distribution location parameter \\(\\mu\\), scale parameter \\(\\sigma>0\\) shape parameters \\(s_1,s_2\\). stable version described Prentice (1975), \\(s_1,s_2\\) replaced shape parameters \\(Q,P\\), \\(P>0\\), $$s_1 = 2(Q^2 + 2P + Q\\delta)^{-1}, \\quad s_2 = 2(Q^2 + 2P - Q\\delta)^{-1}$$ equivalently $$Q = \\left(\\frac{1}{s_1} - \\frac{1}{s_2}\\right)\\left(\\frac{1}{s_1} + \\frac{1}{s_2}\\right)^{-1/2}, \\quad P = \\frac{2}{s_1 + s_2} $$ Define \\(\\delta = (Q^2 + 2P)^{1/2}\\), \\(w = (\\log(x) - \\mu)\\delta /\\sigma\\), probability density function \\(x\\) $$ f(x) = \\frac{\\delta (s_1/s_2)^{s_1} e^{s_1 w}}{\\sigma x (1 + s_1 e^w/s_2) ^ {(s_1 + s_2)} B(s_1, s_2)} $$ original parameterisation available package dgenf.orig, sake completion / compatibility.  definitions, dgenf(x, mu=mu, sigma=sigma, Q=Q, P=P) = dgenf.orig(x, mu=mu, sigma=sigma/delta, s1=s1, s2=s2) generalized F distribution P=0 equivalent generalized gamma distribution dgengamma, dgenf(x, mu, sigma, Q, P=0) equals dgengamma(x, mu, sigma, Q).  generalized gamma reduces several common distributions, described GenGamma help page. generalized F distribution includes log-logistic distribution (see eha::dllogis) special case: dgenf(x, mu=mu, sigma=sigma, Q=0, P=1) = eha::dllogis(x, shape=sqrt(2)/sigma, scale=exp(mu)) range hazard trajectories available distribution discussed detail Cox (2008).  Jackson et al. (2010) give application modelling oral cancer survival use health economic evaluation screening.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenF.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Generalized F distribution — GenF","text":"parameters Q P usually called \\(q\\) \\(p\\) literature - made upper-case R functions avoid clashing conventional arguments q probability function p quantile function.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenF.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generalized F distribution — GenF","text":"R. L. Prentice (1975). Discrimination among parametric models. Biometrika 62(3):607-614. Cox, C. (2008). generalized \\(F\\) distribution: umbrella parametric survival analysis.  Statistics Medicine 27:4301-4312. Jackson, C. H. Sharples, L. D. Thompson, S. G. (2010).  Survival models health economic evaluations: balancing fit parsimony improve prediction.  International Journal Biostatistics 6(1):Article 34.","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenF.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generalized F distribution — GenF","text":"Christopher Jackson <chris.jackson@mrc-bsu.cam.ac.uk>","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenF.orig.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized F distribution (original parameterisation) — GenF.orig","title":"Generalized F distribution (original parameterisation) — GenF.orig","text":"Density, distribution function, quantile function random generation generalized F distribution, using less flexible original parameterisation described Prentice (1975).","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenF.orig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized F distribution (original parameterisation) — GenF.orig","text":"","code":"dgenf.orig(x, mu = 0, sigma = 1, s1, s2, log = FALSE)  pgenf.orig(q, mu = 0, sigma = 1, s1, s2, lower.tail = TRUE, log.p = FALSE)  Hgenf.orig(x, mu = 0, sigma = 1, s1, s2)  hgenf.orig(x, mu = 0, sigma = 1, s1, s2)  qgenf.orig(p, mu = 0, sigma = 1, s1, s2, lower.tail = TRUE, log.p = FALSE)  rgenf.orig(n, mu = 0, sigma = 1, s1, s2)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenF.orig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized F distribution (original parameterisation) — GenF.orig","text":"x, q vector quantiles. mu Vector location parameters. sigma Vector scale parameters. s1 Vector first F shape parameters. s2 vector second F shape parameters. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P(X \\le x)\\), otherwise, \\(P(X > x)\\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenF.orig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized F distribution (original parameterisation) — GenF.orig","text":"dgenf.orig gives density, pgenf.orig gives distribution function, qgenf.orig gives quantile function, rgenf.orig generates random deviates, Hgenf.orig retuns cumulative hazard hgenf.orig hazard.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenF.orig.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generalized F distribution (original parameterisation) — GenF.orig","text":"\\(y \\sim F(2s_1, 2s_2)\\), \\(w = \\log(y)\\) \\(x = \\exp(w\\sigma + \\mu)\\) original generalized F distribution location parameter \\(\\mu\\), scale parameter \\(\\sigma>0\\) shape parameters \\(s_1>0,s_2>0\\).  probability density function \\(x\\) $$f(x | \\mu, \\sigma, s_1, s_2) = \\frac{(s_1/s_2)^{s_1} e^{s_1 w}}{\\sigma x (1 + s_1 e^w/s_2) ^ {(s_1 + s_2)} B(s_1, s_2)}$$ \\(w = (\\log(x) - \\mu)/\\sigma\\), \\(B(s_1,s_2) = \\Gamma(s_1)\\Gamma(s_2)/\\Gamma(s_1+s_2)\\) beta function. \\(s_2 \\rightarrow \\infty\\), distribution \\(x\\) tends towards original generalized gamma distribution following parameters: dgengamma.orig(x, shape=1/sigma, scale=exp(mu) / s1^sigma, k=s1) See GenGamma.orig includes several common distributions special cases. alternative parameterisation generalized F distribution, originating Prentice (1975) given package GenF, preferred statistical modelling, since stable \\(s_1\\) tends infinity, includes new class distributions negative first shape parameter.  original provided sake completion compatibility.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenF.orig.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generalized F distribution (original parameterisation) — GenF.orig","text":"R. L. Prentice (1975). Discrimination among parametric models. Biometrika 62(3):607-614.","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenF.orig.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generalized F distribution (original parameterisation) — GenF.orig","text":"Christopher Jackson <chris.jackson@mrc-bsu.cam.ac.uk>","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenGamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized gamma distribution — GenGamma","title":"Generalized gamma distribution — GenGamma","text":"Density, distribution function, hazards, quantile function random generation generalized gamma distribution, using parameterisation originating Prentice (1974). Also known (generalized) log-gamma distribution.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenGamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized gamma distribution — GenGamma","text":"","code":"dgengamma(x, mu = 0, sigma = 1, Q, log = FALSE)  pgengamma(q, mu = 0, sigma = 1, Q, lower.tail = TRUE, log.p = FALSE)  Hgengamma(x, mu = 0, sigma = 1, Q)  hgengamma(x, mu = 0, sigma = 1, Q)  qgengamma(p, mu = 0, sigma = 1, Q, lower.tail = TRUE, log.p = FALSE)  rgengamma(n, mu = 0, sigma = 1, Q)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenGamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized gamma distribution — GenGamma","text":"x, q vector quantiles. mu Vector ``location'' parameters. sigma Vector ``scale'' parameters.  Note inconsistent meanings term ``scale'' - parameter analogous (log-scale) standard deviation log-normal distribution, ``sdlog'' dlnorm, rather ``scale'' parameter gamma distribution dgamma. Constrained positive. Q Vector shape parameters. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P(X \\le x)\\), otherwise, \\(P(X > x)\\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenGamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized gamma distribution — GenGamma","text":"dgengamma gives density, pgengamma gives distribution function, qgengamma gives quantile function, rgengamma generates random deviates, Hgengamma retuns cumulative hazard hgengamma hazard.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenGamma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generalized gamma distribution — GenGamma","text":"\\(\\gamma \\sim Gamma(Q^{-2}, 1)\\) , \\(w = log(Q^2 \\gamma) / Q\\), \\(x = \\exp(\\mu + \\sigma w)\\) follows generalized gamma distribution probability density function $$f(x | \\mu, \\sigma, Q) = \\frac{|Q|(Q^{-2})^{Q^{-2}}}{\\sigma x \\Gamma(Q^{-2})} \\exp(Q^{-2}(Qw - \\exp(Qw)))$$ parameterisation preferred original parameterisation generalized gamma Stacy (1962) since numerically stable near \\(Q=0\\) (log-normal distribution), allows \\(Q<=0\\).  original available package dgengamma.orig, sake completion compatibility software - implicitly restricted Q>0 (k>0 original notation). parameters dgengamma dgengamma.orig related follows. dgengamma.orig(x, shape=shape, scale=scale, k=k) = dgengamma(x, mu=log(scale) + log(k)/shape, sigma=1/(shape*sqrt(k)), Q=1/sqrt(k)) generalized gamma distribution simplifies gamma, log-normal Weibull distributions following parameterisations: properties generalized gamma applications survival analysis discussed detail Cox (2007). generalized F distribution GenF extends generalized gamma four parameters.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenGamma.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generalized gamma distribution — GenGamma","text":"Prentice, R. L. (1974). log gamma model maximum likelihood estimation. Biometrika 61(3):539-544. Farewell, V. T. Prentice, R. L. (1977). study distributional shape life testing. Technometrics 19(1):69-75. Lawless, J. F. (1980). Inference generalized gamma log gamma distributions.  Technometrics 22(3):409-419. Cox, C., Chu, H., Schneider, M. F. Muñoz, . (2007). Parametric survival analysis taxonomy hazard functions generalized gamma distribution.  Statistics Medicine 26:4252-4374 Stacy, E. W. (1962). generalization gamma distribution. Annals Mathematical Statistics 33:1187-92","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenGamma.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generalized gamma distribution — GenGamma","text":"Christopher Jackson <chris.jackson@mrc-bsu.cam.ac.uk>","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenGamma.orig.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized gamma distribution (original parameterisation) — GenGamma.orig","title":"Generalized gamma distribution (original parameterisation) — GenGamma.orig","text":"Density, distribution function, hazards, quantile function random generation generalized gamma distribution, using original parameterisation Stacy (1962).","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenGamma.orig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized gamma distribution (original parameterisation) — GenGamma.orig","text":"","code":"dgengamma.orig(x, shape, scale = 1, k, log = FALSE)  pgengamma.orig(q, shape, scale = 1, k, lower.tail = TRUE, log.p = FALSE)  Hgengamma.orig(x, shape, scale = 1, k)  hgengamma.orig(x, shape, scale = 1, k)  qgengamma.orig(p, shape, scale = 1, k, lower.tail = TRUE, log.p = FALSE)  rgengamma.orig(n, shape, scale = 1, k)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenGamma.orig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized gamma distribution (original parameterisation) — GenGamma.orig","text":"x, q vector quantiles. shape vector ``Weibull'' shape parameters. scale vector scale parameters. k vector ``Gamma'' shape parameters. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P(X \\le x)\\), otherwise, \\(P(X > x)\\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenGamma.orig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized gamma distribution (original parameterisation) — GenGamma.orig","text":"dgengamma.orig gives density, pgengamma.orig gives distribution function, qgengamma.orig gives quantile function, rgengamma.orig generates random deviates, Hgengamma.orig retuns cumulative hazard hgengamma.orig hazard.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenGamma.orig.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generalized gamma distribution (original parameterisation) — GenGamma.orig","text":"\\(w \\sim Gamma(k,1)\\), \\(x = \\exp(w/shape + \\log(scale))\\) follows original generalised gamma distribution parameterisation given (Stacy 1962).  Defining shape\\(=b>0\\), scale\\(=>0\\), \\(x\\) probability density $$f(x | , b, k) = \\frac{b}{\\Gamma(k)} \\frac{x^{bk - 1}}{^{bk}} $$$$ \\exp(-(x/)^b)$$ original generalized gamma distribution simplifies gamma, exponential Weibull distributions following parameterisations: Also k tends infinity, tends log normal (dlnorm) following parameters (Lawless, 1980): dlnorm(x, meanlog=log(scale) + log(k)/shape, sdlog=1/(shape*sqrt(k))) stable behaviour distribution tends log-normal, alternative parameterisation developed Prentice (1974).  given dgengamma, now preferred statistical modelling.  also flexible, including new class distributions negative shape k. generalized F distribution GenF.orig, similar alternative parameterisation GenF, extend generalized gamma four parameters.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenGamma.orig.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generalized gamma distribution (original parameterisation) — GenGamma.orig","text":"Stacy, E. W. (1962). generalization gamma distribution.  Annals Mathematical Statistics 33:1187-92. Prentice, R. L. (1974). log gamma model maximum likelihood estimation. Biometrika 61(3):539-544. Lawless, J. F. (1980). Inference generalized gamma log gamma distributions.  Technometrics 22(3):409-419.","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/GenGamma.orig.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generalized gamma distribution (original parameterisation) — GenGamma.orig","text":"Christopher Jackson <chris.jackson@mrc-bsu.cam.ac.uk>","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Gompertz.html","id":null,"dir":"Reference","previous_headings":"","what":"The Gompertz distribution — Gompertz","title":"The Gompertz distribution — Gompertz","text":"Density, distribution function, hazards, quantile function random generation Gompertz distribution unrestricted shape.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Gompertz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Gompertz distribution — Gompertz","text":"","code":"dgompertz(x, shape, rate = 1, log = FALSE)  pgompertz(q, shape, rate = 1, lower.tail = TRUE, log.p = FALSE)  qgompertz(p, shape, rate = 1, lower.tail = TRUE, log.p = FALSE)  rgompertz(n, shape = 1, rate = 1)  hgompertz(x, shape, rate = 1, log = FALSE)  Hgompertz(x, shape, rate = 1, log = FALSE)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Gompertz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Gompertz distribution — Gompertz","text":"x, q vector quantiles. shape, rate vector shape rate parameters. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P(X \\le x)\\), otherwise, \\(P(X > x)\\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Gompertz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Gompertz distribution — Gompertz","text":"dgompertz gives density, pgompertz gives distribution function, qgompertz gives quantile function, hgompertz gives hazard function, Hgompertz gives cumulative hazard function, rgompertz generates random deviates.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Gompertz.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Gompertz distribution — Gompertz","text":"Gompertz distribution shape parameter \\(\\) rate parameter \\(b\\) probability density function $$f(x | , b) = ^{ax}\\exp(-b/(e^{ax} - 1))$$ hazard $$h(x | , b) = b e^{ax}$$ hazard increasing shape \\(>0\\) decreasing \\(<0\\). \\(=0\\) Gompertz equivalent exponential distribution constant hazard rate \\(b\\). probability distribution function $$F(x | , b) = 1 - \\exp(-b/(e^{ax} - 1))$$ Thus \\(\\) negative, letting \\(x\\) tend infinity shows non-zero probability \\(\\exp(b/)\\) living forever.  occasions qgompertz rgompertz return Inf.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Gompertz.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"The Gompertz distribution — Gompertz","text":"implementations Gompertz restrict \\(\\) strictly positive, ensures probability survival decreases zero \\(x\\) increases infinity.  flexible implementation given consistent streg Stata. functions eha::dgompertz similar available package eha label parameters way round, called shape called rate , called 1 / scale called shape . terminology consistent exponential dexp Weibull dweibull distributions R.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Gompertz.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The Gompertz distribution — Gompertz","text":"Stata Press (2007) Stata release 10 manual: Survival analysis epidemiological tables.","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Gompertz.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The Gompertz distribution — Gompertz","text":"Christopher Jackson <chris.jackson@mrc-bsu.cam.ac.uk>","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Llogis.html","id":null,"dir":"Reference","previous_headings":"","what":"The log-logistic distribution — Llogis","title":"The log-logistic distribution — Llogis","text":"Density, distribution function, hazards, quantile function random generation log-logistic distribution.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Llogis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The log-logistic distribution — Llogis","text":"","code":"dllogis(x, shape = 1, scale = 1, log = FALSE)  pllogis(q, shape = 1, scale = 1, lower.tail = TRUE, log.p = FALSE)  qllogis(p, shape = 1, scale = 1, lower.tail = TRUE, log.p = FALSE)  rllogis(n, shape = 1, scale = 1)  hllogis(x, shape = 1, scale = 1, log = FALSE)  Hllogis(x, shape = 1, scale = 1, log = FALSE)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Llogis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The log-logistic distribution — Llogis","text":"x, q vector quantiles. shape, scale vector shape scale parameters. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P(X \\le x)\\), otherwise, \\(P(X > x)\\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Llogis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The log-logistic distribution — Llogis","text":"dllogis gives density, pllogis gives distribution function, qllogis gives quantile function, hllogis gives hazard function, Hllogis gives cumulative hazard function, rllogis generates random deviates.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Llogis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The log-logistic distribution — Llogis","text":"log-logistic distribution shape parameter \\(>0\\) scale parameter \\(b>0\\) probability density function $$f(x | , b) = (/b) (x/b)^{-1} / (1 + (x/b)^)^2$$ hazard $$h(x | , b) = (/b) (x/b)^{-1} / (1 + (x/b)^)$$ \\(x>0\\). hazard decreasing shape \\(\\leq 1\\), unimodal \\(> 1\\). probability distribution function $$F(x | , b) = 1 - 1 / (1 + (x/b)^)$$ \\(> 1\\), mean \\(b c / sin(c)\\), \\(> 2\\) variance \\(b^2 * (2*c/sin(2*c) - c^2/sin(c)^2)\\), \\(c = \\pi/\\), otherwise undefined.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Llogis.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"The log-logistic distribution — Llogis","text":"Various different parameterisations distribution used.  one used , interpretation parameters standard Weibull distribution (dweibull).  Like Weibull, survivor function transformation \\((x/b)^\\) non-negative real line [0,1], different link function.  Covariates \\(b\\) represent time acceleration factors, ratios expected survival. parameterisation also used eha::dllogis eha package.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Llogis.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The log-logistic distribution — Llogis","text":"Stata Press (2007) Stata release 10 manual: Survival analysis epidemiological tables.","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Llogis.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The log-logistic distribution — Llogis","text":"Christopher Jackson <chris.jackson@mrc-bsu.cam.ac.uk>","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Survspline.html","id":null,"dir":"Reference","previous_headings":"","what":"Royston/Parmar spline survival distribution — Survspline","title":"Royston/Parmar spline survival distribution — Survspline","text":"Probability density, distribution, quantile, random generation, hazard,  cumulative hazard, mean restricted mean functions Royston/Parmar spline model. functions parameters distribution collected together single argument gamma. equivalent functions one argument per parameter, see Survsplinek.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Survspline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Royston/Parmar spline survival distribution — Survspline","text":"","code":"dsurvspline(   x,   gamma,   beta = 0,   X = 0,   knots = c(-10, 10),   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   offset = 0,   log = FALSE )  psurvspline(   q,   gamma,   beta = 0,   X = 0,   knots = c(-10, 10),   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   offset = 0,   lower.tail = TRUE,   log.p = FALSE )  qsurvspline(   p,   gamma,   beta = 0,   X = 0,   knots = c(-10, 10),   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   offset = 0,   lower.tail = TRUE,   log.p = FALSE )  rsurvspline(   n,   gamma,   beta = 0,   X = 0,   knots = c(-10, 10),   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   offset = 0 )  Hsurvspline(   x,   gamma,   beta = 0,   X = 0,   knots = c(-10, 10),   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   offset = 0 )  hsurvspline(   x,   gamma,   beta = 0,   X = 0,   knots = c(-10, 10),   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   offset = 0 )  rmst_survspline(   t,   gamma,   beta = 0,   X = 0,   knots = c(-10, 10),   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   offset = 0,   start = 0 )  mean_survspline(   gamma,   beta = 0,   X = 0,   knots = c(-10, 10),   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   offset = 0 )"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Survspline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Royston/Parmar spline survival distribution — Survspline","text":"x, q, t Vector times. gamma Parameters describing baseline spline function, described flexsurvspline.  may supplied vector number elements equal length knots, case parameters common times.  Alternatively matrix may supplied, rows corresponding different times, columns corresponding knots. beta Vector covariate effects.  supported ignored since version 2.3, argument removed 2.4. X Matrix covariate values. supported ignored since version 2.3, argument removed 2.4. knots Locations knots axis log time, supplied increasing order.  Unlike flexsurvspline, include two boundary knots.  additional knots, boundary locations used.  one additional knots, boundary knots beyond minimum maximum values log times.  flexsurvspline exactly minimum maximum values. may principle supplied matrix, way gamma, applications knots fixed. scale \"hazard\", \"odds\", \"normal\", described flexsurvspline.  default knots addition boundaries, model reduces Weibull, log-logistic log-normal respectively.  scale must common times. timescale \"log\" \"identity\" described flexsurvspline. spline \"rp\" use natural cubic spline basis described Royston Parmar.  \"splines2ns\" use alternative natural cubic spline basis splines2 package (Wang Yan 2021), may better behaved due basis orthogonal. offset extra constant add linear predictor \\(\\eta\\).  supported ignored since version 2.3, argument removed 2.4. log, log.p Return log density probability. lower.tail logical; TRUE (default), probabilities \\(P(X \\le x)\\), otherwise, \\(P(X > x)\\). p Vector probabilities. n Number random numbers simulate. start Optional left-truncation time times.  returned restricted mean survival conditioned survival time.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Survspline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Royston/Parmar spline survival distribution — Survspline","text":"dsurvspline gives density, psurvspline gives distribution function, hsurvspline gives hazard Hsurvspline gives cumulative hazard, described flexsurvspline. qsurvspline gives quantile function, computed crude numerical inversion (using qgeneric). rsurvspline generates random survival times using qsurvspline sample uniform random numbers.  Due numerical root-finding involved qsurvspline, slow compared typical random number generation functions.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Survspline.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Royston/Parmar spline survival distribution — Survspline","text":"Royston, P. Parmar, M. (2002).  Flexible parametric proportional-hazards proportional-odds models censored survival data, application prognostic modelling estimation treatment effects. Statistics Medicine 21(1):2175-2197. Wang W, Yan J (2021). Shape-Restricted Regression Splines R Package splines2. Journal Data Science, 19(3), 498-517.","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Survspline.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Royston/Parmar spline survival distribution — Survspline","text":"Christopher Jackson <chris.jackson@mrc-bsu.cam.ac.uk>","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Survspline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Royston/Parmar spline survival distribution — Survspline","text":"","code":"## reduces to the weibull regscale <- 0.786; cf <- 1.82 a <- 1/regscale; b <- exp(cf) dweibull(1, shape=a, scale=b) #> [1] 0.1137858 dsurvspline(1, gamma=c(log(1 / b^a), a)) # should be the same #> [1] 0.1137858  ## reduces to the log-normal meanlog <- 1.52; sdlog <- 1.11 dlnorm(1, meanlog, sdlog)  #> [1] 0.1407338 dsurvspline(1, gamma = c(-meanlog/sdlog, 1/sdlog), scale=\"normal\") #> [1] 0.1407338 # should be the same"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Survsplinek.html","id":null,"dir":"Reference","previous_headings":"","what":"Royston/Parmar spline survival distribution functions with one argument per parameter — Survsplinek","title":"Royston/Parmar spline survival distribution functions with one argument per parameter — Survsplinek","text":"Probability density, distribution, quantile, random generation, hazard,  cumulative hazard, mean restricted mean functions Royston/Parmar spline model, one argument per parameter.   equivalent functions parameters collected together single argument, see Survspline.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Survsplinek.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Royston/Parmar spline survival distribution functions with one argument per parameter — Survsplinek","text":"","code":"mean_survspline0(   gamma0,   gamma1,   knots = c(-10, 10),   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  mean_survspline1(   gamma0,   gamma1,   gamma2,   knots = c(-10, 10),   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  mean_survspline2(   gamma0,   gamma1,   gamma2,   gamma3,   knots = c(-10, 10),   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  mean_survspline3(   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   knots = c(-10, 10),   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  mean_survspline4(   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   knots = c(-10, 10),   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  mean_survspline5(   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   gamma6,   knots = c(-10, 10),   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  mean_survspline6(   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   gamma6,   gamma7,   knots = c(-10, 10),   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  mean_survspline7(   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   gamma6,   gamma7,   gamma8,   knots = c(-10, 10),   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  rmst_survspline0(   t,   gamma0,   gamma1,   knots = c(-10, 10),   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   start = 0 )  rmst_survspline1(   t,   gamma0,   gamma1,   gamma2,   knots = c(-10, 10),   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   start = 0 )  rmst_survspline2(   t,   gamma0,   gamma1,   gamma2,   gamma3,   knots = c(-10, 10),   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   start = 0 )  rmst_survspline3(   t,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   knots = c(-10, 10),   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   start = 0 )  rmst_survspline4(   t,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   knots = c(-10, 10),   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   start = 0 )  rmst_survspline5(   t,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   gamma6,   knots = c(-10, 10),   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   start = 0 )  rmst_survspline6(   t,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   gamma6,   gamma7,   knots = c(-10, 10),   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   start = 0 )  rmst_survspline7(   t,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   gamma6,   gamma7,   gamma8,   knots = c(-10, 10),   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   start = 0 )  dsurvspline0(   x,   gamma0,   gamma1,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   log = FALSE )  dsurvspline1(   x,   gamma0,   gamma1,   gamma2,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   log = FALSE )  dsurvspline2(   x,   gamma0,   gamma1,   gamma2,   gamma3,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   log = FALSE )  dsurvspline3(   x,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   log = FALSE )  dsurvspline4(   x,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   log = FALSE )  dsurvspline5(   x,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   gamma6,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   log = FALSE )  dsurvspline6(   x,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   gamma6,   gamma7,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   log = FALSE )  dsurvspline7(   x,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   gamma6,   gamma7,   gamma8,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   log = FALSE )  psurvspline0(   q,   gamma0,   gamma1,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   lower.tail = TRUE,   log.p = FALSE )  psurvspline1(   q,   gamma0,   gamma1,   gamma2,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   lower.tail = TRUE,   log.p = FALSE )  psurvspline2(   q,   gamma0,   gamma1,   gamma2,   gamma3,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   lower.tail = TRUE,   log.p = FALSE )  psurvspline3(   q,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   lower.tail = TRUE,   log.p = FALSE )  psurvspline4(   q,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   lower.tail = TRUE,   log.p = FALSE )  psurvspline5(   q,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   gamma6,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   lower.tail = TRUE,   log.p = FALSE )  psurvspline6(   q,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   gamma6,   gamma7,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   lower.tail = TRUE,   log.p = FALSE )  psurvspline7(   q,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   gamma6,   gamma7,   gamma8,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   lower.tail = TRUE,   log.p = FALSE )  qsurvspline0(   p,   gamma0,   gamma1,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   lower.tail = TRUE,   log.p = FALSE )  qsurvspline1(   p,   gamma0,   gamma1,   gamma2,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   lower.tail = TRUE,   log.p = FALSE )  qsurvspline2(   p,   gamma0,   gamma1,   gamma2,   gamma3,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   lower.tail = TRUE,   log.p = FALSE )  qsurvspline3(   p,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   lower.tail = TRUE,   log.p = FALSE )  qsurvspline4(   p,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   lower.tail = TRUE,   log.p = FALSE )  qsurvspline5(   p,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   gamma6,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   lower.tail = TRUE,   log.p = FALSE )  qsurvspline6(   p,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   gamma6,   gamma7,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   lower.tail = TRUE,   log.p = FALSE )  qsurvspline7(   p,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   gamma6,   gamma7,   gamma8,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   lower.tail = TRUE,   log.p = FALSE )  rsurvspline0(   n,   gamma0,   gamma1,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  rsurvspline1(   n,   gamma0,   gamma1,   gamma2,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  rsurvspline2(   n,   gamma0,   gamma1,   gamma2,   gamma3,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  rsurvspline3(   n,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  rsurvspline4(   n,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  rsurvspline5(   n,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   gamma6,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  rsurvspline6(   n,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   gamma6,   gamma7,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  rsurvspline7(   n,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   gamma6,   gamma7,   gamma8,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  hsurvspline0(   x,   gamma0,   gamma1,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  hsurvspline1(   x,   gamma0,   gamma1,   gamma2,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  hsurvspline2(   x,   gamma0,   gamma1,   gamma2,   gamma3,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  hsurvspline3(   x,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  hsurvspline4(   x,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  hsurvspline5(   x,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   gamma6,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  hsurvspline6(   x,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   gamma6,   gamma7,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  hsurvspline7(   x,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   gamma6,   gamma7,   gamma8,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  Hsurvspline0(   x,   gamma0,   gamma1,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  Hsurvspline1(   x,   gamma0,   gamma1,   gamma2,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  Hsurvspline2(   x,   gamma0,   gamma1,   gamma2,   gamma3,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  Hsurvspline3(   x,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  Hsurvspline4(   x,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  Hsurvspline5(   x,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   gamma6,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  Hsurvspline6(   x,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   gamma6,   gamma7,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )  Hsurvspline7(   x,   gamma0,   gamma1,   gamma2,   gamma3,   gamma4,   gamma5,   gamma6,   gamma7,   gamma8,   knots,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\" )"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Survsplinek.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Royston/Parmar spline survival distribution functions with one argument per parameter — Survsplinek","text":"gamma0, gamma1, gamma2, gamma3, gamma4, gamma5, gamma6, gamma7, gamma8 Parameters describing baseline spline function, described flexsurvspline. knots Locations knots axis log time, supplied increasing order.  Unlike flexsurvspline, include two boundary knots.  additional knots, boundary locations used.  one additional knots, boundary knots beyond minimum maximum values log times.  flexsurvspline exactly minimum maximum values. may principle supplied matrix, way gamma, applications knots fixed. scale \"hazard\", \"odds\", \"normal\", described flexsurvspline.  default knots addition boundaries, model reduces Weibull, log-logistic log-normal respectively.  scale must common times. timescale \"log\" \"identity\" described flexsurvspline. spline \"rp\" use natural cubic spline basis described Royston Parmar.  \"splines2ns\" use alternative natural cubic spline basis splines2 package (Wang Yan 2021), may better behaved due basis orthogonal. start Optional left-truncation time times.  returned restricted mean survival conditioned survival time. x, q, t Vector times. log, log.p Return log density probability. lower.tail logical; TRUE (default), probabilities \\(P(X \\le x)\\), otherwise, \\(P(X > x)\\). p Vector probabilities. n Number random numbers simulate.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Survsplinek.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Royston/Parmar spline survival distribution functions with one argument per parameter — Survsplinek","text":"functions go 7 spline knots, 9 parameters.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/Survsplinek.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Royston/Parmar spline survival distribution functions with one argument per parameter — Survsplinek","text":"Christopher Jackson <chris.jackson@mrc-bsu.cam.ac.uk>","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/WeibullPH.html","id":null,"dir":"Reference","previous_headings":"","what":"Weibull distribution in proportional hazards parameterisation — WeibullPH","title":"Weibull distribution in proportional hazards parameterisation — WeibullPH","text":"Density, distribution function, hazards, quantile function random generation Weibull distribution proportional hazards parameterisation.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/WeibullPH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weibull distribution in proportional hazards parameterisation — WeibullPH","text":"","code":"dweibullPH(x, shape, scale = 1, log = FALSE)  pweibullPH(q, shape, scale = 1, lower.tail = TRUE, log.p = FALSE)  qweibullPH(p, shape, scale = 1, lower.tail = TRUE, log.p = FALSE)  hweibullPH(x, shape, scale = 1, log = FALSE)  HweibullPH(x, shape, scale = 1, log = FALSE)  rweibullPH(n, shape, scale = 1)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/WeibullPH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weibull distribution in proportional hazards parameterisation — WeibullPH","text":"x, q Vector quantiles. shape Vector shape parameters. scale Vector scale parameters. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities \\(P(X \\le x)\\), otherwise, \\(P(X > x)\\). p Vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/WeibullPH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weibull distribution in proportional hazards parameterisation — WeibullPH","text":"dweibullPH gives density, pweibullPH gives distribution function, qweibullPH gives quantile function, rweibullPH generates random deviates, HweibullPH retuns cumulative hazard hweibullPH hazard.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/WeibullPH.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weibull distribution in proportional hazards parameterisation — WeibullPH","text":"Weibull distribution proportional hazards parameterisation `shape' parameter `scale' parameter m density given $$f(x) = m x^{-1} exp(- m x^) $$ cumulative distribution function \\(F(x) = 1 - exp( -m x^)\\), survivor function \\(S(x) = exp( -m x^)\\), cumulative hazard \\(m x^\\) hazard \\(m x^{-1}\\). dweibull base R alternative 'accelerated failure time' (AFT) parameterisation shape scale b.  shape parameter \\(\\) versions.  scale parameters related \\(b = m^{-1/}\\), equivalently m = b^-. survival modelling, covariates typically included linear model log scale parameter.  Thus, proportional hazards model, coefficients model \\(m\\) interpreted log hazard ratios. AFT model, covariates \\(b\\) interpreted time acceleration factors.  example, doubling value covariate coefficient \\(beta=log(2)\\) give half expected survival time. coefficients related log hazard ratios \\(\\gamma\\) \\(\\beta = -\\gamma / \\).","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/WeibullPH.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Weibull distribution in proportional hazards parameterisation — WeibullPH","text":"Christopher Jackson <chris.jackson@mrc-bsu.cam.ac.uk>","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/ajfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Aalen-Johansen nonparametric estimates comparable to a fitted flexsurvmix model — ajfit","title":"Aalen-Johansen nonparametric estimates comparable to a fitted flexsurvmix model — ajfit","text":"Given fitted flexsurvmix model, return Aalen-Johansen estimates probability occupying state series times covering observed data.  State 1 represents experienced competing events, state 2 states correspond experienced competing events respectively.  estimates can compared fitted probabilities returned p_flexsurvmix check fit flexsurvmix model.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/ajfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aalen-Johansen nonparametric estimates comparable to a fitted flexsurvmix model — ajfit","text":"","code":"ajfit(x, newdata = NULL, tidy = TRUE)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/ajfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aalen-Johansen nonparametric estimates comparable to a fitted flexsurvmix model — ajfit","text":"x Fitted model returned flexsurvmix. newdata Data frame alternative covariate values check fit . factor covariates supported. tidy TRUE single tidy data frame returned. Otherwise function returns object returned survfit, list objects computing subset-specific estimates.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/ajfit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aalen-Johansen nonparametric estimates comparable to a fitted flexsurvmix model — ajfit","text":"supported models covariates models containing factor covariates. models factor covariates, Aalen-Johansen estimates computed subsets data defined newdata.  newdata supplied, function returns state occupancy probabilities possible combinations factor levels. Aalen-Johansen estimates computed using survfit survival package (Therneau 2020).","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/ajfit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Aalen-Johansen nonparametric estimates comparable to a fitted flexsurvmix model — ajfit","text":"Therneau T (2020). _A Package Survival Analysis R_. R   package version 3.2-3, <URL: https://CRAN.R-project.org/package=survival>.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/ajfit_flexsurvmix.html","id":null,"dir":"Reference","previous_headings":"","what":"Forms a tidy data frame for plotting the fit of parametric mixture multi-state models against nonparametric estimates — ajfit_flexsurvmix","title":"Forms a tidy data frame for plotting the fit of parametric mixture multi-state models against nonparametric estimates — ajfit_flexsurvmix","text":"computes Aalen-Johansen estimates probability occupying state series times, using ajfit. equivalent estimates parametric model produced using p_flexsurvmix, concatenated nonparametric estimates form tidy data frame. data frame can simply plotted using ggplot.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/ajfit_flexsurvmix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forms a tidy data frame for plotting the fit of parametric mixture multi-state models against nonparametric estimates — ajfit_flexsurvmix","text":"","code":"ajfit_flexsurvmix(x, maxt = NULL, startname = \"Start\", B = NULL)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/ajfit_flexsurvmix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forms a tidy data frame for plotting the fit of parametric mixture multi-state models against nonparametric estimates — ajfit_flexsurvmix","text":"x Fitted model returned flexsurvmix. maxt Maximum time produce parametric estimates .  default maximum event time data, maximum time nonparametric estimates . startname Label give state corresponding \"event happened yet\".  default \"Start\". B Number simulation replications use calculate confidence interval parametric estimates p_flexsurvmix.  Comparable intervals Aalen-Johansen estimates returned set.  Otherwise B=NULL intervals returned.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/ajfit_fmsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the fit of Markov flexible parametric multi-state models against nonparametric estimates. — ajfit_fmsm","title":"Check the fit of Markov flexible parametric multi-state models against nonparametric estimates. — ajfit_fmsm","text":"Computes parametric comparable Aalen-Johansen nonparametric estimates flexible parametric multi-state model, returns together tidy data frame.  models covariates, factor covariates, supported.  factor covariates, nonparametric estimates computed subgroups defined combinations covariates.  Another restriction function transitions must covariates .","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/ajfit_fmsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the fit of Markov flexible parametric multi-state models against nonparametric estimates. — ajfit_fmsm","text":"","code":"ajfit_fmsm(x, maxt = NULL, newdata = NULL)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/ajfit_fmsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the fit of Markov flexible parametric multi-state models against nonparametric estimates. — ajfit_fmsm","text":"x Object returned fmsm representing flexible parametric multi-state model.  must Markov, rather semi-Markov, check performed .   Note \"competing risks\" style models, just one source state multiple destination states, Markov, fine . maxt Maximum time compute parametric estimates . newdata Data frame defining subgroups consider.  must column covariate model.  omitted, potential subgroups defined combinations factor covariates included.  Continuous covariates supported.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/ajfit_fmsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the fit of Markov flexible parametric multi-state models against nonparametric estimates. — ajfit_fmsm","text":"Tidy data frame containing Aalen-Johansen parametric   estimates state occupancy time, subgroup subgroups   included.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/augment.flexsurvreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Augment data with information from a flexsurv model object — augment.flexsurvreg","title":"Augment data with information from a flexsurv model object — augment.flexsurvreg","text":"Augment accepts model object dataset adds information observation dataset. commonly, includes predicted values .fitted column, residuals .resid column, standard errors fitted values .se.fit column. New columns always begin . prefix avoid overwriting columns original dataset.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/augment.flexsurvreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Augment data with information from a flexsurv model object — augment.flexsurvreg","text":"","code":"# S3 method for flexsurvreg augment(   x,   data = NULL,   newdata = NULL,   type.predict = \"response\",   type.residuals = \"response\",   ... )"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/augment.flexsurvreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Augment data with information from a flexsurv model object — augment.flexsurvreg","text":"x Output flexsurvreg flexsurvspline, representing fitted survival model object. data data.frame tibble containing original data used produce object x. newdata data.frame tibble containing original predictors used create x. Defaults NULL, indicating nothing passed newdata. newdata specified, data argument ignored. type.predict Character indicating type prediction use. Passed type argument predict generic. Allowed arguments vary model class, sure read predict.my_class documentation. type.residuals Character indicating type residuals use. Passed type argument residuals generic. Allowed arguments vary model class, sure read residuals.my_class documentation. ... Additional arguments. currently used.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/augment.flexsurvreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Augment data with information from a flexsurv model object — augment.flexsurvreg","text":"tibble containing data newdata possible additional columns: .fitted Fitted values model .se.fit Standard errors fitted values .resid Residuals (present newdata specified)","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/augment.flexsurvreg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Augment data with information from a flexsurv model object — augment.flexsurvreg","text":"neither data newdata specified, model.frame(x) used. worth noting model.frame(x) include Surv object original time--event variables used fitting flexsurvreg object. original data desired, specify data.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/augment.flexsurvreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Augment data with information from a flexsurv model object — augment.flexsurvreg","text":"","code":"fit <- flexsurvreg(formula = Surv(futime, fustat) ~ age, data = ovarian, dist = \"exp\") augment(fit, data = ovarian) #> # A tibble: 26 × 9 #>    futime fustat   age resid.ds    rx ecog.ps .pred_time .std_error  .resid #>     <dbl>  <dbl> <dbl>    <dbl> <dbl>   <dbl>      <dbl>      <dbl>   <dbl> #>  1     59      1  72.3        2     1       1       213.       113.  -154.  #>  2    115      1  74.5        2     1       1       165.       103.   -49.8 #>  3    156      1  66.5        2     1       2       427.       149.  -271.  #>  4    421      0  53.4        2     2       1      2016.       879. -1595.  #>  5    431      1  50.3        2     1       1      2886.      1576. -2455.  #>  6    448      0  56.4        1     1       2      1402.       495.  -954.  #>  7    464      1  56.9        2     2       2      1320.       452.  -856.  #>  8    475      1  59.9        2     2       2       934.       281.  -459.  #>  9    477      0  64.2        2     1       1       560.       174.   -82.8 #> 10    563      1  55.2        1     2       2      1626.       623. -1063.  #> # ℹ 16 more rows"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/basis.html","id":null,"dir":"Reference","previous_headings":"","what":"Natural cubic spline basis — basis","title":"Natural cubic spline basis — basis","text":"Compute basis natural cubic spline, default using parameterisation described Royston Parmar (2002).  Used flexible parametric survival models.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/basis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Natural cubic spline basis — basis","text":"","code":"basis(knots, x, spline = \"rp\")"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/basis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Natural cubic spline basis — basis","text":"knots Vector knot locations increasing order, including boundary knots beginning end. x Vector ordinates compute basis . spline \"rp\" use natural cubic spline basis described Royston Parmar.  \"splines2ns\" use alternative natural cubic spline basis splines2 package (Wang Yan 2021), may better behaved due basis orthogonal.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/basis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Natural cubic spline basis — basis","text":"matrix one row ordinate one column knot. basis returns basis, dbasis returns derivative respect x. fss dfss , order arguments swapped around consistency similar functions R packages.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/basis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Natural cubic spline basis — basis","text":"exact formula basis given flexsurvspline.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/basis.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Natural cubic spline basis — basis","text":"Royston, P. Parmar, M. (2002).  Flexible parametric proportional-hazards proportional-odds models censored survival data, application prognostic modelling estimation treatment effects. Statistics Medicine 21(1):2175-2197. Wang W, Yan J (2021). Shape-Restricted Regression Splines R Package splines2. Journal Data Science, 19(3), 498-517.","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/basis.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Natural cubic spline basis — basis","text":"Christopher Jackson <chris.jackson@mrc-bsu.cam.ac.uk>","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/bc.html","id":null,"dir":"Reference","previous_headings":"","what":"Breast cancer survival data — bc","title":"Breast cancer survival data — bc","text":"Survival times 686 patients primary node positive breast cancer.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/bc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Breast cancer survival data — bc","text":"","code":"bc"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/bc.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Breast cancer survival data — bc","text":"data frame 686 rows.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/bc.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Breast cancer survival data — bc","text":"German Breast Cancer Study Group, 1984-1989.  Used reference dataset spline-based survival model Royston Parmar (2002), implemented flexsurvspline.  Originally provided stpm (Royston 2001, 2004) stpm2 (Lambert 2009, 2010) Stata modules.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/bc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Breast cancer survival data — bc","text":"Royston, P. Parmar, M. (2002).  Flexible parametric proportional-hazards proportional-odds models censored survival data, application prognostic modelling estimation treatment effects. Statistics Medicine 21(1):2175-2197. Sauerbrei, W. Royston, P. (1999). Building multivariable prognostic diagnostic models: transformation predictors using fractional polynomials.  Journal Royal Statistical Society, Series 162:71-94.","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/bootci.fmsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap confidence intervals for flexsurv output functions — bootci.fmsm","title":"Bootstrap confidence intervals for flexsurv output functions — bootci.fmsm","text":"Calculate confidence interval model output repeatedly replacing parameters fitted model object draw multivariate normal distribution maximum likelihood estimates, recalculating output function.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/bootci.fmsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap confidence intervals for flexsurv output functions — bootci.fmsm","text":"","code":"bootci.fmsm(   x,   B,   fn,   cl = 0.95,   attrs = NULL,   cores = NULL,   sample = FALSE,   ... )"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/bootci.fmsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap confidence intervals for flexsurv output functions — bootci.fmsm","text":"x Output flexsurvreg flexsurvspline, representing fitted survival model object.  list objects, defining multi-state model. B Number parameter draws use fn Function bootstrap results .  must argument named x giving fitted flexsurv model object.  may return value format, e.g. list, matrix vector, long can converted numeric vector unlist.   See example . cl Width symmetric confidence interval, default 0.95 attrs attributes value returned fn want confidence intervals .  unlisted, possible, appended result vector. cores Number cores use parallel processing. sample TRUE bootstrap sample returned.  FALSE quantiles sample returned giving confidence interval. ... Additional arguments pass fn.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/bootci.fmsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap confidence intervals for flexsurv output functions — bootci.fmsm","text":"matrix two rows, giving upper lower confidence limits respectively.  row vector length unlisted result function corresponding fncall.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/bootci.fmsm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap confidence intervals for flexsurv output functions — bootci.fmsm","text":"","code":"## How to use bootci.fmsm  ## Write a function with one argument called x giving a fitted model, ## and returning some results of the model.  The results may be in any form.     tmat <- rbind(c(NA,1,2),c(NA,NA,3),c(NA,NA,NA)) bexp <- flexsurvreg(Surv(Tstart, Tstop, status) ~ trans, data=bosms3, dist=\"exp\")  summfn <- function(x, t){  resp <-  flexsurv::pmatrix.fs(x, trans=tmat, t=t)  rest <- flexsurv::totlos.fs(x, trans=tmat, t=t)  list(resp, rest) }  ## Use bootci.fmsm to obtain the confidence interval ## The matrix columns are in the order of the unlisted results of the original ## summfn.  You will have to rearrange them into the format that you want. ## If summfn has any extra arguments, in this case \\code{t}, make sure they are ## passed through via the ... argument to bootci.fmsm  bootci.fmsm(bexp, B=3, fn=summfn, t=10) #>             [,1] [,2] [,3]      [,4]       [,5] [,6]      [,7]      [,8] [,9] #> 2.5%  0.08592861    0    0 0.1375007 0.06010952    0 0.7355608 0.9103557    1 #> 97.5% 0.09767351    0    0 0.1713291 0.08964429    0 0.7652248 0.9398905    1 #>          [,10] [,11] [,12]    [,13]    [,14] [,15]    [,16]    [,17] [,18] #> 2.5%  3.724345     0     0 1.965259 3.340625     0 3.920215 6.225585    10 #> 97.5% 3.879065     0     0 2.259760 3.774415     0 4.160991 6.659375    10 bootci.fmsm(bexp, B=3, fn=summfn, t=5) #>            [,1] [,2] [,3]      [,4]      [,5] [,6]      [,7]      [,8] [,9] #> 2.5%  0.2517227    0    0 0.2579086 0.2297033    0 0.4145488 0.7130623    1 #> 97.5% 0.3156585    0    0 0.2714704 0.2869377    0 0.4902755 0.7702967    1 #>          [,10] [,11] [,12]    [,13]    [,14] [,15]     [,16]    [,17] [,18] #> 2.5%  2.711962     0     0 1.049453 2.617790     0 0.9831934 2.144306     5 #> 97.5% 2.967353     0     0 1.101155 2.855694     0 1.1868829 2.382210     5"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/bos.html","id":null,"dir":"Reference","previous_headings":"","what":"Bronchiolitis obliterans syndrome after lung transplants — bos","title":"Bronchiolitis obliterans syndrome after lung transplants — bos","text":"dataset containing histories bronchiolitis obliterans syndrome (BOS) lung transplant recipients. BOS chronic decline lung function, often observed lung transplantation.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/bos.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Bronchiolitis obliterans syndrome after lung transplants — bos","text":"data frame containing sequence observed censored transitions next stage severity death.  grouped patient includes histories 204 patients.  patients start state 1 (BOS) six months transplant, may subsequently develop BOS die. bosms3 contains data three-state model: BOS, BOS death. bosms4 uses four-state representation: BOS, mild BOS, moderate/severe BOS death.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/bos.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Bronchiolitis obliterans syndrome after lung transplants — bos","text":"Papworth Hospital, U.K.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/bos.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bronchiolitis obliterans syndrome after lung transplants — bos","text":"entry time patient stage BOS estimated clinicians, based history lung function measurements acute rejection infection episodes.  BOS assumed occur beyond six months transplant.  first six months function patient's new lung stabilises.  Subsequently BOS diagnosed comparing lung function \"baseline\" value. data provided msm package, native format msm allow Markov models fitted. flexsurv, much flexible models can fitted.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/bos.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bronchiolitis obliterans syndrome after lung transplants — bos","text":"Heng. D. et al. (1998).  Bronchiolitis Obliterans Syndrome: Incidence, Natural History, Prognosis, Risk Factors.  Journal Heart Lung Transplantation 17(12)1255--1263.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/coef.flexsurvreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract model coefficients from fitted flexible survival models — coef.flexsurvreg","title":"Extract model coefficients from fitted flexible survival models — coef.flexsurvreg","text":"Extract model coefficients fitted flexible survival models.  presents parameter estimates, transformed real line necessary. example, shape scale parameters, constrained positive, returned log scale.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/coef.flexsurvreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract model coefficients from fitted flexible survival models — coef.flexsurvreg","text":"","code":"# S3 method for flexsurvreg coef(object, ...)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/coef.flexsurvreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract model coefficients from fitted flexible survival models — coef.flexsurvreg","text":"object Output flexsurvreg flexsurvspline, representing fitted survival model object. ... arguments passed methods.  Currently unused.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/coef.flexsurvreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract model coefficients from fitted flexible survival models — coef.flexsurvreg","text":"returns mod$res.t[,\"est\"] component fitted model object mod.  See flexsurvreg, flexsurvspline full documentation components.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/coef.flexsurvreg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract model coefficients from fitted flexible survival models — coef.flexsurvreg","text":"matches behaviour coef.default standard R model families glm, intercepts regression models presented scale covariate effects.  Note parameter distribution fitted flexsurvreg flexsurvreg may intercept regression model.","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/coef.flexsurvreg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract model coefficients from fitted flexible survival models — coef.flexsurvreg","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/coxsnell_flexsurvreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Cox-Snell residuals from a parametric survival model — coxsnell_flexsurvreg","title":"Cox-Snell residuals from a parametric survival model — coxsnell_flexsurvreg","text":"Cox-Snell residuals parametric survival model","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/coxsnell_flexsurvreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cox-Snell residuals from a parametric survival model — coxsnell_flexsurvreg","text":"","code":"coxsnell_flexsurvreg(x)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/coxsnell_flexsurvreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cox-Snell residuals from a parametric survival model — coxsnell_flexsurvreg","text":"x Object returned flexsurvreg flexsurvspline representing fitted survival model","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/coxsnell_flexsurvreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cox-Snell residuals from a parametric survival model — coxsnell_flexsurvreg","text":"data frame column called est giving Cox-Snell residual, defined fitted cumulative hazard data point.  fitted cumulative hazard given observed data point, columns indicating observation time,  observed event status, covariate values defining data point. cumulative hazards est form censored sample Exponential(1).   Therefore check fit model, plot nonparametric estimate cumulative hazard curve diagonal line origin, theoretical cumulative hazard trajectory Exponential(1).","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/coxsnell_flexsurvreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cox-Snell residuals from a parametric survival model — coxsnell_flexsurvreg","text":"","code":"fitg <- flexsurvreg(formula = Surv(futime, fustat) ~ age, data = ovarian, dist = \"gengamma\")   cs <- coxsnell_flexsurvreg(fitg)      ## Model appears to fit well, with some small sample noise    surv <- survfit(Surv(cs$est, ovarian$fustat) ~ 1)   plot(surv, fun=\"cumhaz\")   abline(0, 1, col=\"red\")"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/dot-hess_to_cov.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function to safely convert a Hessian matrix to covariance matrix — .hess_to_cov","title":"helper function to safely convert a Hessian matrix to covariance matrix — .hess_to_cov","text":"helper function safely convert Hessian matrix covariance matrix","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/dot-hess_to_cov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function to safely convert a Hessian matrix to covariance matrix — .hess_to_cov","text":"","code":".hess_to_cov(hessian, tol.solve = 1e-09, tol.evalues = 1e-05, ...)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/dot-hess_to_cov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function to safely convert a Hessian matrix to covariance matrix — .hess_to_cov","text":"hessian hessian matrix convert covariance matrix (must evaluated MLE) tol.solve tolerance used solve() tol.evalues accepted tolerance negative eigenvalues covariance matrix ... arguments passed Matrix::nearPD","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/dot-hessian.html","id":null,"dir":"Reference","previous_headings":"","what":"Numerical evaluation of the hessian of a function using numDeriv::hessian — .hessian","title":"Numerical evaluation of the hessian of a function using numDeriv::hessian — .hessian","text":"perform quick check expected runtime adjust precision accordingly.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/dot-hessian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Numerical evaluation of the hessian of a function using numDeriv::hessian — .hessian","text":"","code":".hessian(f, x, seconds.warning = 60, default.r = 6, min.r = 2, ...)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/dot-hessian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Numerical evaluation of the hessian of a function using numDeriv::hessian — .hessian","text":"f function compute Hessian x location evaluate Hessian seconds.warning time threshold seconds trigger message reduce number iterations Richardson extrapolation numDeriv::hessian default.r default number iterations (high-precision recommendation numDeriv) min.r minial number iteration, must least 2, ... arguments passed method.args numDeriv::hessian","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurv-package.html","id":null,"dir":"Reference","previous_headings":"","what":"flexsurv: Flexible parametric survival and multi-state models — flexsurv-package","title":"flexsurv: Flexible parametric survival and multi-state models — flexsurv-package","text":"flexsurv: Flexible parametric models time--event data, including generalized gamma, generalized F Royston-Parmar spline model, extensible user-defined distributions.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurv-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"flexsurv: Flexible parametric survival and multi-state models — flexsurv-package","text":"flexsurvreg fits parametric models time--event (survival) data.  Data may right-censored, /left-censored, /left-truncated.  Several built-parametric distributions available. user-defined parametric model can also employed supplying list basic information distribution, including density hazard ideally also cumulative distribution hazard. Covariates can included using linear model parameter distribution, log-transformed real line necessary.  typically defines accelerated failure time proportional hazards model, depending distribution parameter. flexsurvspline fits flexible survival model Royston Parmar (2002) log cumulative hazard modelled natural cubic spline function log time.  Covariates can included spline parameters, giving either proportional hazards model arbitrarily-flexible time-dependent effect.  Alternative proportional odds probit parameterisations available. Output models can presented survivor, cumulative hazard hazard functions (summary.flexsurvreg).  can plotted nonparametric estimates (plot.flexsurvreg) assess goodness--fit.  user-defined function parameters may summarised way. Multi-state models time--event data can also fitted functions.  Predictions models can made using functions pmatrix.fs, pmatrix.simfs, totlos.fs, totlos.simfs, sim.fmsm, alternatively msfit.flexsurvreg followed mssample probtrans package mstate. Distribution (``dpqr'') functions generalized gamma F distributions given GenGamma, GenF (preferred parameterisations) GenGamma.orig, GenF.orig (original parameterisations). flexsurv also includes standard Gompertz distribution unrestricted shape parameter, see Gompertz.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurv-package.html","id":"user-guide","dir":"Reference","previous_headings":"","what":"User guide","title":"flexsurv: Flexible parametric survival and multi-state models — flexsurv-package","text":"flexsurv user guide vignette explains methods detail, gives several worked examples.  vignette flexsurv-examples gives complicated examples, users encouraged submit .","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurv-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"flexsurv: Flexible parametric survival and multi-state models — flexsurv-package","text":"Jackson, C. (2016). flexsurv: Platform Parametric Survival Modeling R. Journal Statistical Software, 70(8), 1-33. doi:10.18637/jss.v070.i08 Royston, P. Parmar, M. (2002).  Flexible parametric proportional-hazards proportional-odds models censored survival data, application prognostic modelling estimation treatment effects. Statistics Medicine 21(1):2175-2197. Cox, C. (2008). generalized \\(F\\) distribution: umbrella parametric survival analysis.  Statistics Medicine 27:4301-4312. Cox, C., Chu, H., Schneider, M. F. Muñoz, . (2007).  Parametric survival analysis taxonomy hazard functions generalized gamma distribution.  Statistics Medicine 26:4252-4374","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurv-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"flexsurv: Flexible parametric survival and multi-state models — flexsurv-package","text":"Christopher Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvmix.html","id":null,"dir":"Reference","previous_headings":"","what":"Flexible parametric mixture models for times to competing events — flexsurvmix","title":"Flexible parametric mixture models for times to competing events — flexsurvmix","text":"mixture model competing events, individual can experience one set different events.  specify model probability experience event others, model time event conditionally event occurring first.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvmix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flexible parametric mixture models for times to competing events — flexsurvmix","text":"","code":"flexsurvmix(   formula,   data,   event,   dists,   pformula = NULL,   anc = NULL,   partial_events = NULL,   initp = NULL,   inits = NULL,   fixedpars = NULL,   dfns = NULL,   method = \"direct\",   em.control = NULL,   optim.control = NULL,   aux = NULL,   sr.control = survreg.control(),   integ.opts,   hess.control = NULL,   ... )"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvmix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flexible parametric mixture models for times to competing events — flexsurvmix","text":"formula Survival model formula.  left hand side Surv   object specified flexsurvreg.  may define various   kinds censoring, described Surv. covariates   right hand side formula placed location   parameter every component-specific distribution. Covariates   parameters component-specific distributions may supplied  using   anc argument. Alternatively, formula may list formulae, one   component alternative event.  may used specify   different covariates location parameter different components. list formulae may also used indicate particular   individuals, different events may observed different ways,   different censoring mechanisms.   list component specifies data   censoring scheme mixture component. example, suppose studying people admitted hospital,  competing states death hospital discharge hospital.    time t know particular individual still alive,   know whether still hospital, discharged.    case, individual die hospital, death time   right censored t.  individual () discharged   death, discharge time completely unknown, thus   interval-censored (0,Inf). Therefore,  need store different event   time status variables data different alternative events.   specified formula = list(\"discharge\" = Surv(t1di, t2di, type=\"interval2\"),   \"death\" = Surv(t1de, status_de)) individual, (t1di, t2di) = (0, Inf) (t1de,   status_de)  = (t, 0). \"dot\" notation commonly used indicate \"remaining variables\"   formula supported flexsurvmix. data Data frame containing variables mentioned formula, event anc. event Variable data specifies alternative   events observed individual.  individual's follow-  right-censored, event otherwise unknown, variable must   value NA. Ideally factor, since mixture components can   easily identified results name instead number.    already factor, coerced one.   levels   factor define required order components list arguments   dists, anc, inits dfns.  Alternatively,   components list arguments named according levels   event, components can arranged order. dists Vector specifying parametric distribution use component. distributions supported flexsurvreg. pformula Formula describing covariates include component membership proabilities multinomial logistic regression.  first component treated baseline. \"dot\" notation commonly used indicate \"remaining variables\" formula supported. anc List component-specific lists, length equal number   components.   component-specific list list formulae   representing covariate effects parameters distribution. covariates one component others, list   containing one null formula location parameter supplied   component covariates, e.g list(rate=~1)   location parameter called rate. Covariates location parameter may also supplied instead   formula.  Supplying anc allows components   others covariates location parameter.  covariate   location parameter provided formula,    covariates parameters, null formula included    location parameter anc, e.g list(rate=~1) partial_events List specifying factor levels event   indicate knowledge individual experience particular   events, may experience others.   names list indicate codes   indicate partial knowledge individuals.  list component   vector, must subset levels(event) defining   events person corresponding event code may experience. example, suppose three alternative events called   \"disease1\",\"disease2\" \"disease3\",   individuals know experience \"disease2\",   may experience two events.  case must create   new factor level, called, example \"disease1or3\", set   value event \"disease1or3\" individuals.   use \"partial_events\" argument tell   flexsurvmix potential events individuals   new factor level. partial_events = list(\"disease1or3\" = c(\"disease1\",\"disease3\")) initp Initial values component membership probabilities.  default, assumed equal component. inits List component-specific vectors. component-specific vector contains initial values parameters component-specific model, supplied inits argument flexsurvreg.   default, heuristic used obtain initial values, depends parametric distribution used, usually based empirical mean /variance survival times. fixedpars Indexes parameters fix initial values   optimise. Arranged order: baseline mixing probabilities,   covariates mixing probabilities, time--event parameters mixing   component.  Within mixing components, time--event parameters ordered   way flexsurvreg. fixedpars=TRUE parameters fixed   function simply calculates log-likelihood initial values. currently supported using EM algorithm. dfns List lists user-defined distribution functions, one mixture component.  list component specified dfns argument flexsurvreg. method Method maximising likelihood.  Either \"em\" EM algorithm, \"direct\" direct maximisation. em.control List settings control EM algorithm fitting.    options currently available trace set 1 print parameter estimates iteration   EM algorithm reltol convergence criterion.  algorithm stops log   likelihood changes relative amount less reltol.    default optim, ,   sqrt(.Machine$double.eps). var.method method compute covariance matrix. \"louis\"   method Louis (1982), \"direct\"direct numerical   calculation Hessian log likelihood. optim.p.control list passed control   argument  optim M step component membership   probability parameters. optimisation M step   time--event parameters can controlled optim.control   argument flexsurvmix. example, em.control = list(trace=1, reltol=1e-12). optim.control List options pass control argument optim,  used method=\"direct\" M step time--event parameters method=\"em\".  default, uses fnscale=10000 ndeps=rep(1e-06,p) p number parameters estimated, unless user specifies options explicitly. aux named list arguments pass custom distribution functions.  used, example, flexsurvspline supply knot locations modelling scale (e.g. hazard odds).  used fix parameters distribution --- use fixedpars . sr.control models use survreg find maximum likelihood estimates (Weibull, exponential, log-normal), list passed control argument survreg. integ.opts List named arguments pass   integrate, custom density hazard provided without   cumulative version.  example, integ.opts = list(rel.tol=1e-12) hess.control List options control covariance matrix computation.     Available options : numeric.  TRUE numerical methods used   compute Hessian models analytic Hessian   available.  models include Weibull (versions),   exponential, Gompertz spline models hazard odds   scale.  default use analytic Hessian   models.  models, numerical methods always used   compute Hessian, whether option set. tol.solve. tolerance used solve   inverting Hessian (default .Machine$double.eps) tol.evalues accepted tolerance negative   eigenvalues covariance matrix (default 1e-05). Hessian positive definite, thus invertible, maximum   likelihood.  Hessian computed optimisation convergence   inverted, either converged result   maximum likelihood (e.g. \"saddle point\"),   numerical methods used obtain Hessian inaccurate.   suspect Hessian computed wrongly enough   invertible, wrongly enough nearest valid inverse   inaccurate estimate covariance matrix, tolerance   values can modified (reducing tol.solve increasing   tol.evalues) allow inverse computed. ... Optional arguments general-purpose optimisation routine optim.  example, BFGS optimisation algorithm default flexsurvreg, can changed, example method=\"Nelder-Mead\" can robust poor initial values.  optimisation fails converge, consider normalising problem using, example, control=list(fnscale = 2500), example, replacing 2500 number order magnitude likelihood. 'false' convergence reported non-positive-definite Hessian, consider tightening tolerance criteria convergence. optimisation takes long time, intermediate steps can printed using trace argument control list. See optim details.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvmix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flexible parametric mixture models for times to competing events — flexsurvmix","text":"List objects containing information fitted model.     important one res, data frame containing parameter   estimates associated information.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvmix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flexible parametric mixture models for times to competing events — flexsurvmix","text":"differs usual \"competing risks\" models, specify \"cause-specific hazards\" describing time competing event.  time observed individual one competing events happens first.  event happens first defined minimum times alternative events. flexsurvmix function fits mixture model data consisting single time event individual, indicator type event occurs individual.   time event may observed censored, just flexsurvreg, type event may known unknown. typical application, follow set individuals experience event maximum follow-time reached, event type known time observed, event type unknown follow-ends time right-censored. model fitted maximum likelihood, either directly using expectation-maximisation (EM) algorithm, wrapping flexsurvreg compute likelihood implement E M steps. worked examples given package vignette multi-state modelling, can viewed running vignette(\"multistate\", package=\"flexsurv\").","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvmix.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Flexible parametric mixture models for times to competing events — flexsurvmix","text":"Jackson, C. H. Tom, B. D. M. Kirwan, P. D. Mandal, S. Seaman, S. R. Kunzmann, K. Presanis, . M. De Angelis, D. (2022) comparison two frameworks multi-state modelling, applied outcomes hospital admissions COVID-19.  Statistical Methods Medical Research 31(9) 1656-1674. Larson, M. G., & Dinse, G. E. (1985). mixture model   regression analysis competing risks data. Journal Royal   Statistical Society: Series C (Applied Statistics), 34(3), 201-211. Lau, B., Cole, S. R., & Gange, S. J. (2009). Competing risk regression   models epidemiologic data. American Journal Epidemiology, 170(2),   244-256.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Flexible parametric regression for time-to-event data — flexsurvreg","title":"Flexible parametric regression for time-to-event data — flexsurvreg","text":"Parametric modelling regression time--event data.  Several built-distributions available, users may supply .","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flexible parametric regression for time-to-event data — flexsurvreg","text":"","code":"flexsurvreg(   formula,   anc = NULL,   data,   weights,   bhazard,   rtrunc,   subset,   na.action,   dist,   inits,   fixedpars = NULL,   dfns = NULL,   aux = NULL,   cl = 0.95,   integ.opts = NULL,   sr.control = survreg.control(),   hessian = TRUE,   hess.control = NULL,   ... )"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flexible parametric regression for time-to-event data — flexsurvreg","text":"formula formula expression conventional R linear modelling   syntax. response must survival object returned   Surv function, covariates given   right-hand side.  example, Surv(time, dead) ~ age + sex Surv objects type=\"right\",\"counting\",   \"interval1\" \"interval2\" supported, corresponding   right-censored, left-truncated interval-censored observations. covariates, specify 1 right hand side,   example Surv(time, dead) ~ 1. right hand side specified . remaining variables   included covariates. example, Surv(time, dead) ~ .   corresponds Surv(time, dead) ~ age + sex data contains   variables time, dead, age, sex. default, covariates placed ``location'' parameter   distribution, typically \"scale\" \"rate\" parameter, linear   model, log-linear model parameter must positive.    gives accelerated failure time model proportional hazards model   (see dist ) depending distribution   parameterised. Covariates can placed (``ancillary'') parameters using   name parameter ``function'' formula.  example,   Weibull model, following expresses scale parameter terms age   treatment variable treat, shape parameter terms   sex treatment. Surv(time, dead) ~ age + treat + shape(sex) + shape(treat) However, names ancillary parameters clash real   functions might used formulae ((),   factor()), functions work formula.    safer way model covariates ancillary parameters   anc argument flexsurvreg. survreg users also note function   strata() ignored, covariates surrounded   strata() applied location parameter.  Likewise   function frailty() handled. anc alternative safer way model covariates ancillary   parameters, , parameters main location parameter   distribution.  named list formulae, name   component giving parameter modelled.  model can also   defined : Surv(time, dead) ~ age + treat, anc = list(shape = ~ sex +   treat) data data frame find variables supplied formula.  given, variables working environment. weights Optional numeric variable giving weights individual data.  fitted model defined maximising weighted sum individual-specific log-likelihoods. bhazard Optional variable giving expected hazards relative   survival models.  model described Nelson et al. (2007). bhazard contain vector values person   data.  people observed events, bhazard refers   hazard observed event time. people whose event time   left-censored interval-censored, bhazard contain   probability dying end corresponding interval,   conditionally alive start. people whose event time   right-censored, value bhazard ignored   need specified. bhazard supplied, parameter estimates returned   flexsurvreg outputs returned summary.flexsurvreg   describe parametric model relative survival. relative survival models, log-likelihood returned flexsurvreg partial   log-likelihood, omits constant term defined sum   cumulative hazards event censoring time individual.      Hence constant must added full likelihood needed. rtrunc Optional variable giving individual-specific right-truncation   times.  Used analysing data \"retrospective ascertainment\".    example, suppose want estimate distribution time   onset disease death, observed cases known   died current date.   case, times onset death   individuals data right-truncated current date minus   onset date.   Predicted survival times new cases can described   un-truncated version fitted distribution. models can suffer weakly identifiable parameters   badly-behaved likelihood functions, advised compare   convergence different initial values supplying different   inits arguments flexsurvreg. subset Vector integers logicals specifying subset observations used fit. na.action missing-data filter function, applied 'subset' argument used. Default options()$na.action. dist Typically, one strings first column   following table, identifying built-distribution.  table also   identifies location parameters, whether covariates   parameters represent proportional hazards (PH) accelerated failure   time (AFT) model.  accelerated failure time model, covariate   speeds slows passage time.  coefficient   (presented log scale) log(2), doubling covariate value   give half expected survival time.  \"exponential\" \"lognormal\" can used aliases   \"exp\" \"lnorm\", compatibility   survreg. Alternatively, dist can list specifying custom distribution.   See section ``Custom distributions'' construct list. flexible spline-based distributions can also fitted   flexsurvspline. parameterisations built-distributions used   built-distribution functions: dgengamma,   dgengamma.orig, dgenf,   dgenf.orig, dweibull, dgamma,   dexp, dlnorm, dgompertz,   respectively.  functions base R used available,   otherwise, provided package. package vignette \"Distributions reference\" lists survivor functions   covariate effect parameterisations used built-distribution. Weibull, exponential log-normal distributions,   flexsurvreg simply works calling survreg   obtain maximum likelihood estimates, calling optim   double-check convergence obtain covariance matrix   flexsurvreg's preferred parameterisation. Weibull parameterisation different   survreg, instead consistent   dweibull.  \"scale\" reported   survreg equivalent 1/shape defined   dweibull hence flexsurvreg.  first   coefficient (Intercept) reported survreg   equivalent log(scale) dweibull   flexsurvreg. Similarly exponential distribution, rate, rather mean,   modelled covariates. object flexsurv.dists lists names built-  distributions, parameters, location parameter, functions used   transform parameter ranges real line,   functions used generate initial values parameter   estimation. inits optional numeric vector giving initial values   unknown parameter.  numbered order: baseline parameters   (order appear distribution function, e.g. shape   scale Weibull), covariate effects location parameter,   covariate effects remaining parameters.  order   printed estimates fitted model. specified, default initial values chosen simple summary   survival censoring times, example mean often used   initialize scale parameters.  See object flexsurv.dists   exact methods used.  likelihood surface may uneven,   advised run optimisation starting various different initial   values ensure convergence true global maximum. fixedpars Vector indices parameters whose values fixed initial values optimisation.  indices ordered inits.  example, stable generalized Gamma model two covariates, fix third three generalized gamma parameters (shape Q, see help GenGamma) second covariate, specify fixedpars = c(3, 5) dfns alternative way define custom survival distribution (see   section ``Custom distributions'' ).  list whose components may   include \"d\", \"p\", \"h\", \"H\" containing   probability density, cumulative distribution, hazard, cumulative hazard   functions distribution.  example, list(d=dllogis, p=pllogis). dfns used, custom dlist must still provided,   dllogis pllogis need visible global   environment.  useful flexsurvreg called within   functions environments distribution functions also   defined dynamically. aux named list arguments pass custom distribution functions.  used, example, flexsurvspline supply knot locations modelling scale (e.g. hazard odds).  used fix parameters distribution --- use fixedpars . cl Width symmetric confidence intervals maximum likelihood estimates, default 0.95. integ.opts List named arguments pass   integrate, custom density hazard provided without   cumulative version.  example, integ.opts = list(rel.tol=1e-12) sr.control models use survreg find maximum likelihood estimates (Weibull, exponential, log-normal), list passed control argument survreg. hessian Calculate covariances confidence intervals parameters. Defaults TRUE. hess.control List options control covariance matrix computation.     Available options : numeric.  TRUE numerical methods used   compute Hessian models analytic Hessian   available.  models include Weibull (versions),   exponential, Gompertz spline models hazard odds   scale.  default use analytic Hessian   models.  models, numerical methods always used   compute Hessian, whether option set. tol.solve. tolerance used solve   inverting Hessian (default .Machine$double.eps) tol.evalues accepted tolerance negative   eigenvalues covariance matrix (default 1e-05). Hessian positive definite, thus invertible, maximum   likelihood.  Hessian computed optimisation convergence   inverted, either converged result   maximum likelihood (e.g. \"saddle point\"),   numerical methods used obtain Hessian inaccurate.   suspect Hessian computed wrongly enough   invertible, wrongly enough nearest valid inverse   inaccurate estimate covariance matrix, tolerance   values can modified (reducing tol.solve increasing   tol.evalues) allow inverse computed. ... Optional arguments general-purpose optimisation routine optim.  example, BFGS optimisation algorithm default flexsurvreg, can changed, example method=\"Nelder-Mead\" can robust poor initial values.  optimisation fails converge, consider normalising problem using, example, control=list(fnscale = 2500), example, replacing 2500 number order magnitude likelihood. 'false' convergence reported non-positive-definite Hessian, consider tightening tolerance criteria convergence. optimisation takes long time, intermediate steps can printed using trace argument control list. See optim details.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flexible parametric regression for time-to-event data — flexsurvreg","text":"list class \"flexsurvreg\" containing information   fitted model.  Components interest users may include: call copy function call, use post-processing. dlist List defining survival distribution used. res Matrix maximum likelihood estimates confidence limits,   parameters natural scales. res.t Matrix maximum   likelihood estimates confidence limits, parameters   transformed real line (using log transform built-  models necessary).    coef, vcov   confint methods flexsurvreg objects work   scale. coefficients transformed maximum likelihood   estimates, res.t. Calling coef()   flexsurvreg object simply returns component. loglik Log-likelihood. differ Stata, sum   log uncensored survival times added log-likelihood   survival models, remove dependency time scale. relative survival models specified bhazard, partial    log-likelihood omits constant term defined sum   cumulative hazards event censoring times. logliki Vector individual contributions log-likelihood AIC Akaike's information criterion (-2*log likelihood + 2*number   estimated parameters) cov Covariance matrix parameters,   real-line scale (e.g. log scale), can extracted   vcov. data Data used model fit.  extract   standard R formats, use use   model.frame.flexsurvreg   model.matrix.flexsurvreg.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvreg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flexible parametric regression for time-to-event data — flexsurvreg","text":"Parameters estimated maximum likelihood using algorithms available standard R optim function.  Parameters defined positive estimated log scale.  Confidence intervals estimated Hessian maximum, transformed back original scale parameters. usage flexsurvreg intended similar survreg survival package.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvreg.html","id":"custom-distributions","dir":"Reference","previous_headings":"","what":"Custom distributions","title":"Flexible parametric regression for time-to-event data — flexsurvreg","text":"flexsurvreg intended   easy extend handle new distributions.  define new distribution   use flexsurvreg, construct list following   elements:  \"name\" string naming distribution.    called \"dist\", example, must visible   working environment, least, either ) function called ddist defines probability density, b) function called hdist defines hazard. Ideally, case ) also function called pdist   defines probability distribution cumulative density,   case b) function called Hdist defining   cumulative hazard.  additional functions provided,   flexsurv attempts automatically create numerically   integrating density hazard function.  However, model fitting   much slower, may even work , analytic versions   functions available. functions must accept vector arguments (representing different times,   alternative values parameter) return results   vector.  function Vectorize may helpful   : see example . functions may add-package (see example) may user-written.  user-written must defined global environment, supplied explicitly dfns argument flexsurvreg.  latter may useful functions created dynamically (source flexsurvspline) thus visible R's scoping rules. Arguments parameters must named conventional way -- example x first argument density function hazard, dnorm(x, ...) q first argument probability function.  Density functions also argument log, parameters, TRUE, computes log density, using numerically stable additive formula possible. Additional functions names beginning \"DLd\" \"DLS\" may defined calculate derivatives log density log survival probability, respect parameters distribution.  parameters expressed real line, example log transformation defined positive.  first argument must named t, representing time, remaining arguments must named parameters density function. function must return matrix rows corresponding times, columns corresponding parameters distribution.  derivatives used, available, speed model fitting optim. \"pars\" Vector strings naming parameters distribution. must names arguments density probability functions. \"location\" Name main parameter governing mean distribution.  default parameter covariates placed formula supplied flexsurvreg. \"transforms\" List R functions transform range values taken parameter onto real line.  example, c(log, log) distribution two positive parameters. \"inv.transforms\" List R functions defining corresponding inverse transformations.  Note must lists, even single parameter distributions supplied , e.g. c(exp) list(exp). \"inits\" function observed survival times t (including right-censoring times, using halfway point interval-censored times) returns vector reasonable initial values maximum likelihood estimation parameter.  example, function(t){ c(1, mean(t)) } always initialize first two parameters 1, second (scale parameter, instance) mean t. example, suppose want use extreme value survival distribution. available CRAN package eha, provides conventionally-defined density probability functions called eha::dEV eha::pEV.  See Examples custom list case, subsequent command fit model.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvreg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Flexible parametric regression for time-to-event data — flexsurvreg","text":"Jackson, C. (2016). flexsurv: Platform Parametric Survival Modeling R. Journal Statistical Software, 70(8), 1-33. doi:10.18637/jss.v070.i08 Cox, C. (2008) generalized \\(F\\) distribution: umbrella parametric survival analysis.  Statistics Medicine 27:4301-4312. Cox, C., Chu, H., Schneider, M. F. Muñoz, . (2007) Parametric survival analysis taxonomy hazard functions generalized gamma distribution.  Statistics Medicine 26:4252-4374 Jackson, C. H. Sharples, L. D. Thompson, S. G. (2010) Survival models health economic evaluations: balancing fit parsimony improve prediction. International Journal Biostatistics 6(1):Article 34. Nelson, C. P., Lambert, P. C., Squire, . B., & Jones, D. R. (2007). Flexible parametric models relative survival, application coronary heart disease. Statistics medicine, 26(30), 5486-5498.","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvreg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Flexible parametric regression for time-to-event data — flexsurvreg","text":"Christopher Jackson <chris.jackson@mrc-bsu.cam.ac.uk>","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flexible parametric regression for time-to-event data — flexsurvreg","text":"","code":"## Compare generalized gamma fit with Weibull fitg <- flexsurvreg(formula = Surv(futime, fustat) ~ 1, data = ovarian, dist=\"gengamma\") fitg #> Call: #> flexsurvreg(formula = Surv(futime, fustat) ~ 1, data = ovarian,  #>     dist = \"gengamma\") #>  #> Estimates:  #>        est     L95%    U95%    se     #> mu      6.426   4.984   7.868   0.736 #> sigma   1.426   0.888   2.292   0.345 #> Q      -0.766  -3.340   1.807   1.313 #>  #> N = 26,  Events: 12,  Censored: 14 #> Total time at risk: 15588 #> Log-likelihood = -96.94907, df = 3 #> AIC = 199.8981 #>  fitw <- flexsurvreg(formula = Surv(futime, fustat) ~ 1, data = ovarian, dist=\"weibull\") fitw #> Call: #> flexsurvreg(formula = Surv(futime, fustat) ~ 1, data = ovarian,  #>     dist = \"weibull\") #>  #> Estimates:  #>        est       L95%      U95%      se       #> shape     1.108     0.674     1.822     0.281 #> scale  1225.419   690.421  2174.979   358.714 #>  #> N = 26,  Events: 12,  Censored: 14 #> Total time at risk: 15588 #> Log-likelihood = -97.9539, df = 2 #> AIC = 199.9078 #>  plot(fitg) lines(fitw, col=\"blue\", lwd.ci=1, lty.ci=1) ## Identical AIC, probably not enough data in this simple example for a ## very flexible model to be worthwhile.  ## Custom distribution ## make \"dEV\" and \"pEV\" from eha package (if installed) ##   available to the working environment if (require(\"eha\")) { custom.ev <- list(name=\"EV\",                       pars=c(\"shape\",\"scale\"),                       location=\"scale\",                       transforms=c(log, log),                       inv.transforms=c(exp, exp),                       inits=function(t){ c(1, median(t)) }) fitev <- flexsurvreg(formula = Surv(futime, fustat) ~ 1, data = ovarian,                     dist=custom.ev) fitev lines(fitev, col=\"purple\", col.ci=\"purple\") } #> Loading required package: eha #>  #> Attaching package: ‘eha’ #> The following objects are masked from ‘package:flexsurv’: #>  #>     Hgompertz, Hllogis, Hlnorm, Hweibull, dgompertz, dllogis, #>     hgompertz, hllogis, hlnorm, hweibull, pgompertz, pllogis, #>     qgompertz, qllogis, rgompertz, rllogis #> Forming integrated rmst function... #> Forming integrated mean function...    ## Custom distribution: supply the hazard function only hexp2 <- function(x, rate=1){ rate } # exponential distribution hexp2 <- Vectorize(hexp2) custom.exp2 <- list(name=\"exp2\", pars=c(\"rate\"), location=\"rate\",                     transforms=c(log), inv.transforms=c(exp),                     inits=function(t)1/mean(t)) flexsurvreg(Surv(futime, fustat) ~ 1, data = ovarian, dist=custom.exp2) #> Error in form.dp(dlist, dfns, integ.opts): Neither density function \"dexp2\" nor hazard function \"hexp2\" found flexsurvreg(Surv(futime, fustat) ~ 1, data = ovarian, dist=\"exp\") #> Call: #> flexsurvreg(formula = Surv(futime, fustat) ~ 1, data = ovarian,  #>     dist = \"exp\") #>  #> Estimates:  #>       est       L95%      U95%      se       #> rate  0.000770  0.000437  0.001356  0.000222 #>  #> N = 26,  Events: 12,  Censored: 14 #> Total time at risk: 15588 #> Log-likelihood = -98.0322, df = 1 #> AIC = 198.0644 #>  ## should give same answer"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvrtrunc.html","id":null,"dir":"Reference","previous_headings":"","what":"Flexible parametric models for right-truncated, uncensored data defined by times of initial and final events. — flexsurvrtrunc","title":"Flexible parametric models for right-truncated, uncensored data defined by times of initial and final events. — flexsurvrtrunc","text":"function estimates distribution time initial final event, situations individuals observed experienced events certain time, thus right-truncated time.   time initial event provides information time initial final event, given truncated observation scheme, initial events assumed occur exponential growth rate.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvrtrunc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flexible parametric models for right-truncated, uncensored data defined by times of initial and final events. — flexsurvrtrunc","text":"","code":"flexsurvrtrunc(   t,   tinit,   rtrunc,   tmax,   data = NULL,   method = \"joint\",   dist,   theta = NULL,   fixed.theta = TRUE,   inits = NULL,   fixedpars = NULL,   dfns = NULL,   integ.opts = NULL,   cl = 0.95,   optim_control = list() )"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvrtrunc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flexible parametric models for right-truncated, uncensored data defined by times of initial and final events. — flexsurvrtrunc","text":"t Vector time differences initial final event set individuals. tinit Absolute time initial event individual. rtrunc Individual-specific right truncation points scale t, individual's survival time t observed greater corresponding element rtrunc.  used method=\"joint\".  method=\"final\", right-truncation implicit. tmax Maximum possible time initial final events observed.  used method=\"joint\", ignored method=\"final\". data Data frame containing t, rtrunc tinit. method \"joint\" \"joint-conditional\" method used.  \"final\" \"conditional--final\" method used.   \"conditional--initial\" method can implemented using flexsurvreg rtrunc argument.  methods described Seaman et al. (2020). dist Typically, one strings first column   following table, identifying built-distribution.  table also   identifies location parameters, whether covariates   parameters represent proportional hazards (PH) accelerated failure   time (AFT) model.  accelerated failure time model, covariate   speeds slows passage time.  coefficient   (presented log scale) log(2), doubling covariate value   give half expected survival time.  \"exponential\" \"lognormal\" can used aliases   \"exp\" \"lnorm\", compatibility   survreg. Alternatively, dist can list specifying custom distribution.   See section ``Custom distributions'' construct list. flexible spline-based distributions can also fitted   flexsurvspline. parameterisations built-distributions used   built-distribution functions: dgengamma,   dgengamma.orig, dgenf,   dgenf.orig, dweibull, dgamma,   dexp, dlnorm, dgompertz,   respectively.  functions base R used available,   otherwise, provided package. package vignette \"Distributions reference\" lists survivor functions   covariate effect parameterisations used built-distribution. Weibull, exponential log-normal distributions,   flexsurvreg simply works calling survreg   obtain maximum likelihood estimates, calling optim   double-check convergence obtain covariance matrix   flexsurvreg's preferred parameterisation. Weibull parameterisation different   survreg, instead consistent   dweibull.  \"scale\" reported   survreg equivalent 1/shape defined   dweibull hence flexsurvreg.  first   coefficient (Intercept) reported survreg   equivalent log(scale) dweibull   flexsurvreg. Similarly exponential distribution, rate, rather mean,   modelled covariates. object flexsurv.dists lists names built-  distributions, parameters, location parameter, functions used   transform parameter ranges real line,   functions used generate initial values parameter   estimation. theta Initial value (fixed value) exponential growth rate theta. Defaults 1. fixed.theta theta fixed initial value estimated.  applies method=\"joint\".  method=\"final\", theta must fixed. inits Initial values parameters parametric survival distributon. supplied, heuristic used. done flexsurvreg. fixedpars Integer indices parameters survival distribution fixed values supplied inits.   length inits. dfns alternative way define custom survival distribution (see   section ``Custom distributions'' ).  list whose components may   include \"d\", \"p\", \"h\", \"H\" containing   probability density, cumulative distribution, hazard, cumulative hazard   functions distribution.  example, list(d=dllogis, p=pllogis). dfns used, custom dlist must still provided,   dllogis pllogis need visible global   environment.  useful flexsurvreg called within   functions environments distribution functions also   defined dynamically. integ.opts List named arguments pass   integrate, custom density hazard provided without   cumulative version.  example, integ.opts = list(rel.tol=1e-12) cl Width symmetric confidence intervals maximum likelihood estimates, default 0.95. optim_control List supply control argument optim control likelihood maximisation.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvrtrunc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flexible parametric models for right-truncated, uncensored data defined by times of initial and final events. — flexsurvrtrunc","text":"Covariates currently supported. Note flexsurvreg, rtrunc argument, can fit models similar kind data, models ignore information provided time initial event. nonparametric estimator survival right-truncation also provided survrtrunc.  See Seaman et al. (2020) full comparison alternative models.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvrtrunc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Flexible parametric models for right-truncated, uncensored data defined by times of initial and final events. — flexsurvrtrunc","text":"Seaman, S., Presanis, . Jackson, C. (2020) Estimating Time--Event Distribution Right-Truncated Data Epidemic: Review Methods","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvrtrunc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flexible parametric models for right-truncated, uncensored data defined by times of initial and final events. — flexsurvrtrunc","text":"","code":"set.seed(1)  ## simulate time to initial event X <- rexp(1000, 0.2) ## simulate time between initial and final event T <- rgamma(1000, 2, 10)   ## right-truncate to keep only those with final event time ## before tmax tmax <- 40 obs <- X + T < tmax  rtrunc <- tmax - X dat <- data.frame(X, T, rtrunc)[obs,]  flexsurvrtrunc(t=T, rtrunc=rtrunc, tinit=X, tmax=40, data=dat,                 dist=\"gamma\", theta=0.2) #> Call: #> flexsurvrtrunc(t = T, tinit = X, rtrunc = rtrunc, tmax = 40,  #>     data = dat, dist = \"gamma\", theta = 0.2) #>  #> Estimates:  #>         pars   est   lcl   ucl  estlog   selog #> shape  shape  1.93  1.78   2.1   0.659  0.0414 #> rate    rate  9.22  8.39  10.1   2.222  0.0483 #> theta  theta  1.22    NA    NA   0.200      NA #>  #> Log-likelihood = -7846.25, df = 2 #> AIC = 15696.5 #>   flexsurvrtrunc(t=T, rtrunc=rtrunc, tinit=X, tmax=40, data=dat,                 dist=\"gamma\", theta=0.2, fixed.theta=FALSE) #> Call: #> flexsurvrtrunc(t = T, tinit = X, rtrunc = rtrunc, tmax = 40,  #>     data = dat, dist = \"gamma\", theta = 0.2, fixed.theta = FALSE) #>  #> Estimates:  #>         pars    est    lcl     ucl  estlog    selog #> shape  shape  1.932  1.781   2.095   0.658  0.04144 #> rate    rate  9.419  8.586  10.334   2.243  0.04728 #> theta  theta  0.824  0.814   0.834  -0.193  0.00621 #>  #> Log-likelihood = -1949.284, df = 3 #> AIC = 3904.568 #>   flexsurvrtrunc(t=T, rtrunc=rtrunc, tinit=X, tmax=40, data=dat,                 dist=\"gamma\", theta=0.2, inits=c(1, 8)) #> Call: #> flexsurvrtrunc(t = T, tinit = X, rtrunc = rtrunc, tmax = 40,  #>     data = dat, dist = \"gamma\", theta = 0.2, inits = c(1, 8)) #>  #> Estimates:  #>         pars   est   lcl   ucl  estlog   selog #> shape  shape  1.93  1.78   2.1   0.659  0.0414 #> rate    rate  9.22  8.39  10.1   2.222  0.0483 #> theta  theta  1.22    NA    NA   0.200      NA #>  #> Log-likelihood = -7846.25, df = 2 #> AIC = 15696.5 #>   flexsurvrtrunc(t=T, rtrunc=rtrunc, tinit=X, tmax=40, data=dat,                 dist=\"gamma\", theta=0.2, method=\"final\") #> Call: #> flexsurvrtrunc(t = T, tinit = X, rtrunc = rtrunc, tmax = 40,  #>     data = dat, method = \"final\", dist = \"gamma\", theta = 0.2) #>  #> Estimates:  #>         pars   est   lcl   ucl  estlog   selog #> shape  shape  1.94  1.79  2.11   0.663  0.0415 #> rate    rate  9.05  8.22  9.97   2.203  0.0493 #> theta  theta  1.22    NA    NA   0.200      NA #>  #> Log-likelihood = 715.5208, df = 2 #> AIC = -1427.042 #>   flexsurvrtrunc(t=T, rtrunc=rtrunc, tinit=X, tmax=40, data=dat,                 dist=\"gamma\", fixed.theta=TRUE) #> Call: #> flexsurvrtrunc(t = T, tinit = X, rtrunc = rtrunc, tmax = 40,  #>     data = dat, dist = \"gamma\", fixed.theta = TRUE) #>  #> Estimates:  #>         pars   est   lcl   ucl  estlog   selog #> shape  shape  1.93  1.78  2.09   0.658  0.0415 #> rate    rate  8.41  7.58  9.33   2.130  0.0529 #> theta  theta  2.72    NA    NA   1.000      NA #>  #> Log-likelihood = -33947.91, df = 2 #> AIC = 67899.82 #>   flexsurvrtrunc(t=T, rtrunc=rtrunc, tinit=X, tmax=40, data=dat,                 dist=\"weibull\", fixed.theta=TRUE) #> Call: #> flexsurvrtrunc(t = T, tinit = X, rtrunc = rtrunc, tmax = 40,  #>     data = dat, dist = \"weibull\", fixed.theta = TRUE) #>  #> Estimates:  #>         pars    est    lcl    ucl  estlog   selog #> shape  shape  1.501  1.430  1.577   0.406  0.0249 #> scale  scale  0.252  0.241  0.264  -1.378  0.0240 #> theta  theta  2.718     NA     NA   1.000      NA #>  #> Log-likelihood = -33950.21, df = 2 #> AIC = 67904.42 #>   flexsurvrtrunc(t=T, rtrunc=rtrunc, tinit=X, tmax=40, data=dat,                 dist=\"lnorm\", fixed.theta=TRUE) #> Call: #> flexsurvrtrunc(t = T, tinit = X, rtrunc = rtrunc, tmax = 40,  #>     data = dat, dist = \"lnorm\", fixed.theta = TRUE) #>  #> Estimates:  #>             pars     est     lcl    ucl  estlog   selog #> meanlog  meanlog  -1.694  -1.758  -1.63  -1.694  0.0325 #> sdlog      sdlog   0.893   0.848   0.94  -0.113  0.0264 #> theta      theta   2.718      NA     NA   1.000      NA #>  #> Log-likelihood = -33991.77, df = 2 #> AIC = 67987.55 #>   flexsurvrtrunc(t=T, rtrunc=rtrunc, tinit=X, tmax=40, data=dat,                 dist=\"gengamma\", fixed.theta=TRUE) #> Call: #> flexsurvrtrunc(t = T, tinit = X, rtrunc = rtrunc, tmax = 40,  #>     data = dat, dist = \"gengamma\", fixed.theta = TRUE) #>  #> Estimates:  #>         pars     est     lcl     ucl  estlog   selog #> mu        mu  -1.446  -1.520  -1.371  -1.446  0.0379 #> sigma  sigma   0.702   0.657   0.750  -0.354  0.0335 #> Q          Q   0.798   0.631   0.964   0.798  0.0851 #> theta  theta   2.718      NA      NA   1.000      NA #>  #> Log-likelihood = -33947.48, df = 3 #> AIC = 67900.97 #>   flexsurvrtrunc(t=T, rtrunc=rtrunc, tinit=X, tmax=40, data=dat,                 dist=\"gompertz\", fixed.theta=TRUE) #> Call: #> flexsurvrtrunc(t = T, tinit = X, rtrunc = rtrunc, tmax = 40,  #>     data = dat, dist = \"gompertz\", fixed.theta = TRUE) #>  #> Estimates:  #>         pars   est   lcl   ucl  estlog   selog #> shape  shape  2.58  2.18  2.97   2.576  0.2009 #> rate    rate  2.63  2.37  2.92   0.968  0.0532 #> theta  theta  2.72    NA    NA   1.000      NA #>  #> Log-likelihood = -33990.12, df = 2 #> AIC = 67984.25 #>"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvspline.html","id":null,"dir":"Reference","previous_headings":"","what":"Flexible survival regression using the Royston/Parmar spline model. — flexsurvspline","title":"Flexible survival regression using the Royston/Parmar spline model. — flexsurvspline","text":"Flexible parametric modelling time--event data using spline model Royston Parmar (2002).","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvspline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flexible survival regression using the Royston/Parmar spline model. — flexsurvspline","text":"","code":"flexsurvspline(   formula,   data,   weights,   bhazard,   rtrunc,   subset,   k = 0,   knots = NULL,   bknots = NULL,   scale = \"hazard\",   timescale = \"log\",   spline = \"rp\",   ... )"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvspline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flexible survival regression using the Royston/Parmar spline model. — flexsurvspline","text":"formula formula expression conventional R linear modelling syntax. response must survival object returned Surv function, covariates given right-hand side.  example, Surv(time, dead) ~ age + sex specifies model log cumulative hazard (default, see scale) linear function covariates age sex. covariates, specify 1 right hand side, example Surv(time, dead) ~ 1. Time-varying covariate effects can specified using method described flexsurvreg placing covariates ancillary parameters.  ancillary parameters named gamma1, ..., gammar r number knots k plus one (``degrees freedom'' defined Royston Parmar).  default Weibull model, just one ancillary parameter gamma1. Therefore model one internal spline knot, equivalents Weibull shape scale parameters, higher-order term gamma2, vary age sex, can specified : Surv(time, dead) ~ age + sex + gamma1(age) + gamma1(sex) alternatively (safely, see flexsurvreg) Surv(time, dead) ~ age + sex, anc=list(gamma1=~age + sex) Surv objects type=\"right\",\"counting\", \"interval1\" \"interval2\" supported, corresponding right-censored, left-truncated interval-censored observations. data data frame find variables supplied formula.  given, variables working environment. weights Optional variable giving case weights. bhazard Optional variable giving expected hazards relative survival models. rtrunc Optional variable giving individual right-truncation times (see flexsurvreg).  Note models can suffer weakly identifiable parameters badly-behaved likelihood functions, advised compare convergence different initial values supplying different inits arguments flexsurvspline. subset Vector integers logicals specifying subset observations used fit. k Number knots spline. default k=0 gives Weibull, log-logistic lognormal model, \"scale\" \"hazard\", \"odds\" \"normal\" respectively.  k equivalent df-1 notation stpm Stata.  knots chosen equally-spaced quantiles log uncensored survival times, example, median one knot, 33% 67% quantiles log time (time, see \"timescale\") two knots.  override default knot placement, specify knots instead. knots Locations knots axis log time (time, see \"timescale\").  specified, knot locations chosen described k .  Either k knots must specified. specified, knots overrides k. bknots Locations boundary knots, axis log time (time, see \"timescale\").  supplied, chosen minimum maximum log death time. scale \"hazard\", log cumulative hazard modelled spline function. \"odds\", log cumulative odds modelled spline function. \"normal\", \\(-\\Phi^{-1}(S(t))\\) modelled spline function, \\(\\Phi^{-1}()\\) inverse normal distribution function qnorm. timescale \"log\" (default) log cumulative hazard (alternative) modelled spline function log time.  \"identity\", modelled spline function time, however model satisfy desirable property cumulative hazard (alternative) approach 0 time zero. spline \"rp\" use natural cubic spline basis   described Royston Parmar. \"splines2ns\" use alternative natural cubic spline   basis splines2 package (Wang Yan 2021),   may better behaved due basis orthogonal. ... arguments passed flexsurvreg, example, anc, inits, fixedpars, weights, subset, na.action, options control optimisation.  See flexsurvreg.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvspline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flexible survival regression using the Royston/Parmar spline model. — flexsurvspline","text":"list class \"flexsurvreg\" elements described flexsurvreg, including extra components describing spline model.  See particular: k Number knots. knots Location knots log time axis. scale scale model, hazard, odds normal. res Matrix maximum likelihood estimates confidence limits. Spline coefficients labelled \"gamma...\", covariate effects labelled names covariates. Coefficients gamma1,gamma2,... equivalent s0,s1,... Stata streg, gamma0 equivalent xb constant term.  reproduce results, use noorthog option Stata, since orthogonalisation performed spline basis . Weibull model, example, gamma0,gamma1 -shape*log(scale), shape respectively dweibull flexsurvreg notation, (-Intercept/scale, 1/scale) survreg notation. log-logistic model shape scale b (eha::dllogis eha package), 1/b^equivalent exp(gamma0), equivalent gamma1. log-normal model log-scale mean mu standard deviation sigma, -mu/sigma equivalent gamma0 1/sigma equivalent gamma1. loglik maximised log-likelihood.  differ Stata, sum log uncensored survival times added log-likelihood survival models, remove dependency time scale.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvspline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flexible survival regression using the Royston/Parmar spline model. — flexsurvspline","text":"function works wrapper around flexsurvreg dynamically constructing custom distribution using dsurvspline, psurvspline unroll.function. spline-based survival model Royston Parmar (2002), transformation \\(g(S(t,z))\\) survival function modelled natural cubic spline function log time \\(x = \\log(t)\\) plus linear effects covariates \\(z\\). $$g(S(t,z)) = s(x, \\bm{\\gamma}) + \\bm{\\beta}^T \\mathbf{z}$$ proportional hazards model (scale=\"hazard\") defines \\(g(S(t,\\mathbf{z})) = \\log(-\\log(S(t,\\mathbf{z}))) = \\log(H(t,\\mathbf{z}))\\), log cumulative hazard. proportional odds model (scale=\"odds\") defines \\(g(S(t,\\mathbf{z})) \\)\\( = \\log(S(t,\\mathbf{z})^{-1} - 1)\\), log cumulative odds. probit model (scale=\"normal\") defines \\(g(S(t,\\mathbf{z})) = \\)\\( -\\Phi^{-1}(S(t,\\mathbf{z}))\\), \\(\\Phi^{-1}()\\) inverse normal distribution function qnorm. knots, spline reduces linear function, models equivalent Weibull, log-logistic lognormal models respectively. spline coefficients \\(\\gamma_j: j=1, 2 \\ldots \\), called \"ancillary parameters\" , may also modelled linear functions covariates \\(\\mathbf{z}\\), $$\\gamma_j(\\mathbf{z}) = \\gamma_{j0} + \\gamma_{j1}z_1 + \\gamma_{j2}z_2 + ... $$ giving model effects covariates arbitrarily flexible functions time: non-proportional hazards odds model. Natural cubic splines cubic splines constrained linear beyond boundary knots \\(k_{min},k_{max}\\).  spline function defined $$s(x,\\bm{\\gamma}) = \\gamma_0 + \\gamma_1 x + \\gamma_2 v_1(x) + \\ldots + $$$$ \\gamma_{m+1} v_m(x)$$ \\(v_j(x)\\) \\(j\\)th basis function $$v_j(x) = (x - k_j)^3_+ - \\lambda_j(x - k_{min})^3_+ - (1 - $$$$ \\lambda_j) (x - k_{max})^3_+$$ $$\\lambda_j = \\frac{k_{max} - k_j}{k_{max} - k_{min}}$$ \\((x - )_+ = max(0, x - )\\).","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvspline.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Flexible survival regression using the Royston/Parmar spline model. — flexsurvspline","text":"Royston, P. Parmar, M. (2002).  Flexible parametric proportional-hazards proportional-odds models censored survival data, application prognostic modelling estimation treatment effects. Statistics Medicine 21(1):2175-2197. Wang W, Yan J (2021). Shape-Restricted Regression Splines R Package splines2. Journal Data Science, 19(3), 498-517. Jackson, C. (2016). flexsurv: Platform Parametric Survival Modeling R. Journal Statistical Software, 70(8), 1-33. doi:10.18637/jss.v070.i08","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvspline.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Flexible survival regression using the Royston/Parmar spline model. — flexsurvspline","text":"Christopher Jackson <chris.jackson@mrc-bsu.cam.ac.uk>","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/flexsurvspline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flexible survival regression using the Royston/Parmar spline model. — flexsurvspline","text":"","code":"## Best-fitting model to breast cancer data from Royston and Parmar (2002) ## One internal knot (2 df) and cumulative odds scale  spl <- flexsurvspline(Surv(recyrs, censrec) ~ group, data=bc, k=1, scale=\"odds\")  ## Fitted survival  plot(spl, lwd=3, ci=FALSE)  ## Simple Weibull model fits much less well  splw <- flexsurvspline(Surv(recyrs, censrec) ~ group, data=bc, k=0, scale=\"hazard\") lines(splw, col=\"blue\", ci=FALSE)   ## Alternative way of fitting the Weibull  if (FALSE) { splw2 <- flexsurvreg(Surv(recyrs, censrec) ~ group, data=bc, dist=\"weibull\") }"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/fmixmsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a mixture multi-state model based on flexsurvmix — fmixmsm","title":"Constructor for a mixture multi-state model based on flexsurvmix — fmixmsm","text":"Constructor mixture multi-state model based flexsurvmix","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/fmixmsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a mixture multi-state model based on flexsurvmix — fmixmsm","text":"","code":"fmixmsm(...)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/fmixmsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a mixture multi-state model based on flexsurvmix — fmixmsm","text":"... Named arguments.  argument fitted model returned flexsurvmix.  name argument names starting state model.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/fmixmsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a mixture multi-state model based on flexsurvmix — fmixmsm","text":"list flexsurvmix objects, following   attribute(s):  pathways list potential pathways absorption,   models without cycles.   models cycles element  has_cycle=TRUE, plus pathways discovered function   found cycle gave .","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/fmsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a multi-state model from a set of parametric survival models — fmsm","title":"Construct a multi-state model from a set of parametric survival models — fmsm","text":"Construct multi-state model set parametric survival models","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/fmsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a multi-state model from a set of parametric survival models — fmsm","text":"","code":"fmsm(..., trans)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/fmsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a multi-state model from a set of parametric survival models — fmsm","text":"... Objects returned flexsurvreg flexsurvspline representing fitted survival models. trans matrix integers specifying models correspond transitions.  \\(r,s\\) entry \\(\\)th argument specified ... model state \\(r\\) state \\(s\\) transition.  entry NA  transition disallowed.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/fmsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a multi-state model from a set of parametric survival models — fmsm","text":"list containing objects given ...,   attributes \"trans\" \"statenames\" defining transition   structure matrix state names, list components named   describe transitions correspond .  arguments  ... named, used define transition names,   otherwise default names chosen based state names.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/get_basepars.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate baseline time-to-event distribution parameters given covariate values in a flexsurvmix model — get_basepars","title":"Evaluate baseline time-to-event distribution parameters given covariate values in a flexsurvmix model — get_basepars","text":"Evaluate baseline time--event distribution parameters given covariate values flexsurvmix model","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/get_basepars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate baseline time-to-event distribution parameters given covariate values in a flexsurvmix model — get_basepars","text":"","code":"get_basepars(x, newdata, event)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/get_basepars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate baseline time-to-event distribution parameters given covariate values in a flexsurvmix model — get_basepars","text":"x Fitted model object newdata Data frame alternative covariate values event Event","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/glance.flexsurvreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Glance at a flexsurv model object — glance.flexsurvreg","title":"Glance at a flexsurv model object — glance.flexsurvreg","text":"Glance accepts model object returns tibble exactly one row model summaries.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/glance.flexsurvreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Glance at a flexsurv model object — glance.flexsurvreg","text":"","code":"# S3 method for flexsurvreg glance(x, ...)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/glance.flexsurvreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Glance at a flexsurv model object — glance.flexsurvreg","text":"x Output flexsurvreg flexsurvspline, representing fitted survival model object. ... currently used.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/glance.flexsurvreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Glance at a flexsurv model object — glance.flexsurvreg","text":"one-row tibble containing columns: N Number observations used fitting events Number events censored Number censored events trisk Total length time--risk (.e. follow-) df Degrees freedom (.e. number estimated parameters) logLik Log-likelihood AIC Akaike's \"Information Criteria\" BIC Bayesian Information Criteria","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/glance.flexsurvreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Glance at a flexsurv model object — glance.flexsurvreg","text":"","code":"fitg <- flexsurvreg(formula = Surv(futime, fustat) ~ age, data = ovarian, dist = \"gengamma\") glance(fitg) #> # A tibble: 1 × 8 #>       N events censored trisk    df logLik   AIC   BIC #>   <int>  <int>    <int> <dbl> <int>  <dbl> <dbl> <dbl> #> 1    26     12       14 15588     4  -89.7  187.  192."},{"path":"http://chjackson.github.io/flexsurv-dev/reference/hazard.html","id":null,"dir":"Reference","previous_headings":"","what":"Hazard and cumulative hazard functions — hexp","title":"Hazard and cumulative hazard functions — hexp","text":"Hazard cumulative hazard functions distributions built flexsurv, whose distribution functions base R.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/hazard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hazard and cumulative hazard functions — hexp","text":"","code":"hexp(x, rate = 1, log = FALSE)  Hexp(x, rate = 1, log = FALSE)  hgamma(x, shape, rate = 1, log = FALSE)  Hgamma(x, shape, rate = 1, log = FALSE)  hlnorm(x, meanlog = 0, sdlog = 1, log = FALSE)  Hlnorm(x, meanlog = 0, sdlog = 1, log = FALSE)  hweibull(x, shape, scale = 1, log = FALSE)  Hweibull(x, shape, scale = 1, log = FALSE)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/hazard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hazard and cumulative hazard functions — hexp","text":"x Vector quantiles rate Rate parameter (exponential gamma) log Compute log hazard log cumulative hazard shape Shape parameter (Weibull gamma) meanlog Mean log scale (log normal) sdlog Standard deviation log scale (log normal) scale Scale parameter (Weibull)","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/hazard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hazard and cumulative hazard functions — hexp","text":"Hazard (functions beginning 'h') cumulative hazard (functions beginning 'H').","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/hazard.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hazard and cumulative hazard functions — hexp","text":"exponential Weibull available analytically, programmed numerically stable efficient forms. gamma log-normal, simply computed minus log survivor function (cumulative hazard) ratio density survivor function (hazard), expected robust extreme values quick compute.","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/hazard.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Hazard and cumulative hazard functions — hexp","text":"Christopher Jackson <chris.jackson@mrc-bsu.cam.ac.uk>","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/hr_flexsurvreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Hazard ratio as a function of time from a parametric survival model — hr_flexsurvreg","title":"Hazard ratio as a function of time from a parametric survival model — hr_flexsurvreg","text":"Hazard ratio function time parametric survival model","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/hr_flexsurvreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hazard ratio as a function of time from a parametric survival model — hr_flexsurvreg","text":"","code":"hr_flexsurvreg(   x,   newdata = NULL,   t = NULL,   start = 0,   ci = TRUE,   B = 1000,   cl = 0.95,   na.action = na.pass )"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/hr_flexsurvreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hazard ratio as a function of time from a parametric survival model — hr_flexsurvreg","text":"x Object returned flexsurvreg flexsurvspline. newdata data frame two rows, specifying set covariate values. hazard ratio calculated hazard(z2)/hazard(z1), z1 first row  newdata z2 second row. newdata must supplied unless model x includes just one covariate. one covariate, default constructed, defines hazard ratio second first level factor (covariate factor), value 1 value 0 (covariate numeric). t Times calculate fitted values . default, sorted unique observation (including censoring) times data - left-truncated datasets \"stop\" times. start Optional left-truncation time times.  returned survival, hazard cumulative hazard conditioned survival time.   Predicted times returned \"rmst\", \"mean\", \"median\" \"quantile\" times since time zero, times since start time. vector length t can supplied allow different truncation times prediction time, though make sense usual case function used calculate predicted trajectory single individual.  default start time changed version 0.4 flexsurv - previously vector start times observed data. ci Set FALSE omit confidence intervals. B Number simulations normal asymptotic distribution estimates used calculate confidence intervals standard errors. Decrease greater speed expense accuracy, set B=0 turn calculation CIs SEs. cl Width symmetric confidence intervals, relative 1. na.action Function determining done missing values newdata.  na.pass (default) summaries NA produced missing covariate values.  na.omit, missing values dropped, behaviour summary.flexsurvreg flexsurv version 1.2.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/hr_flexsurvreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hazard ratio as a function of time from a parametric survival model — hr_flexsurvreg","text":"data frame estimate confidence limits hazard ratio, one row times requested t.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/lines.flexsurvreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Add fitted flexible survival curves to a plot — lines.flexsurvreg","title":"Add fitted flexible survival curves to a plot — lines.flexsurvreg","text":"Add fitted survival (hazard cumulative hazard) curves flexsurvreg model fit existing plot.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/lines.flexsurvreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add fitted flexible survival curves to a plot — lines.flexsurvreg","text":"","code":"# S3 method for flexsurvreg lines(   x,   newdata = NULL,   X = NULL,   type = \"survival\",   t = NULL,   est = TRUE,   ci = NULL,   B = 1000,   cl = 0.95,   col = \"red\",   lty = 1,   lwd = 2,   col.ci = NULL,   lty.ci = 2,   lwd.ci = 1,   ... )"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/lines.flexsurvreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add fitted flexible survival curves to a plot — lines.flexsurvreg","text":"x Output flexsurvreg, representing fitted survival model object. newdata Covariate values produce fitted curves , data frame, described plot.flexsurvreg. X Covariate values produce fitted curves , matrix, described plot.flexsurvreg. type \"survival\" survival, \"cumhaz\" cumulative hazard, \"hazard\" hazard, plot.flexsurvreg. t Vector times plot fitted values . est Plot fitted curves (TRUE FALSE.) ci Plot confidence intervals fitted curves. B Number simulations controlling accuracy confidence intervals, used summary. cl Width confidence intervals, default 0.95 95% intervals. col Colour fitted curve(s). lty Line type fitted curve(s). lwd Line width fitted curve(s). col.ci Colour confidence limits, defaulting fitted curve. lty.ci Line type confidence limits. lwd.ci Line width confidence limits, defaulting fitted curve. ... arguments passed generic plot lines functions.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/lines.flexsurvreg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add fitted flexible survival curves to a plot — lines.flexsurvreg","text":"Equivalent plot.flexsurvreg(...,add=TRUE).","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/lines.flexsurvreg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add fitted flexible survival curves to a plot — lines.flexsurvreg","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/logLik.flexsurvreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Log likelihood from a flexsurvreg model — logLik.flexsurvreg","title":"Log likelihood from a flexsurvreg model — logLik.flexsurvreg","text":"Log likelihood flexsurvreg model","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/logLik.flexsurvreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log likelihood from a flexsurvreg model — logLik.flexsurvreg","text":"","code":"# S3 method for flexsurvreg logLik(object, ...)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/logLik.flexsurvreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log likelihood from a flexsurvreg model — logLik.flexsurvreg","text":"object fitted model object class flexsurvreg, e.g. returned flexsurvreg flexsurvspline. ... arguments (currently unused).","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/logLik.flexsurvreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log likelihood from a flexsurvreg model — logLik.flexsurvreg","text":"Log-likelihood (numeric) additional attributes df (degrees freedom, number parameters estimated), number observations nobs (including observed events censored observations).","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/mean_flexsurvmix.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean times to events from a flexsurvmix model — mean_flexsurvmix","title":"Mean times to events from a flexsurvmix model — mean_flexsurvmix","text":"returns mean event-specific parametric time--event distribution mixture model, mean time event conditionally event one happens.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/mean_flexsurvmix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean times to events from a flexsurvmix model — mean_flexsurvmix","text":"","code":"mean_flexsurvmix(x, newdata = NULL, B = NULL)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/mean_flexsurvmix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean times to events from a flexsurvmix model — mean_flexsurvmix","text":"x Fitted model object returned flexsurvmix. newdata Data frame list covariate values.   omitted model covariates, default used, defined combinations factors covariates model factors, covariate values zero non-factor covariates model. B Number simulations use compute 95% confidence intervals, based asymptotic multivariate normal distribution basic parameter estimates.  B=NULL intervals computed.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/mean_flexsurvmix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean times to events from a flexsurvmix model — mean_flexsurvmix","text":"Mean times next event conditionally alternative event,   given specified covariate values.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/meanfinal_fmixmsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean time to final state in a mixture multi-state model — meanfinal_fmixmsm","title":"Mean time to final state in a mixture multi-state model — meanfinal_fmixmsm","text":"Calculate mean time start process final (\"absorbing\") state mixture multi-state model.  Models cycles supported.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/meanfinal_fmixmsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean time to final state in a mixture multi-state model — meanfinal_fmixmsm","text":"","code":"meanfinal_fmixmsm(x, newdata = NULL, final = FALSE, B = NULL)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/meanfinal_fmixmsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean time to final state in a mixture multi-state model — meanfinal_fmixmsm","text":"x Object returned fmixmsm, representing multi-state model built piecing together mixture models fitted flexsurvmix. newdata Data frame list covariate values.   omitted model covariates, default used, defined combinations factors covariates model factors, covariate values zero non-factor covariates model. final TRUE mean time final state calculated final state, taking weighted average mean time travel pathway ending final state, weighted probability pathway.   FALSE  (default) separate mean calculated pathway. B Number simulations use compute 95% confidence intervals, based asymptotic multivariate normal distribution basic parameter estimates.  B=NULL intervals computed.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/meanfinal_fmixmsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean time to final state in a mixture multi-state model — meanfinal_fmixmsm","text":"data frame mean times absorption, covariate values   pathway (final state)","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/means.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean and restricted mean survival functions — mean_exp","title":"Mean and restricted mean survival functions — mean_exp","text":"Mean restricted mean survival time functions distributions built flexsurv.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/means.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean and restricted mean survival functions — mean_exp","text":"","code":"mean_exp(rate = 1)  rmst_exp(t, rate = 1, start = 0)  mean_gamma(shape, rate = 1)  rmst_gamma(t, shape, rate = 1, start = 0)  rmst_genf(t, mu, sigma, Q, P, start = 0)  mean_genf(mu, sigma, Q, P)  rmst_genf.orig(t, mu, sigma, s1, s2, start = 0)  mean_genf.orig(mu, sigma, s1, s2)  rmst_gengamma(t, mu = 0, sigma = 1, Q, start = 0)  mean_gengamma(mu = 0, sigma = 1, Q)  rmst_gengamma.orig(t, shape, scale = 1, k, start = 0)  mean_gengamma.orig(shape, scale = 1, k)  rmst_gompertz(t, shape, rate = 1, start = 0)  mean_gompertz(shape, rate = 1)  mean_llogis(shape = 1, scale = 1)  rmst_llogis(t, shape = 1, scale = 1, start = 0)  mean_lnorm(meanlog = 0, sdlog = 1)  rmst_lnorm(t, meanlog = 0, sdlog = 1, start = 0)  mean_weibull(shape, scale = 1)  rmst_weibull(t, shape, scale = 1, start = 0)  rmst_weibullPH(t, shape, scale = 1, start = 0)  mean_weibullPH(shape, scale = 1)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/means.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean and restricted mean survival functions — mean_exp","text":"rate Rate parameter (exponential gamma) t Vector times restricted mean survival time evaluated start Optional left-truncation time times.  returned restricted mean survival conditioned survival time. shape Shape parameter (Weibull, gamma, log-logistic, generalized gamma [orig], generalized F [orig]) mu Mean log scale (generalized gamma, generalized F) sigma Standard deviation log scale (generalized gamma, generalized F) Q Vector first shape parameters (generalized gamma, generalized F) P Vector second shape parameters (generalized F) s1 Vector first F shape parameters (generalized F [orig]) s2 vector second F shape parameters (generalized F [orig]) scale Scale parameter (Weibull, log-logistic, generalized gamma [orig], generalized F [orig]) k vector shape parameters (generalized gamma [orig]). meanlog Mean log scale (log normal) sdlog Standard deviation log scale (log normal)","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/means.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean and restricted mean survival functions — mean_exp","text":"mean survival (functions beginning 'mean') restricted mean survival (functions beginning 'rmst_').","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/means.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mean and restricted mean survival functions — mean_exp","text":"exponential, Weibull, log-logistic, lognormal, gamma, mean survival provided analytically.  Restricted mean survival exponential distribution also provided analytically.  Mean restricted means distributions calculated via numeric integration.","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/means.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Mean and restricted mean survival functions — mean_exp","text":"Christopher Jackson <chris.jackson@mrc-bsu.cam.ac.uk>","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/model.frame.flexsurvmix.html","id":null,"dir":"Reference","previous_headings":"","what":"Model frame from a flexsurvmix object — model.frame.flexsurvmix","title":"Model frame from a flexsurvmix object — model.frame.flexsurvmix","text":"Returns list data frames, component containing data used model fit mixture component.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/model.frame.flexsurvmix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model frame from a flexsurvmix object — model.frame.flexsurvmix","text":"","code":"# S3 method for flexsurvmix model.frame(formula, ...)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/model.frame.flexsurvmix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model frame from a flexsurvmix object — model.frame.flexsurvmix","text":"formula Fitted model object flexsurvmix. ... arguments (currently unused).","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/model.frame.flexsurvmix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model frame from a flexsurvmix object — model.frame.flexsurvmix","text":"list data frames","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/model.frame.flexsurvreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract original data from flexsurvreg objects. — model.frame.flexsurvreg","title":"Extract original data from flexsurvreg objects. — model.frame.flexsurvreg","text":"Extract data model fitted flexsurvreg.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/model.frame.flexsurvreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract original data from flexsurvreg objects. — model.frame.flexsurvreg","text":"","code":"# S3 method for flexsurvreg model.frame(formula, ...)  # S3 method for flexsurvreg model.matrix(object, par = NULL, ...)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/model.frame.flexsurvreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract original data from flexsurvreg objects. — model.frame.flexsurvreg","text":"formula fitted model object, returned flexsurvreg. ... arguments (used). object fitted model object, returned flexsurvreg. par String naming parameter whose linear model matrix desired. default value par=NULL returns matrix consisting model matrices models object cbinded together, intercepts excluded.  really ``model matrix'' usual sense, however, columns directly correspond covariate coefficients matrix estimates fitted model.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/model.frame.flexsurvreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract original data from flexsurvreg objects. — model.frame.flexsurvreg","text":"model.frame returns data frame original variables used model fit. model.matrix returns design matrix part model includes covariates.  required part indicated \"par\" argument (see ).","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/model.frame.flexsurvreg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract original data from flexsurvreg objects. — model.frame.flexsurvreg","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/msfit.flexsurvreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative intensity function for parametric multi-state models — msfit.flexsurvreg","title":"Cumulative intensity function for parametric multi-state models — msfit.flexsurvreg","text":"Cumulative transition-specific intensity/hazard functions fully-parametric multi-state competing risks models, using piecewise-constant approximation allow prediction using functions mstate package.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/msfit.flexsurvreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative intensity function for parametric multi-state models — msfit.flexsurvreg","text":"","code":"msfit.flexsurvreg(   object,   t,   newdata = NULL,   variance = TRUE,   tvar = \"trans\",   trans,   B = 1000 )"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/msfit.flexsurvreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative intensity function for parametric multi-state models — msfit.flexsurvreg","text":"object Output flexsurvreg flexsurvspline, representing fitted survival model object. model fitted data consisting one row observed transition additional rows corresponding censored times competing transitions.  \"long\" format, counting process format, explained flexsurv vignette. model contain categorical covariate indicating transition. flexsurv variable can name, indicated tvar argument.  Cox models demonstrated mstate usually included model formulae strata(trans), note strata function anything flexsurv.  formula supplied flexsurvreg precise parameters assumed vary transition type. Alternatively, parameters (including covariate effects) assumed different different transitions, list transition-specific models can formed.  list one component permitted transition multi-state model.  computationally efficient, particularly larger models datasets. See example , vignette. t Vector times.  need observed event times, since model parametric, can outside range data.  grid frequent times provide better approximation cumulative hazard trajectory prediction probtrans mssample, cost greater computational expense. newdata data frame specifying values covariates fitted model, transition number.  must specified covariates. variable names fitted model formula.  must either one value per covariate (typical situation) \\(n\\) values per covariate, different one \\(n\\) allowed transitions. variance Calculate variances covariances transition cumulative hazards (TRUE FALSE).  based simulation normal asymptotic distribution estimates, computationally-expensive. tvar Name categorical variable model formula represents transition number.  defined factor, factor levels  correspond elements trans, conventionally sequence integers starting 1.  required x list transition-specific models. trans Matrix indicating allowed transitions multi-state model, format understood mstate: matrix integers whose \\(r,s\\) entry \\(\\) \\(\\)th transition type (reading across rows) \\(r,s\\), NAs diagonal \\(r,s\\) transition disallowed. B Number simulations normal asymptotic distribution used calculate variances.  Decrease greater speed expense accuracy.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/msfit.flexsurvreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative intensity function for parametric multi-state models — msfit.flexsurvreg","text":"object class \"msfit\", form objects used mstate package.  msfit method mstate returns equivalent cumulative intensities Cox regression models fitted coxph.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/msfit.flexsurvreg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cumulative intensity function for parametric multi-state models — msfit.flexsurvreg","text":"Liesbeth C. de Wreede, Marta Fiocco, Hein Putter (2011). mstate: R Package Analysis Competing Risks Multi-State Models. Journal Statistical Software, 38(7), 1-30. doi:10.18637/jss.v038.i07 Mandel, M. (2013). \"Simulation based confidence intervals functions complicated derivatives.\" American Statistician 67(2):76-81","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/msfit.flexsurvreg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cumulative intensity function for parametric multi-state models — msfit.flexsurvreg","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/msfit.flexsurvreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative intensity function for parametric multi-state models — msfit.flexsurvreg","text":"","code":"## 3 state illness-death model for bronchiolitis obliterans ## Compare clock-reset / semi-Markov multi-state models  ## Simple exponential model (reduces to Markov)  bexp <- flexsurvreg(Surv(years, status) ~ trans,                     data=bosms3, dist=\"exp\") tmat <- rbind(c(NA,1,2),c(NA,NA,3),c(NA,NA,NA)) mexp <- msfit.flexsurvreg(bexp, t=seq(0,12,by=0.1),                           trans=tmat, tvar=\"trans\", variance=FALSE)  ## Cox semi-parametric model within each transition  bcox <- coxph(Surv(years, status) ~ strata(trans), data=bosms3)  if (require(\"mstate\")){  mcox <- mstate::msfit(bcox, trans=tmat)  ## Flexible parametric spline-based model   bspl <- flexsurvspline(Surv(years, status) ~ trans + gamma1(trans),                        data=bosms3, k=3) mspl <- msfit.flexsurvreg(bspl, t=seq(0,12,by=0.1),                          trans=tmat, tvar=\"trans\", variance=FALSE)  ## Compare fit: exponential model is OK but the spline is better  plot(mcox, lwd=1, xlim=c(0, 12), ylim=c(0,4)) cols <- c(\"black\",\"red\",\"green\") for (i in 1:3){     lines(mexp$Haz$time[mexp$Haz$trans==i], mexp$Haz$Haz[mexp$Haz$trans==i],              col=cols[i], lwd=2, lty=2)     lines(mspl$Haz$time[mspl$Haz$trans==i], mspl$Haz$Haz[mspl$Haz$trans==i],              col=cols[i], lwd=3) } legend(\"topright\", lwd=c(1,2,3), lty=c(1,2,1),    c(\"Cox\", \"Exponential\", \"Flexible parametric\"), bty=\"n\")  } #> Loading required package: mstate   ## Fit a list of models, one for each transition ## More computationally efficient, but only valid if parameters ## are different between transitions.  if (FALSE) { bexp.list <- vector(3, mode=\"list\") for (i in 1:3) {    bexp.list[[i]] <- flexsurvreg(Surv(years, status) ~ 1, subset=(trans==i),                                 data=bosms3, dist=\"exp\") }  ## The list of models can be passed to this and other functions, ## as if it were a single multi-state model.   msfit.flexsurvreg(bexp.list, t=seq(0,12,by=0.1), trans=tmat) }"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/nobs.flexsurvreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of observations contributing to a fitted flexible survival model — nobs.flexsurvreg","title":"Number of observations contributing to a fitted flexible survival model — nobs.flexsurvreg","text":"Number observations contributing fitted flexible survival model","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/nobs.flexsurvreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of observations contributing to a fitted flexible survival model — nobs.flexsurvreg","text":"","code":"# S3 method for flexsurvreg nobs(object, cens = TRUE, ...)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/nobs.flexsurvreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of observations contributing to a fitted flexible survival model — nobs.flexsurvreg","text":"object Output flexsurvreg flexsurvspline, representing fitted survival model object. cens Include censored observations number.  TRUE default. FALSE number observed events returned.  See   BIC.flexsurvreg discussion issues   defining sample size censored data. ... arguments passed methods.  Currently unused.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/nobs.flexsurvreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of observations contributing to a fitted flexible survival model — nobs.flexsurvreg","text":"returns mod$N component fitted model object mod.  See flexsurvreg, flexsurvspline full documentation components.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/nobs.flexsurvreg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Number of observations contributing to a fitted flexible survival model — nobs.flexsurvreg","text":"default, matches behaviour nobs method survreg objects, including censored uncensored observations. weighted flexsurvreg analysis done, function returns sum weights.","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/nobs.flexsurvreg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Number of observations contributing to a fitted flexible survival model — nobs.flexsurvreg","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/normboot.flexsurvreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate from the asymptotic normal distribution of parameter estimates. — normboot.flexsurvreg","title":"Simulate from the asymptotic normal distribution of parameter estimates. — normboot.flexsurvreg","text":"Produce matrix alternative parameter estimates sampling uncertainty, covariate values supplied user.  Used summary.flexsurvreg obtaining confidence intervals around functions parameters.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/normboot.flexsurvreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate from the asymptotic normal distribution of parameter estimates. — normboot.flexsurvreg","text":"","code":"normboot.flexsurvreg(   x,   B,   newdata = NULL,   X = NULL,   transform = FALSE,   raw = FALSE,   tidy = FALSE,   rawsim = NULL )"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/normboot.flexsurvreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate from the asymptotic normal distribution of parameter estimates. — normboot.flexsurvreg","text":"x fitted model flexsurvreg (flexsurvspline). B Number samples. newdata Data frame list containing covariate values evaluate parameters .  covariates model, least one newdata X must supplied, unless raw=TRUE. X Alternative (less convenient) format covariate values: matrix one row, one column covariate factor contrast. Formed \"model matrices\", one named parameter distribution, intercepts excluded, cbinded together. transform TRUE results transformed real-line scale, typically log parameter defined positive. default FALSE returns parameters natural scale. raw Return samples baseline parameters covariate effects, rather default adjusting baseline parameters covariates. tidy FALSE (default) list returned.  TRUE data frame returned, consisting list elements rbinded together, integer variables labelling covariate number simulation replicate number. rawsim allows input raw samples previous run normboot.flexsurvreg. useful running normboot.flexsurvreg multiple time dataset counterfactual contrasts, e.g. treat =0 vs. treat  =1. Used standsurv.flexsurvreg.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/normboot.flexsurvreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate from the asymptotic normal distribution of parameter estimates. — normboot.flexsurvreg","text":"newdata includes one covariate combination, matrix returned B rows, one column named parameter survival distribution. one covariate combination requested (e.g. newdata data frame one row), list matrices returned, one covariate combination.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/normboot.flexsurvreg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate from the asymptotic normal distribution of parameter estimates. — normboot.flexsurvreg","text":"Mandel, M. (2013). \"Simulation based confidence intervals functions complicated derivatives.\" American Statistician (press).","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/normboot.flexsurvreg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate from the asymptotic normal distribution of parameter estimates. — normboot.flexsurvreg","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/normboot.flexsurvreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate from the asymptotic normal distribution of parameter estimates. — normboot.flexsurvreg","text":"","code":"fite <- flexsurvreg(Surv(futime, fustat) ~ age, data = ovarian, dist=\"exp\")     normboot.flexsurvreg(fite, B=10, newdata=list(age=50)) #>               rate #>  [1,] 0.0001333406 #>  [2,] 0.0002711950 #>  [3,] 0.0003700718 #>  [4,] 0.0002548242 #>  [5,] 0.0005457485 #>  [6,] 0.0002299253 #>  [7,] 0.0004888764 #>  [8,] 0.0001547695 #>  [9,] 0.0005135426 #> [10,] 0.0004136617 #> attr(,\"X\") #>   age #> 1  50 #> attr(,\"X\")attr(,\"newdata\") #>   age #> 1  50 #> attr(,\"rawsim\") #>            rate        age #>  [1,] -18.29776 0.18750322 #>  [2,] -14.33221 0.12239078 #>  [3,] -14.75103 0.13698433 #>  [4,] -14.90062 0.13251367 #>  [5,] -10.99314 0.06959569 #>  [6,] -15.71307 0.14670627 #>  [7,] -13.66212 0.12077431 #>  [8,] -17.76240 0.17977660 #>  [9,] -11.44435 0.07740335 #> [10,] -12.31628 0.09051640     normboot.flexsurvreg(fite, B=10, X=matrix(50,nrow=1)) #>               rate #>  [1,] 0.0003826964 #>  [2,] 0.0007727804 #>  [3,] 0.0002973256 #>  [4,] 0.0004210293 #>  [5,] 0.0003696239 #>  [6,] 0.0003892618 #>  [7,] 0.0002302111 #>  [8,] 0.0004541271 #>  [9,] 0.0002247796 #> [10,] 0.0002689798 #> attr(,\"X\") #>      [,1] #> [1,]   50 #> attr(,\"rawsim\") #>            rate        age #>  [1,] -12.31256 0.08888573 #>  [2,] -10.19412 0.06057214 #>  [3,] -12.99376 0.09746149 #>  [4,] -14.20243 0.12859241 #>  [5,] -12.97912 0.10152183 #>  [6,] -13.83425 0.11965986 #>  [7,] -14.85106 0.12949092 #>  [8,] -10.52134 0.05648414 #>  [9,] -15.71354 0.14626291 #> [10,] -14.89006 0.13338376     normboot.flexsurvreg(fite, B=10, newdata=list(age=0))  ## closer to... #>               rate #>  [1,] 9.179604e-06 #>  [2,] 8.001138e-06 #>  [3,] 3.313562e-06 #>  [4,] 5.777548e-08 #>  [5,] 2.844863e-06 #>  [6,] 6.954191e-07 #>  [7,] 6.404087e-07 #>  [8,] 6.187050e-06 #>  [9,] 2.166374e-06 #> [10,] 2.559143e-07 #> attr(,\"X\") #>   age #> 1   0 #> attr(,\"X\")attr(,\"newdata\") #>   age #> 1   0 #> attr(,\"rawsim\") #>            rate        age #>  [1,] -11.59853 0.07562969 #>  [2,] -11.73593 0.09619946 #>  [3,] -12.61749 0.09538749 #>  [4,] -16.66670 0.16569939 #>  [5,] -12.77000 0.10285181 #>  [6,] -14.17875 0.12219826 #>  [7,] -14.26116 0.12455604 #>  [8,] -11.99305 0.08907006 #>  [9,] -13.04246 0.09910768 #> [10,] -15.17842 0.13991248     fite$res #>               est         L95%         U95%           se #> rate 8.883706e-07 1.440514e-08 5.478617e-05 1.868243e-06 #> age  1.185227e-01 5.210364e-02 1.849418e-01 3.388790e-02"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/p_flexsurvmix.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition probabilities from a flexsurvmix model — p_flexsurvmix","title":"Transition probabilities from a flexsurvmix model — p_flexsurvmix","text":"quantities variously known transition probabilities, state occupancy probabilities, values \"cumulative incidence\" function, values \"subdistribution\" function. probabilities individual experienced event particular kind time t.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/p_flexsurvmix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition probabilities from a flexsurvmix model — p_flexsurvmix","text":"","code":"p_flexsurvmix(x, newdata = NULL, startname = \"start\", t = 1, B = NULL)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/p_flexsurvmix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition probabilities from a flexsurvmix model — p_flexsurvmix","text":"x Fitted model object returned flexsurvmix. newdata Data frame list covariate values.   omitted model covariates, default used, defined combinations factors covariates model factors, covariate values zero non-factor covariates model. startname Name state individuals start. considers model multi-state model people start state, may transition one competing events. t Vector times t calculate probabilities transition . B Number simulations use compute 95% confidence intervals, based asymptotic multivariate normal distribution basic parameter estimates.  B=NULL intervals computed.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/p_flexsurvmix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transition probabilities from a flexsurvmix model — p_flexsurvmix","text":"data frame transition probabilities time, covariate value   destination state.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/p_flexsurvmix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transition probabilities from a flexsurvmix model — p_flexsurvmix","text":"Note \"cumulative incidence\" misnomer, \"incidence\" typically means hazard, quantities computed cumulative hazards, probabilities.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/pars.fmsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition-specific parameters in a flexible parametric multi-state model — pars.fmsm","title":"Transition-specific parameters in a flexible parametric multi-state model — pars.fmsm","text":"List maximum likelihood estimates transition-specific parameters flexible parametric multi-state model, given covariate values.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/pars.fmsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition-specific parameters in a flexible parametric multi-state model — pars.fmsm","text":"","code":"pars.fmsm(x, trans, newdata = NULL, tvar = \"trans\")"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/pars.fmsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition-specific parameters in a flexible parametric multi-state model — pars.fmsm","text":"x multi-state model fitted flexsurvreg.  See msfit.flexsurvreg required form model data. x can also list flexsurvreg models, one component permitted transition multi-state model, illustrated msfit.flexsurvreg. trans Matrix indicating allowed transitions.  See msfit.flexsurvreg. newdata data frame specifying values covariates fitted model, transition number.  See msfit.flexsurvreg. tvar Variable data representing transition type. required x list models.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/pars.fmsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transition-specific parameters in a flexible parametric multi-state model — pars.fmsm","text":"list one component permitted transition. component one element parameter parametric distribution generates corresponding event multi-state model.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/pars.fmsm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Transition-specific parameters in a flexible parametric multi-state model — pars.fmsm","text":"Christopher Jackson chris.jackson@mrc-bsu.cam.ac.uk.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/pdf_flexsurvmix.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitted densities for times to events in a flexsurvmix model — pdf_flexsurvmix","title":"Fitted densities for times to events in a flexsurvmix model — pdf_flexsurvmix","text":"returns estimate probability density time competing event, vector times supplied user.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/pdf_flexsurvmix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitted densities for times to events in a flexsurvmix model — pdf_flexsurvmix","text":"","code":"pdf_flexsurvmix(x, newdata = NULL, t = NULL)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/pdf_flexsurvmix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitted densities for times to events in a flexsurvmix model — pdf_flexsurvmix","text":"x Fitted model object returned flexsurvmix. newdata Data frame list covariate values.   omitted model covariates, default used, defined combinations factors covariates model factors, covariate values zero non-factor covariates model. t Vector times evaluate probability density","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/pdf_flexsurvmix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitted densities for times to events in a flexsurvmix model — pdf_flexsurvmix","text":"data frame row giving fitted density dens   combination covariate values, time competing event.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/pfinal_fmsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Probabilities of final states in a flexible parametric competing risks model — pfinal_fmsm","title":"Probabilities of final states in a flexible parametric competing risks model — pfinal_fmsm","text":"requires model Markov, valid semi-Markov models, works wrapping pmatrix.fs calculate transition probability large time.    also works fmsm object formed transition-specific time--event models, therefore works competing risks models, defined just one starting state multiple destination states representing competing events.  models, function returns probability governing competing event happens next.   However function simply wraps pmatrix.fs, models, pmatrix.fs pmatrix.simfs can used large forecast time t.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/pfinal_fmsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probabilities of final states in a flexible parametric competing risks model — pfinal_fmsm","text":"","code":"pfinal_fmsm(x, newdata = NULL, fromstate, maxt = 1e+05, B = 0, cores = NULL)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/pfinal_fmsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probabilities of final states in a flexible parametric competing risks model — pfinal_fmsm","text":"x Object returned fmsm, representing multi-state model formed transition-specific time--event models fitted flexsurvreg. newdata Data frame covariate values, one column per covariate, one row per alternative value. fromstate State calculate transition probability state.  refer name row transition matrix attr(x,trans). maxt Large time use forecasting final state probabilities. transition probability zero time used.  Note Inf work. default 100000. B Number simulations use calculate 95% confidence intervals based asymptotic normal distribution basic parameter estimates. B=0 intervals calculated. cores Number processor cores use.  NULL (default) single core used.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/pfinal_fmsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probabilities of final states in a flexible parametric competing risks model — pfinal_fmsm","text":"data frame one row per covariate value destination state,   giving state column state, probability column  val. Additional columns lower upper   confidence limits returned B=0.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/plot.flexsurvreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots of fitted flexible survival models — plot.flexsurvreg","title":"Plots of fitted flexible survival models — plot.flexsurvreg","text":"Plot fitted survival, cumulative hazard hazard parametric model nonparametric estimates diagnose goodness--fit.  Alternatively plot user-defined function model parameters time.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/plot.flexsurvreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots of fitted flexible survival models — plot.flexsurvreg","text":"","code":"# S3 method for flexsurvreg plot(   x,   newdata = NULL,   X = NULL,   type = \"survival\",   fn = NULL,   t = NULL,   start = 0,   est = TRUE,   ci = NULL,   B = 1000,   cl = 0.95,   col.obs = \"black\",   lty.obs = 1,   lwd.obs = 1,   col = \"red\",   lty = 1,   lwd = 2,   col.ci = NULL,   lty.ci = 2,   lwd.ci = 1,   ylim = NULL,   add = FALSE,   ... )"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/plot.flexsurvreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots of fitted flexible survival models — plot.flexsurvreg","text":"x Output flexsurvreg flexsurvspline, representing fitted survival model object. newdata Data frame containing covariate values produce fitted values .  See summary.flexsurvreg. factor covariates model, Kaplan-Meier (nonparametric hazard...)  curves plotted distinct groups, default, fitted curves also plotted groups.  plot Kaplan-Meier fitted curves subset groups, use plot(survfit()) followed lines.flexsurvreg(). continuous covariates, single population Kaplan-Meier curve drawn. default, single fitted curve drawn covariates set mean values data - categorical covariates, means 0/1 indicator variables taken. X Alternative way supply covariate values, model matrix. See summary.flexsurvreg.  newdata easier way. type \"survival\" survival, plotted Kaplan-Meier estimates plot.survfit. \"cumhaz\" cumulative hazard, plotted transformed Kaplan-Meier estimates plot.survfit. \"hazard\" hazard, plotted smooth nonparametric estimates muhaz.  nonparametric estimates tend unstable, plots intended just roughly indicate shape hazards time.  min.time max.time options muhaz may sometimes need passed arguments plot.flexsurvreg avoid error . Ignored \"fn\" specified. fn Custom function parameters summarise time.  first two arguments function must t representing time, start representing left-truncation points, remaining arguments must parameters distribution.  return vector length t. t Vector times plot fitted values , see summary.flexsurvreg. start Left-truncation points, see summary.flexsurvreg. est Plot fitted curves (TRUE FALSE.) ci Plot confidence intervals fitted curves. default, TRUE one observed/fitted curve plotted, FALSE multiple curves plotted. B Number simulations controlling accuracy confidence intervals, used summary. Decrease greater speed expense accuracy, set B=0 turn calculation CIs. cl Width confidence intervals, default 0.95 95% intervals. col.obs Colour nonparametric curve. lty.obs Line type nonparametric curve. lwd.obs Line width nonparametric curve. col Colour fitted parametric curve(s). lty Line type fitted parametric curve(s). lwd Line width fitted parametric curve(s). col.ci Colour fitted confidence limits, defaulting fitted curve. lty.ci Line type fitted confidence limits. lwd.ci Line width fitted confidence limits. ylim y-axis limits: vector two elements. add TRUE, add lines existing plot, otherwise new axes drawn. ... options passed plot.survfit muhaz, example, control smoothness nonparametric hazard estimates.  min.time max.time options muhaz may sometimes need changed defaults.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/plot.flexsurvreg.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plots of fitted flexible survival models — plot.flexsurvreg","text":"standard plot arguments \"xlim\",\"xlab\" may work.  function designed quick check model fit.  Users wanting publication-quality graphs advised set empty plot desired axes first (e.g. plot(...,type=\"n\",...)), use suitable lines functions add lines. case weights used fit model, used producing nonparametric estimates survival cumulative hazard, hazard estimates.","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/plot.flexsurvreg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plots of fitted flexible survival models — plot.flexsurvreg","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/plot.standsurv.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot standardized metrics from a fitted flexsurv model — plot.standsurv","title":"Plot standardized metrics from a fitted flexsurv model — plot.standsurv","text":"Plot standardized metrics marginal survival, restricted mean  survival hazard, based fitted flexsurv model.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/plot.standsurv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot standardized metrics from a fitted flexsurv model — plot.standsurv","text":"","code":"# S3 method for standsurv plot(x, contrast = FALSE, ci = FALSE, expected = FALSE, ...)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/plot.standsurv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot standardized metrics from a fitted flexsurv model — plot.standsurv","text":"x standsurv object returned standsurv contrast contrasts standardized metrics plotted. Defaults FALSE ci confidence intervals plotted (calculated  standsurv)? expected marginal expected survival / hazard also  plotted? can invoked rmap ratetable  passed standsurv ... currently used","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/plot.standsurv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot standardized metrics from a fitted flexsurv model — plot.standsurv","text":"ggplot showing standardized metric calculated  standsurv time. Modification plot possible adding ggplot objects, see Examples.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/plot.standsurv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot standardized metrics from a fitted flexsurv model — plot.standsurv","text":"","code":"## Use bc dataset, with an age variable appended ## mean age is higher in those with smaller observed survival times  newbc <- bc newbc$age <- rnorm(dim(bc)[1], mean = 65-scale(newbc$recyrs, scale=FALSE),  sd = 5)  ## Fit a Weibull flexsurv model with group and age as covariates weib_age <- flexsurvreg(Surv(recyrs, censrec) ~ group+age, data=newbc,                        dist=\"weibull\") ## Calculate standardized survival and the difference in standardized survival ## for the three levels of group across a grid of survival times standsurv_weib_age <- standsurv(weib_age,                                            at = list(list(group=\"Good\"),                                                      list(group=\"Medium\"),                                                      list(group=\"Poor\")),                                            t=seq(0,7, length=100),                                            contrast = \"difference\", ci=TRUE,                                            boot = TRUE, B=10, seed=123) #> Calculating bootstrap standard errors / confidence intervals #> Calculating bootstrap standard errors / confidence intervals for contrasts plot(standsurv_weib_age)  plot(standsurv_weib_age) + ggplot2::theme_bw() + ggplot2::ylab(\"Survival\") +  ggplot2::xlab(\"Time (years)\") +   ggplot2::guides(color=ggplot2::guide_legend(title=\"Prognosis\"),                                fill=ggplot2::guide_legend(title=\"Prognosis\"))  plot(standsurv_weib_age, contrast=TRUE, ci=TRUE) +   ggplot2::ylab(\"Difference in survival\")"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/plot_survtrunc.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot nonparametric estimates of survival from right-truncated data. — plot.survrtrunc","title":"Plot nonparametric estimates of survival from right-truncated data. — plot.survrtrunc","text":"plot.survrtrunc creates new plot, lines.survrtrunc adds lines exising plot.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/plot_survtrunc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot nonparametric estimates of survival from right-truncated data. — plot.survrtrunc","text":"","code":"# S3 method for survrtrunc plot(x, ...)  # S3 method for survrtrunc lines(x, ...)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/plot_survtrunc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot nonparametric estimates of survival from right-truncated data. — plot.survrtrunc","text":"x Object class \"survrtrunc\" returned survrtrunc. ... arguments passed plot.survfit lines.survfit.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/pmatrix.fs.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition probability matrix from a fully-parametric, time-inhomogeneous Markov multi-state model — pmatrix.fs","title":"Transition probability matrix from a fully-parametric, time-inhomogeneous Markov multi-state model — pmatrix.fs","text":"transition probability matrix time-inhomogeneous Markov multi-state models fitted time--event data flexsurvreg.  \\(r,s\\) entry giving probability individual state \\(s\\) time \\(t\\), given state \\(r\\) time \\(0\\).","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/pmatrix.fs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition probability matrix from a fully-parametric, time-inhomogeneous Markov multi-state model — pmatrix.fs","text":"","code":"pmatrix.fs(   x,   trans = NULL,   t = 1,   newdata = NULL,   condstates = NULL,   ci = FALSE,   tvar = \"trans\",   sing.inf = 1e+10,   B = 1000,   cl = 0.95,   tidy = FALSE,   ... )"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/pmatrix.fs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition probability matrix from a fully-parametric, time-inhomogeneous Markov multi-state model — pmatrix.fs","text":"x model fitted flexsurvreg.  See msfit.flexsurvreg required form model data.  Additionally, must Markov / clock-forward model, can time-inhomogeneous.  See package vignette explanation. x can also list models, one component permitted transition, illustrated msfit.flexsurvreg. trans Matrix indicating allowed transitions.  See msfit.flexsurvreg. t Time vector times predict state occupancy probabilities . newdata data frame specifying values covariates fitted model, transition number.  See msfit.flexsurvreg. condstates xInstead unconditional probability state \\(s\\) time \\(t\\) given state \\(r\\) time 0, return probability conditional particular subset states time \\(t\\).  subset specified condstates argument, vector character labels integers. used, example, competing risks situations, e.g. competing states death recovery disease, want compute probability patient died, given died recovered.   absorbing states, \\(t\\) increases, converges case fatality ratio.  compute , set \\(t\\) large number, Inf work. ci Return confidence interval calculated simulating asymptotic normal distribution maximum likelihood estimates.  Turned default, since computationally intensive.  turned , users increase B results reach desired precision. tvar Variable data representing transition type. required x list models. sing.inf singularity observed hazard, example Weibull distribution shape < 1 infinite hazard t=0, workaround, hazard assumed large finite number, sing.inf, time.  results sensitive exact value assumed, users make sure adjusting parameter cases. B Number simulations normal asymptotic distribution used calculate variances.  Decrease greater speed expense accuracy. cl Width symmetric confidence intervals, relative 1. tidy TRUE return results tidy data frame ... Arguments passed ode deSolve.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/pmatrix.fs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transition probability matrix from a fully-parametric, time-inhomogeneous Markov multi-state model — pmatrix.fs","text":"transition probability matrix, t length 1.  t longer, return list matrices, data frame tidy TRUE. ci=TRUE, element attributes \"lower\" \"upper\" giving matrices corresponding confidence limits. formatted printing may extracted using attr().","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/pmatrix.fs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transition probability matrix from a fully-parametric, time-inhomogeneous Markov multi-state model — pmatrix.fs","text":"computed solving Kolmogorov forward differential equation numerically, using methods deSolve package.  equation $$\\frac{dP(t)}{dt} = P(t) Q(t)$$ \\(P(t)\\) transition probability matrix time \\(t\\), \\(Q(t)\\) transition hazard intensity function \\(t\\). initial condition \\(P(0) = \\). Note package msm similar method pmatrix.msm. pmatrix.fs give results pmatrix.msm conditions hold: time--event distribution exponential transitions, thus flexsurvreg model fitted dist=\"exp\" model time-homogeneous. msm model fitted exacttimes=TRUE, thus event times known, time-dependent covariates. msm allows exponential piecewise-exponential time--event distributions, flexsurvreg allows flexible models. msm however designed particular panel data, process observed arbitrary times, thus times transition unknown, makes flexible models difficult. function valid Markov (\"clock-forward\") multi-state models, though warning error currently given model Markov.  See pmatrix.simfs equivalent semi-Markov (\"clock-reset\") models.","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/pmatrix.fs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Transition probability matrix from a fully-parametric, time-inhomogeneous Markov multi-state model — pmatrix.fs","text":"Christopher Jackson chris.jackson@mrc-bsu.cam.ac.uk.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/pmatrix.fs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transition probability matrix from a fully-parametric, time-inhomogeneous Markov multi-state model — pmatrix.fs","text":"","code":"# BOS example in vignette, and in msfit.flexsurvreg bexp <- flexsurvreg(Surv(Tstart, Tstop, status) ~ trans,                     data=bosms3, dist=\"exp\") tmat <- rbind(c(NA,1,2),c(NA,NA,3),c(NA,NA,NA)) # more likely to be dead (state 3) as time moves on, or if start with # BOS (state 2) pmatrix.fs(bexp, t=c(5,10), trans=tmat) #> $`5` #>           [,1]      [,2]      [,3] #> [1,] 0.2962297 0.2672185 0.4365518 #> [2,] 0.0000000 0.2672312 0.7327688 #> [3,] 0.0000000 0.0000000 1.0000000 #>  #> $`10` #>            [,1]       [,2]      [,3] #> [1,] 0.08775208 0.15056691 0.7616810 #> [2,] 0.00000000 0.07141257 0.9285874 #> [3,] 0.00000000 0.00000000 1.0000000 #>  #> attr(,\"nst\") #> [1] 3"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/pmatrix.simfs.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition probability matrix from a fully-parametric, semi-Markov multi-state model — pmatrix.simfs","title":"Transition probability matrix from a fully-parametric, semi-Markov multi-state model — pmatrix.simfs","text":"transition probability matrix semi-Markov multi-state models fitted time--event data flexsurvreg.  \\(r,s\\) entry giving probability individual state \\(s\\) time \\(t\\), given state \\(r\\) time \\(0\\).","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/pmatrix.simfs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition probability matrix from a fully-parametric, semi-Markov multi-state model — pmatrix.simfs","text":"","code":"pmatrix.simfs(   x,   trans,   t = 1,   newdata = NULL,   ci = FALSE,   tvar = \"trans\",   tcovs = NULL,   M = 1e+05,   B = 1000,   cl = 0.95,   cores = NULL,   tidy = FALSE )"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/pmatrix.simfs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition probability matrix from a fully-parametric, semi-Markov multi-state model — pmatrix.simfs","text":"x model fitted flexsurvreg.  See msfit.flexsurvreg required form model data.  Additionally semi-Markov, time variable represents time since last transition.  words response form Surv(time,status). See package vignette explanation. x can also list flexsurvreg models, one component permitted transition, illustrated msfit.flexsurvreg.  can constructed fmsm. trans Matrix indicating allowed transitions.  See msfit.flexsurvreg.  required x  list constructed fmsm. t Time predict state occupancy probabilities .  can  single number vector different numbers. newdata data frame specifying values covariates fitted model, transition number.  See msfit.flexsurvreg. ci Return confidence interval calculated simulating asymptotic normal distribution maximum likelihood estimates.  turned default, since two levels simulation required.  turned , users adjust B /M results reach desired precision.  simulation M generally vectorised, therefore increasing B usually expensive increasing M. tvar Variable data representing transition type. required x list models. tcovs Predictable time-dependent covariates age, see sim.fmsm. M Number individuals simulate order approximate transition probabilities.  Users adjust obtain required precision. B Number simulations normal asymptotic distribution used calculate confidence limits.  Decrease greater speed expense accuracy. cl Width symmetric confidence intervals, relative 1. cores Number processor cores used calculating confidence  limits repeated simulation.  default uses single-core processing. tidy TRUE results returned tidy data frame  columns estimate confidence limits, rows per state transition  time interval.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/pmatrix.simfs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transition probability matrix from a fully-parametric, semi-Markov multi-state model — pmatrix.simfs","text":"transition probability matrix.  ci=TRUE, attributes \"lower\" \"upper\" giving matrices corresponding confidence limits.  formatted printing may extracted using attr().","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/pmatrix.simfs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transition probability matrix from a fully-parametric, semi-Markov multi-state model — pmatrix.simfs","text":"computed simulating large number individuals M using maximum likelihood estimates fitted model function sim.fmsm.  Therefore requires random sampling function parametric survival model available: see \"Details\" section sim.fmsm.  available built-distributions, though users may need write custom models. Note random sampling method flexsurvspline models currently inefficient, looping M individuals slow. pmatrix.fs efficient method based solving Kolmogorov forward equation numerically, requires multi-state model Markov.  error warning given running pmatrix.simfs Markov model, still invalid.","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/pmatrix.simfs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Transition probability matrix from a fully-parametric, semi-Markov multi-state model — pmatrix.simfs","text":"Christopher Jackson chris.jackson@mrc-bsu.cam.ac.uk.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/pmatrix.simfs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transition probability matrix from a fully-parametric, semi-Markov multi-state model — pmatrix.simfs","text":"","code":"# BOS example in vignette, and in msfit.flexsurvreg  bexp <- flexsurvreg(Surv(years, status) ~ trans, data=bosms3, dist=\"exp\") tmat <- rbind(c(NA,1,2),c(NA,NA,3),c(NA,NA,NA))  # more likely to be dead (state 3) as time moves on, or if start with # BOS (state 2)  pmatrix.simfs(bexp, t=5, trans=tmat) #>         1       2       3 #> 1 0.29456 0.26769 0.43775 #> 2 0.00000 0.26781 0.73219 #> 3 0.00000 0.00000 1.00000 pmatrix.simfs(bexp, t=10, trans=tmat) #>         1       2       3 #> 1 0.08806 0.15162 0.76032 #> 2 0.00000 0.07005 0.92995 #> 3 0.00000 0.00000 1.00000  # these results should converge to those in help(pmatrix.fs), as M # increases here and ODE solving precision increases there, since with # an exponential distribution, the semi-Markov model is the same as the # Markov model."},{"path":"http://chjackson.github.io/flexsurv-dev/reference/ppath_fmixmsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability of each pathway taken through a mixture multi-state model — ppath_fmixmsm","title":"Probability of each pathway taken through a mixture multi-state model — ppath_fmixmsm","text":"Probability pathway taken mixture multi-state model","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/ppath_fmixmsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability of each pathway taken through a mixture multi-state model — ppath_fmixmsm","text":"","code":"ppath_fmixmsm(x, newdata = NULL, final = FALSE, B = NULL)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/ppath_fmixmsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability of each pathway taken through a mixture multi-state model — ppath_fmixmsm","text":"x Object returned fmixmsm, representing multi-state model built piecing together mixture models fitted flexsurvmix. newdata Data frame list covariate values.   omitted model covariates, default used, defined combinations factors covariates model factors, covariate values zero non-factor covariates model. final TRUE probabilities pathways final state added together, produce probability  ultimate outcome absorbing state multi-state model. B Number simulations use compute 95% confidence intervals, based asymptotic multivariate normal distribution basic parameter estimates.  B=NULL intervals computed.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/ppath_fmixmsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability of each pathway taken through a mixture multi-state model — ppath_fmixmsm","text":"Data frame pathway probabilities covariate value pathway.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/predict.flexsurvreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Predictions from flexible survival models — predict.flexsurvreg","title":"Predictions from flexible survival models — predict.flexsurvreg","text":"Predict outcomes flexible survival models covariate values specified newdata.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/predict.flexsurvreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predictions from flexible survival models — predict.flexsurvreg","text":"","code":"# S3 method for flexsurvreg predict(   object,   newdata,   type = \"response\",   times,   start = 0,   conf.int = FALSE,   conf.level = 0.95,   se.fit = FALSE,   p = c(0.1, 0.9),   ... )"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/predict.flexsurvreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predictions from flexible survival models — predict.flexsurvreg","text":"object Output flexsurvreg flexsurvspline, representing fitted survival model object. newdata Data frame containing covariate values produce fitted values. must column every covariate model formula used fit object, one row every combination covariate values obtain fitted predictions. newdata omitted, original data used fit model used, extracted model.frame(object). However currently work model formula contains functions, e.g. ~ factor(x). names model frame must correspond variables original data. type Character vector type predictions desired. \"response\" mean survival time (default). \"mean\" acceptable synonym \"quantile\" quantiles survival distribution specified p \"rmst\" restricted mean survival time \"survival\" survival probabilities \"cumhaz\" cumulative hazards \"hazard\" hazards \"link\" fitted values location parameter, analogous linear predictor generalized linear models (type = \"lp\" type = \"linear\" acceptable synonyms). natural scale parameter, log scale. times Vector time horizons compute fitted values. applies type \"survival\", \"cumhaz\", \"hazard\", \"rmst\". silently ignored types. specified, predictions \"survival\", \"cumhaz\", \"hazard\" made observed event time model.frame(object). \"rmst\", times specified predictions made maximum observed event time data used fit object. Specifying times = Inf valid, return mean survival (equal type = \"response\"). start Optional left-truncation time times. returned survival, hazard, cumulative hazard conditioned survival time. start must length 1 length times. Predicted times returned type \"rmst\" \"quantile\" times since time zero, times since start time. conf.int Logical. confidence intervals returned? Default FALSE. conf.level Width symmetric confidence intervals, relative 1. se.fit Logical. standard errors fitted values returned? Default FALSE. p Vector quantiles return fitted values type = \"quantile\". Default c(0.1, 0.9). ... currently used.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/predict.flexsurvreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predictions from flexible survival models — predict.flexsurvreg","text":"tibble number rows newdata order. multiple predictions requested, tibble containing single list-column data frames. list-column data frames - dimensions data frame identical. Rows added value times p requested. function wrapper around summary.flexsurvreg, designed help flexsurv integrate \"tidymodels\" ecosystem, particular censored package. summary.flexsurvreg returns results conventional format.","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/predict.flexsurvreg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Predictions from flexible survival models — predict.flexsurvreg","text":"Matthew T. Warkentin (https://github.com/mattwarkentin)","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/predict.flexsurvreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predictions from flexible survival models — predict.flexsurvreg","text":"","code":"fitg <- flexsurvreg(formula = Surv(futime, fustat) ~ age, data = ovarian, dist = \"gengamma\")  ## Simplest prediction: mean or median, for covariates defined by original dataset predict(fitg) #> # A tibble: 26 × 1 #>    .pred_time #>         <dbl> #>  1       246. #>  2       204. #>  3       411. #>  4      1295. #>  5      1687. #>  6       990. #>  7       947. #>  8       734. #>  9       503. #> 10      1105. #> # ℹ 16 more rows predict(fitg, type = \"quantile\", p = 0.5) #> # A tibble: 26 × 2 #>    .quantile .pred_quantile #>        <dbl>          <dbl> #>  1       0.5           194. #>  2       0.5           161. #>  3       0.5           325. #>  4       0.5          1022. #>  5       0.5          1331. #>  6       0.5           781. #>  7       0.5           747. #>  8       0.5           579. #>  9       0.5           397. #> 10       0.5           872. #> # ℹ 16 more rows  ## Simple prediction for user-defined covariate values predict(fitg, newdata = data.frame(age = c(40, 50, 60))) #> # A tibble: 3 × 1 #>   .pred_time #>        <dbl> #> 1      4169. #> 2      1738. #> 3       724. predict(fitg, type = \"quantile\", p = 0.5, newdata = data.frame(age = c(40,50,60))) #> # A tibble: 3 × 2 #>   .quantile .pred_quantile #>       <dbl>          <dbl> #> 1       0.5          3291. #> 2       0.5          1372. #> 3       0.5           572.  ## Predict multiple quantiles and unnest require(tidyr) #> Loading required package: tidyr pr <- predict(fitg, type = \"survival\", times = c(600, 800)) tidyr::unnest(pr, .pred) #> # A tibble: 52 × 2 #>    .eval_time .pred_survival #>         <dbl>          <dbl> #>  1        600        0.0548  #>  2        800        0.0202  #>  3        600        0.0292  #>  4        800        0.00926 #>  5        600        0.200   #>  6        800        0.104   #>  7        600        0.751   #>  8        800        0.624   #>  9        600        0.841   #> 10        800        0.742   #> # ℹ 42 more rows"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/probs_flexsurvmix.html","id":null,"dir":"Reference","previous_headings":"","what":"Probabilities of competing events from a flexsurvmix model — probs_flexsurvmix","title":"Probabilities of competing events from a flexsurvmix model — probs_flexsurvmix","text":"Probabilities competing events flexsurvmix model","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/probs_flexsurvmix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probabilities of competing events from a flexsurvmix model — probs_flexsurvmix","text":"","code":"probs_flexsurvmix(x, newdata = NULL, B = NULL)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/probs_flexsurvmix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probabilities of competing events from a flexsurvmix model — probs_flexsurvmix","text":"x Fitted model object returned flexsurvmix. newdata Data frame list covariate values.   omitted model covariates, default used, defined combinations factors covariates model factors, covariate values zero non-factor covariates model. B Number simulations use compute 95% confidence intervals, based asymptotic multivariate normal distribution basic parameter estimates.  B=NULL intervals computed.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/probs_flexsurvmix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probabilities of competing events from a flexsurvmix model — probs_flexsurvmix","text":"data frame containing probability competing   events occur next, event covariate values specified  newdata.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/qfinal_fmixmsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantiles of the distribution of the time until reaching a final state in a mixture multi-state model — qfinal_fmixmsm","title":"Quantiles of the distribution of the time until reaching a final state in a mixture multi-state model — qfinal_fmixmsm","text":"Calculate quantiles time start process possible final (\"absorbing\") state mixture multi-state model. Models cycles supported.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/qfinal_fmixmsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantiles of the distribution of the time until reaching a final state in a mixture multi-state model — qfinal_fmixmsm","text":"","code":"qfinal_fmixmsm(   x,   newdata = NULL,   final = FALSE,   B = NULL,   n = 10000,   probs = c(0.025, 0.5, 0.975) )"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/qfinal_fmixmsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantiles of the distribution of the time until reaching a final state in a mixture multi-state model — qfinal_fmixmsm","text":"x Object returned fmixmsm, representing multi-state model built piecing together mixture models fitted flexsurvmix. newdata Data frame list covariate values.   omitted model covariates, default used, defined combinations factors covariates model factors, covariate values zero non-factor covariates model. final TRUE mean time final state calculated final state, taking weighted average mean time travel pathway ending final state, weighted probability pathway.   FALSE  (default) separate mean calculated pathway. B Number simulations use compute 95% confidence intervals, based asymptotic multivariate normal distribution basic parameter estimates.  B=NULL intervals computed. n Number individual-level simulations use characterise time--event distributions probs Quantiles calculate, default, c(0.025, 0.5, 0.975)","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/qfinal_fmixmsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantiles of the distribution of the time until reaching a final state in a mixture multi-state model — qfinal_fmixmsm","text":"Data frame quantiles time final state pathway   covariate value, final state covariate value.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/qgeneric.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function to find quantiles of a distribution — qgeneric","title":"Generic function to find quantiles of a distribution — qgeneric","text":"Generic function find quantiles distribution, given equivalent probability distribution function.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/qgeneric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function to find quantiles of a distribution — qgeneric","text":"","code":"qgeneric(pdist, p, matargs = NULL, scalarargs = NULL, ...)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/qgeneric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function to find quantiles of a distribution — qgeneric","text":"pdist Probability distribution function, example, pnorm normal distribution, must defined current workspace.  accept return vectorised parameters values.  also return correct values entire real line, example positive distribution pdist(x)==0 \\(x<0\\). p Vector probabilities find quantiles . matargs Character vector giving elements ... represent vector parameters distribution.  Empty default.  vectorised, become matrices.  used arguments gamma knots qsurvspline. scalarargs Character vector naming scalar arguments distribution function vectorised.  used arguments scale timescale qsurvspline. ... remaining arguments define parameters distribution pdist.  MUST named explicitly. may also contain standard arguments log.p (logical; default FALSE, TRUE, probabilities p given log(p)), lower.tail (logical; TRUE (default), probabilities P[X <= x] otherwise, P[X > x].). distribution bounded , contain arguments lbound ubound respectively, returned p 0 1 respectively.  Defaults -Inf Inf respectively.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/qgeneric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function to find quantiles of a distribution — qgeneric","text":"Vector quantiles distribution p.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/qgeneric.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic function to find quantiles of a distribution — qgeneric","text":"function used default custom distributions quantile function provided. works finding root equation \\(h(q) = pdist(q) - p = 0\\). Starting interval \\((-1, 1)\\), interval width expanded 50% \\(h()\\) opposite sign either end.  root found using uniroot. assumes suitably smooth, continuous distribution.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/qgeneric.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generic function to find quantiles of a distribution — qgeneric","text":"Christopher Jackson <chris.jackson@mrc-bsu.cam.ac.uk>","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/qgeneric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic function to find quantiles of a distribution — qgeneric","text":"","code":"qnorm(c(0.025, 0.975), 0, 1) #> [1] -1.959964  1.959964 qgeneric(pnorm, c(0.025, 0.975), mean=0, sd=1) # must name the arguments #> [1] -1.959964  1.959964"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/quantile_flexsurvmix.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantiles of time-to-event distributions in a flexsurvmix model — quantile_flexsurvmix","title":"Quantiles of time-to-event distributions in a flexsurvmix model — quantile_flexsurvmix","text":"returns quantiles event-specific parametric time--event distribution mixture model, describes time event conditionally event one happens.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/quantile_flexsurvmix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantiles of time-to-event distributions in a flexsurvmix model — quantile_flexsurvmix","text":"","code":"quantile_flexsurvmix(x, newdata = NULL, B = NULL, probs = c(0.025, 0.5, 0.975))"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/quantile_flexsurvmix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantiles of time-to-event distributions in a flexsurvmix model — quantile_flexsurvmix","text":"x Fitted model object returned flexsurvmix. newdata Data frame list covariate values.   omitted model covariates, default used, defined combinations factors covariates model factors, covariate values zero non-factor covariates model. B Number simulations use compute 95% confidence intervals, based asymptotic multivariate normal distribution basic parameter estimates.  B=NULL intervals computed. probs Vector alternative quantiles, default c(0.025, 0.95, 0.975) giving median 95% interval.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics augment, glance, tidy","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/residuals.flexsurvreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate residuals for flexible survival models — residuals.flexsurvreg","title":"Calculate residuals for flexible survival models — residuals.flexsurvreg","text":"Calculates residuals flexsurvreg flexsurvspline model fits.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/residuals.flexsurvreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate residuals for flexible survival models — residuals.flexsurvreg","text":"","code":"# S3 method for flexsurvreg residuals(object, type = \"response\", ...)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/residuals.flexsurvreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate residuals for flexible survival models — residuals.flexsurvreg","text":"object Output flexsurvreg flexsurvspline, representing fitted survival model object. type Character string type residual desired. Currently \"response\" \"coxsnell\" supported. residual types may become available future versions. ... currently used.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/residuals.flexsurvreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate residuals for flexible survival models — residuals.flexsurvreg","text":"Numeric vector length nobs(object).","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/residuals.flexsurvreg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate residuals for flexible survival models — residuals.flexsurvreg","text":"Residuals type = \"response\" calculated naive difference observed survival covariate-specific predicted mean survival predict.flexsurvreg, ignoring whether event time observed censored. type=\"coxsnell\" returns Cox-Snell residual, defined estimated cumulative hazard data point.  check fit fully featured utility provided function coxsnell_flexsurvreg.","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/residuals.flexsurvreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate residuals for flexible survival models — residuals.flexsurvreg","text":"","code":"fitg <- flexsurvreg(formula = Surv(futime, fustat) ~ age, data = ovarian, dist = \"gengamma\") residuals(fitg, type=\"response\") #>  [1]  -187.21560   -88.78121  -255.36822  -873.56963 -1255.83883  -541.96330 #>  [7]  -483.01162  -258.61757   -25.66308  -541.58483  -324.11343  -977.14761 #> [13]    20.81491  -167.52130 -3640.36131 -2316.90107 -3552.79251 -1681.40682 #> [19]  -105.56084 -1679.31116   476.11922    64.41307 -2839.10079  -193.52725 #> [25]  -126.81187  -462.83150"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/rmst_flexsurvmix.html","id":null,"dir":"Reference","previous_headings":"","what":"Restricted mean times to events from a flexsurvmix model — rmst_flexsurvmix","title":"Restricted mean times to events from a flexsurvmix model — rmst_flexsurvmix","text":"returns restricted mean event-specific parametric time--event distribution mixture model, mean time event conditionally event one happens, conditionally event time less time horizon tot.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/rmst_flexsurvmix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restricted mean times to events from a flexsurvmix model — rmst_flexsurvmix","text":"","code":"rmst_flexsurvmix(x, newdata = NULL, tot = Inf, B = NULL)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/rmst_flexsurvmix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restricted mean times to events from a flexsurvmix model — rmst_flexsurvmix","text":"x Fitted model object returned flexsurvmix. newdata Data frame list covariate values.   omitted model covariates, default used, defined combinations factors covariates model factors, covariate values zero non-factor covariates model. tot Time horizon compute restricted mean . B Number simulations use compute 95% confidence intervals, based asymptotic multivariate normal distribution basic parameter estimates.  B=NULL intervals computed.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/rmst_flexsurvmix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Restricted mean times to events from a flexsurvmix model — rmst_flexsurvmix","text":"Restricted mean times next event conditionally alternative event,   given specified covariate values.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/rmst_generic.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function to find restricted mean survival time for some distribution — rmst_generic","title":"Generic function to find restricted mean survival time for some distribution — rmst_generic","text":"Generic function find restricted mean distribution, given equivalent probability distribution function, using numeric integration.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/rmst_generic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function to find restricted mean survival time for some distribution — rmst_generic","text":"","code":"rmst_generic(pdist, t, start = 0, matargs = NULL, scalarargs = NULL, ...)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/rmst_generic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function to find restricted mean survival time for some distribution — rmst_generic","text":"pdist Probability distribution function, example, pnorm normal distribution, must defined current workspace.  accept return vectorised parameters values.  also return correct values entire real line, example positive distribution pdist(x)==0 \\(x<0\\). t Vector times rmst evaluated start Optional left-truncation time times.  returned restricted mean survival conditioned survival time. matargs Character vector giving elements ... represent vector parameters distribution.  Empty default.  vectorised, become matrices.  used arguments gamma knots psurvspline. scalarargs Character vector naming scalar arguments distribution function vectorised.  used, example, arguments scale timescale psurvspline. ... remaining arguments define parameters distribution pdist.  MUST named explicitly.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/rmst_generic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function to find restricted mean survival time for some distribution — rmst_generic","text":"Vector restricted mean survival times distribution p.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/rmst_generic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic function to find restricted mean survival time for some distribution — rmst_generic","text":"function used default custom distributions rmst function provided. assumes suitably smooth, continuous distribution.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/rmst_generic.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generic function to find restricted mean survival time for some distribution — rmst_generic","text":"Christopher Jackson <chris.jackson@mrc-bsu.cam.ac.uk>","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/rmst_generic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic function to find restricted mean survival time for some distribution — rmst_generic","text":"","code":"rmst_lnorm(500, start=250, meanlog=7.4225, sdlog = 1.1138) #> [1] 237.8849 rmst_generic(plnorm, 500, start=250, meanlog=7.4225, sdlog = 1.1138) #> [1] 237.8849 # must name the arguments"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/sim.fmsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate paths through a fully parametric semi-Markov multi-state model — sim.fmsm","title":"Simulate paths through a fully parametric semi-Markov multi-state model — sim.fmsm","text":"Simulate changes state transition times semi-Markov multi-state model fitted using flexsurvreg.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/sim.fmsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate paths through a fully parametric semi-Markov multi-state model — sim.fmsm","text":"","code":"sim.fmsm(   x,   trans = NULL,   t,   newdata = NULL,   start = 1,   M = 10,   tvar = \"trans\",   tcovs = NULL,   tidy = FALSE,   debug = FALSE )"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/sim.fmsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate paths through a fully parametric semi-Markov multi-state model — sim.fmsm","text":"x model fitted flexsurvreg. See msfit.flexsurvreg required form model data. Alternatively x can list fitted flexsurvreg model objects.  ith element list model corresponding ith transition trans.  efficient way fit multi-state model, valid parameters different different transitions. trans Matrix indicating allowed transitions.  See msfit.flexsurvreg. t Time, vector times M individuals, simulate trajectories . newdata data frame specifying values covariates fitted model, transition number.  See msfit.flexsurvreg. start Starting state, vector starting states M individuals. M Number individual trajectories simulate. tvar Variable data representing transition type. required x list models. tcovs Names \"predictable\" time-dependent covariates newdata, .e. whose values change rate time. Age typical example.  simulation, values updated transition time, adding current time value supplied newdata.  assumes covariate measured unit time. tcovs supplied character vector. tidy TRUE simulated data returned tidy data frame one row per simulated transition.  See simfs_bytrans function rearrange data format simulated non-tidy format.  Currently includes event times, excludes times censoring reported tidy=FALSE. debug Print intermediate outputs: development use.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/sim.fmsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate paths through a fully parametric semi-Markov multi-state model — sim.fmsm","text":"tidy=TRUE, data frame one row simulated transition, giving individual ID id, start state start, end state end, transition label trans, time transition since start process (time), time since previous transition (delay). tidy=FALSE, list two matrices named st t.  rows matrix represent simulated individuals.  columns t contain times individual changes state, corresponding states st. first columns always contain starting states starting times. last column t represents either time individual moves absorbing state, right-censoring transient state time given t argument sim.fmsm.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/sim.fmsm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate paths through a fully parametric semi-Markov multi-state model — sim.fmsm","text":"sim.fmsm relies presence function sample random numbers parametric survival distribution used fitted model x, example rweibull Weibull models. x fitted using custom distribution, called dist say, must function called (something like) rdist either working environment, supplied dfns argument flexsurvreg.  must format standard R functions rweibull, first argument n, remaining arguments giving parameters distribution.  must vectorised respect parameter arguments. function valid semi-Markov (\"clock-reset\") models, though warning error currently given model type. equivalent time-inhomogeneous Markov (\"clock-forward\") models currently implemented.","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/sim.fmsm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate paths through a fully parametric semi-Markov multi-state model — sim.fmsm","text":"Christopher Jackson chris.jackson@mrc-bsu.cam.ac.uk.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/sim.fmsm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate paths through a fully parametric semi-Markov multi-state model — sim.fmsm","text":"","code":"bexp <- flexsurvreg(Surv(years, status) ~ trans, data=bosms3, dist=\"exp\") tmat <- rbind(c(NA,1,2),c(NA,NA,3),c(NA,NA,NA)) sim.fmsm(bexp, M=10, t=5, trans=tmat) #> $st #>       [,1] [,2] [,3] #>  [1,]    1    2    2 #>  [2,]    1    2    2 #>  [3,]    1    3    3 #>  [4,]    1    3    3 #>  [5,]    1    2    3 #>  [6,]    1    1    1 #>  [7,]    1    1    1 #>  [8,]    1    3    3 #>  [9,]    1    2    3 #> [10,]    1    2    2 #>  #> $t #>       [,1]       [,2]      [,3] #>  [1,]    0 0.04056377 5.0000000 #>  [2,]    0 2.37118887 5.0000000 #>  [3,]    0 2.12455204 2.1245520 #>  [4,]    0 0.36715147 0.3671515 #>  [5,]    0 0.94681789 1.9433587 #>  [6,]    0 5.00000000 5.0000000 #>  [7,]    0 5.00000000 5.0000000 #>  [8,]    0 4.25651403 4.2565140 #>  [9,]    0 0.05740866 2.5896499 #> [10,]    0 2.77917357 5.0000000 #>  #> attr(,\"trans\") #>      [,1] [,2] [,3] #> [1,]   NA    1    2 #> [2,]   NA   NA    3 #> [3,]   NA   NA   NA"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/simfinal_fmsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate and summarise final outcomes from a flexible parametric multi-state model — simfinal_fmsm","title":"Simulate and summarise final outcomes from a flexible parametric multi-state model — simfinal_fmsm","text":"Estimates probability final outcome (\"absorbing\" state), mean quantiles time outcome people experience , simulating large sample individuals model.  can used Markov semi-Markov models.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/simfinal_fmsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate and summarise final outcomes from a flexible parametric multi-state model — simfinal_fmsm","text":"","code":"simfinal_fmsm(   x,   newdata = NULL,   probs = c(0.025, 0.5, 0.975),   t = 1000,   M = 1e+05,   B = 0,   cores = NULL )"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/simfinal_fmsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate and summarise final outcomes from a flexible parametric multi-state model — simfinal_fmsm","text":"x Object returned fmsm, representing multi-state model formed transition-specific time--event models fitted flexsurvreg. newdata Data frame covariate values, one column per covariate, one row per alternative value. probs Quantiles calculate, default, c(0.025, 0.5, 0.975) median 95% interval. t Maximum time simulate , passed sim.fmsm, summaries taken subset individuals simulated data absorbing state time. M Number individuals simulate. B Number simulations use calculate 95% confidence intervals based asymptotic normal distribution basic parameter estimates. B=0 intervals calculated. cores Number processor cores use.  NULL (default) single core used.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/simfinal_fmsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate and summarise final outcomes from a flexible parametric multi-state model — simfinal_fmsm","text":"tidy data frame rows combination covariate values   quantity interest.  quantity interest identified   column quantity, value quantity val,   additional columns lower upper giving 95%   confidence intervals quantity, B>0.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/simfinal_fmsm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate and summarise final outcomes from a flexible parametric multi-state model — simfinal_fmsm","text":"competing risks model, .e. model defined just one starting state multiple destination states representing competing events, returns probability governing next event happens, distribution  time event conditionally event happening.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/simfs_bytrans.html","id":null,"dir":"Reference","previous_headings":"","what":"Reformat simulated multi-state data with one row per simulated transition — simfs_bytrans","title":"Reformat simulated multi-state data with one row per simulated transition — simfs_bytrans","text":"Reformat simulated multi-state data one row per simulated transition","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/simfs_bytrans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reformat simulated multi-state data with one row per simulated transition — simfs_bytrans","text":"","code":"simfs_bytrans(simfs)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/simfs_bytrans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reformat simulated multi-state data with one row per simulated transition — simfs_bytrans","text":"simfs Output sim.fmsm representing simulated histories multi-state model.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/simfs_bytrans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reformat simulated multi-state data with one row per simulated transition — simfs_bytrans","text":"Data frame four columns giving transition start state, transition end state, transition name time taken transition.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/simt_flexsurvmix.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate times to competing events from a mixture multi-state model — simt_flexsurvmix","title":"Simulate times to competing events from a mixture multi-state model — simt_flexsurvmix","text":"Simulate times competing events mixture multi-state model","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/simt_flexsurvmix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate times to competing events from a mixture multi-state model — simt_flexsurvmix","text":"","code":"simt_flexsurvmix(x, newdata = NULL, n)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/simt_flexsurvmix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate times to competing events from a mixture multi-state model — simt_flexsurvmix","text":"x Fitted model object returned flexsurvmix. newdata Data frame list covariate values.   omitted model covariates, default used, defined combinations factors covariates model factors, covariate values zero non-factor covariates model. n Number simulations","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/simt_flexsurvmix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate times to competing events from a mixture multi-state model — simt_flexsurvmix","text":"Data frame n*m rows column competing   event, m number alternative covariate values,   number rows newdata.   simulated time represents   time event conditionally event one   occurs.  function simulate event occurs.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/simulate.flexsurvreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate censored time-to-event data from a fitted flexsurvreg model — simulate.flexsurvreg","title":"Simulate censored time-to-event data from a fitted flexsurvreg model — simulate.flexsurvreg","text":"Simulate censored time--event data fitted flexsurvreg model","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/simulate.flexsurvreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate censored time-to-event data from a fitted flexsurvreg model — simulate.flexsurvreg","text":"","code":"# S3 method for flexsurvreg simulate(   object,   nsim = 1,   seed = NULL,   newdata = NULL,   start = NULL,   censtime = NULL,   tidy = FALSE,   ... )"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/simulate.flexsurvreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate censored time-to-event data from a fitted flexsurvreg model — simulate.flexsurvreg","text":"object Object returned flexsurvreg. nsim Number simulations per row newdata. seed Random number seed. returned result function, described simulate lm method. newdata Data frame defining alternative sets covariate values simulate . omitted, defaults data originally used fit model. start Optional left-truncation time times.  returned survival, hazard cumulative hazard conditioned survival time.   Predicted times returned \"rmst\", \"mean\", \"median\" \"quantile\" times since time zero, times since start time. vector length t can supplied allow different truncation times prediction time, though make sense usual case function used calculate predicted trajectory single individual.  default start time changed version 0.4 flexsurv - previously vector start times observed data. censtime right-censoring time, vector times matching rows   newdata.  NULL (default) uncensored times events simulated. tidy TRUE \"tidy\" \"long\"-format data frame   returned, rows defined combinations covariates simulation   replicates.  simulation replicate indicated column named . FALSE, data frame returned one row per set   covariate values, different columns different simulation   replicates.  traditional format `simulate` methods base   R. either case, simulated time indicator whether time   event time (rather time right-censoring) returned   different columns. ... arguments (currently used).","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/simulate.flexsurvreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate censored time-to-event data from a fitted flexsurvreg model — simulate.flexsurvreg","text":"data frame, format determined whether tidy specified.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/simulate.flexsurvreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate censored time-to-event data from a fitted flexsurvreg model — simulate.flexsurvreg","text":"","code":"fit <- flexsurvreg(formula = Surv(futime, fustat) ~ rx, data = ovarian, dist=\"weibull\") fit2 <- flexsurvspline(formula = Surv(futime, fustat) ~ rx, data = ovarian, k=3) nd = data.frame(rx=1:2) simulate(fit, seed=1002, newdata=nd) #>      time_1 event_1 #> 1  575.5959       1 #> 2 2391.6927       1 simulate(fit, seed=1002, newdata=nd, start=500) #>      time_1 event_1 #> 1  993.9562       1 #> 2 2750.1742       1 simulate(fit2, nsim=3, seed=1002, newdata=nd) #>     time_1   time_2    time_3 event_1 event_2 event_3 #> 1 457.8966 3564.307  943.0164       1       1       1 #> 2 419.5862  731.334 9729.0033       1       1       1 simulate(fit2, nsim=3, seed=1002, newdata=nd, start=c(500,1000)) #>     time_1    time_2    time_3 event_1 event_2 event_3 #> 1 2081.447 12780.637  4008.034       1       1       1 #> 2 2872.484  3469.562 24816.827       1       1       1"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/standsurv.html","id":null,"dir":"Reference","previous_headings":"","what":"Marginal survival and hazards of fitted flexsurvreg models — standsurv","title":"Marginal survival and hazards of fitted flexsurvreg models — standsurv","text":"Returns tidy data.frame marginal survival probabilities, hazards,  restricted mean survival, quantiles marginal survival function user-defined time points covariate patterns. Standardization performed undefined covariates model.  user provides data standardize . Contrasts can calculated  resulting estimates average treatment effect average  treatment effect treated treated subset data supplied.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/standsurv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marginal survival and hazards of fitted flexsurvreg models — standsurv","text":"","code":"standsurv(   object,   newdata = NULL,   at = list(list()),   atreference = 1,   type = \"survival\",   t = NULL,   ci = FALSE,   se = FALSE,   boot = FALSE,   B = NULL,   cl = 0.95,   trans = \"log\",   contrast = NULL,   trans.contrast = NULL,   seed = NULL,   rmap,   ratetable,   scale.ratetable = 365.25,   n.gauss.quad = 100,   quantiles = 0.5,   interval = c(1e-08, 500) )"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/standsurv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Marginal survival and hazards of fitted flexsurvreg models — standsurv","text":"object Output flexsurvreg flexsurvspline, representing fitted survival model object. newdata Data frame containing covariate values produce marginal values . specified fitted model data.frame used. must column every covariate model formula user wishes standardize .  format original data, factors single variable, 0/1 contrasts. covariates fixed specified .  one row every combination covariates  standardize . newdata contains variable named '(weights)'  weighted mean used create standardized estimates. default behaviour fitted model contains case weights, stored  fitted model data.frame. list scenarios specific covariates fixed  certain values. element must list. example, covariate group levels \"Good\", \"Medium\" \"Poor\",  standardized survival plots group averaging  covariates specified using  =list(list(group=\"Good\"), list(group=\"Medium\"), list(group=\"Poor\")). atreference reference scenario making contrasts. Default 1 (.e. first element ). type \"survival\" marginal survival probabilities.  relative survival framework returns marginal -cause survival  (see details). \"hazard\" hazard marginal survival probability.  relative survival framework returns marginal -cause hazard  (see details). \"rmst\" standardized restricted mean survival. \"relsurvival\" marginal relative survival (can specified relative survival model fitted flexsurv). \"excesshazard\" marginal excess hazards (can specified relative survival model fitted flexsurv). \"quantile\" quantiles marginal -cause survival  distribution. quantiles option also needs provided. t Times calculate marginal values . ci confidence intervals calculated?  Defaults FALSE se standard errors calculated?  Defaults FALSE boot bootstrapping used calculate standard error  confidence intervals? Defaults FALSE, case delta method  used B Number bootstrap simulations normal asymptotic  distribution estimates used calculate confidence intervals  standard errors. Decrease greater speed expense accuracy.  specify boot = TRUE cl Width symmetric confidence intervals, relative 1. trans Transformation apply calculating standard errors via delta method obtain confidence intervals. default transformation  \"log\". possible names \"none\", \"loglog\", \"logit\". contrast Contrasts standardized measures defined scenarios. Options \"difference\" \"ratio\". n-1 new columns created n number scenarios. Default NULL (.e. contrasts calculated). trans.contrast Transformation apply calculating standard errors contrasts via delta method obtain confidence intervals. default transformation \"none\" differences survival, hazard, quantiles, RMST,  \"log\" ratios survival, hazard, quantiles RMST. seed random seed use (bootstrapping confidence intervals) rmap list maps data set names expected ratetable names.  must specified -cause survival hazards required fitting relative survival model. can also specified expected rates required plotting purposes. See details section . ratetable table expected event rates  (see ratetable) scale.ratetable Transformation time scale fitted  flexsurv model time scale ratetable. example,  analysis time fitted model years ratetable  units/day use scale.ratetable = 365.25.  default often ratetable units/day (see example). n.gauss.quad Number Gaussian quadrature points used integrating  -cause survival function calculating RMST relative survival  framework (default = 100) quantiles type=\"quantile\", specifies quantiles  survival time distribution return estimates . interval Interval survival times quantile root finding.  Default c(1e-08, 500).","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/standsurv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Marginal survival and hazards of fitted flexsurvreg models — standsurv","text":"tibble containing one row  time-point. column naming convention {} ith scenario corresponding confidence intervals (specified) named {}_lci {}_uci. Contrasts named contrast{k}_{j}  comparison kth versus jth scenario. addition tidy long-format data.frames returned attributes standsurv_at standsurv_contrast. can passed  ggplot plotting purposes (see plot.standsurv).","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/standsurv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Marginal survival and hazards of fitted flexsurvreg models — standsurv","text":"syntax standsurv follows closely Stata's  standsurv command written Paul Lambert Michael Crowther.  function calculates standardized (marginal) measures including standardized survival functions, standardized restricted mean survival times, quantiles hazard standardized survival. standardized survival defined $$S_s(t|X=x) = E(S(t|X=x,Z)) = \\frac{1}{N} \\sum_{=1}^N S(t|X=x,Z=z_i)$$ hazard standardized survival weighted average  individual hazard functions time t, weighted survival function time: $$h_s(t|X=x) = \\frac{\\sum_{=1}^N S(t|X=x,Z=z_i)h(t|X=x,Z=z_i)}{\\sum_{=1}^N S(t|X=x,Z=z_i)}$$ Marginal expected survival hazards can calculated providing  population-based lifetable class ratetable ratetable  mapping stratification factors lifetable user dataset using rmap. stratification factors fitted survival model user must specify newdata along covariates model. marginal expected survival calculated  using \"Ederer\" method assumes censoring relevant  approach forecasting (see  survexp). worked example given . Marginal -cause survival hazards can calculated fitting relative survival model, utilise expected survival population ratetable. See Rutherford et al. (Chapter 6) details.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/standsurv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Marginal survival and hazards of fitted flexsurvreg models — standsurv","text":"Paul Lambert, 2021. \"STANDSURV: Stata module compute  standardized (marginal) survival related functions,\"  Statistical Software Components S458991, Boston College Department  Economics. https://ideas.repec.org/c/boc/bocode/s458991.html Rutherford, MJ, Lambert PC, Sweeting MJ, Pennington B, Crowther MJ, Abrams KR, Latimer NR. 2020. \"NICE DSU Technical Support Document 21: Flexible Methods  Survival Analysis\"  https://nicedsu.sites.sheffield.ac.uk/tsds/flexible-methods--survival-analysis-tsd","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/standsurv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Marginal survival and hazards of fitted flexsurvreg models — standsurv","text":"Michael Sweeting <mikesweeting79@gmail.com>","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/standsurv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Marginal survival and hazards of fitted flexsurvreg models — standsurv","text":"","code":"## mean age is higher in those with smaller observed survival times  newbc <- bc set.seed(1) newbc$age <- rnorm(dim(bc)[1], mean = 65-scale(newbc$recyrs, scale=FALSE),  sd = 5)  ## Fit a Weibull flexsurv model with group and age as covariates weib_age <- flexsurvreg(Surv(recyrs, censrec) ~ group+age, data=newbc,                         dist=\"weibull\")                         ## Calculate standardized survival and the difference in standardized survival ## for the three levels of group across a grid of survival times                         standsurv_weib_age <- standsurv(weib_age,                                             at = list(list(group=\"Good\"),                                                       list(group=\"Medium\"),                                                       list(group=\"Poor\")),                                             t=seq(0,7, length.out=100),                                            contrast = \"difference\", ci=FALSE) standsurv_weib_age #> # A tibble: 100 × 6 #>      time   at1   at2   at3 contrast2_1 contrast3_1 #>     <dbl> <dbl> <dbl> <dbl>       <dbl>       <dbl> #>  1 0      1     1     1         0           0       #>  2 0.0707 0.999 0.998 0.996    -0.00111    -0.00353 #>  3 0.141  0.998 0.995 0.988    -0.00293    -0.00931 #>  4 0.212  0.996 0.991 0.980    -0.00517    -0.0164  #>  5 0.283  0.994 0.986 0.970    -0.00772    -0.0244  #>  6 0.354  0.992 0.981 0.959    -0.0105     -0.0331  #>  7 0.424  0.989 0.976 0.947    -0.0135     -0.0425  #>  8 0.495  0.987 0.970 0.935    -0.0167     -0.0523  #>  9 0.566  0.984 0.964 0.922    -0.0201     -0.0626  #> 10 0.636  0.981 0.958 0.908    -0.0236     -0.0732  #> # ℹ 90 more rows  ## Calculate hazard of standardized survival and the marginal hazard ratio ## for the three levels of group across a grid of survival times ## 10 bootstraps for confidence intervals (this should be larger) if (FALSE) {           haz_standsurv_weib_age <- standsurv(weib_age,                                             at = list(list(group=\"Good\"),                                                       list(group=\"Medium\"),                                                       list(group=\"Poor\")),                                             t=seq(0,7, length.out=100),                                            type=\"hazard\",                                            contrast = \"ratio\", boot = TRUE,                                            B=10, ci=TRUE) haz_standsurv_weib_age                                             plot(haz_standsurv_weib_age, ci=TRUE) ## Hazard ratio plot shows a decreasing marginal HR  ## Whereas the conditional HR is constant (model is a PH model) plot(haz_standsurv_weib_age, contrast=TRUE, ci=TRUE)  ## Calculate standardized survival from a Weibull model together with expected ## survival matching to US lifetables  # age at diagnosis in days. This is required to match to US ratetable, whose # timescale is measured in days newbc$agedays <- floor(newbc$age * 365.25)   ## Create some random diagnosis dates centred on 01/01/2010 with SD=1 year ## These will be used to match to expected rates in the lifetable newbc$diag <- as.Date(floor(rnorm(dim(newbc)[1],                       mean = as.Date(\"01/01/2010\", \"%d/%m/%Y\"), sd=365)),                       origin=\"1970-01-01\") ## Create sex (assume all are female) newbc$sex <- factor(\"female\") standsurv_weib_expected <- standsurv(weib_age,                                             at = list(list(group=\"Good\"),                                                       list(group=\"Medium\"),                                                       list(group=\"Poor\")),                                             t=seq(0,7, length.out=100),                                            rmap=list(sex = sex,                                                      year = diag,                                                      age = agedays),                                            ratetable = survival::survexp.us,                                            scale.ratetable = 365.25,                                            newdata = newbc) ## Plot marginal survival with expected survival superimposed                                             plot(standsurv_weib_expected, expected=TRUE) }"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/summary.flexsurvreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Summaries of fitted flexible survival models — summary.flexsurvreg","title":"Summaries of fitted flexible survival models — summary.flexsurvreg","text":"Return fitted survival, cumulative hazard hazard series times fitted flexsurvreg flexsurvspline model.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/summary.flexsurvreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summaries of fitted flexible survival models — summary.flexsurvreg","text":"","code":"# S3 method for flexsurvreg summary(   object,   newdata = NULL,   X = NULL,   type = \"survival\",   fn = NULL,   t = NULL,   quantiles = 0.5,   start = 0,   cross = TRUE,   ci = TRUE,   se = FALSE,   B = 1000,   cl = 0.95,   tidy = FALSE,   na.action = na.pass,   ... )"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/summary.flexsurvreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summaries of fitted flexible survival models — summary.flexsurvreg","text":"object Output flexsurvreg flexsurvspline, representing fitted survival model object. newdata Data frame containing covariate values produce fitted values .  list can coerced data frame.  must column every covariate model formula, one row every combination covariates fitted values wanted .  format original data, factors single variable, 0/1 contrasts. omitted, continuous covariates, single summary provided covariates set mean values data - categorical covariates, means 0/1 indicator variables taken.  factor covariates model, distinct groups used default. X Alternative way defining covariate values produce fitted values .  Since version 0.4, newdata easier way require user create factor contrasts, X kept backwards compatibility. Columns X represent different covariates, rows represent multiple combinations covariate values.  example matrix(c(1,2),nrow=2) one covariate model, want survival covariate values 1 2.  vector can also supplied just one combination covariates needed. ``factor'' (categorical) covariates, values contrasts representing factor levels (returned contrasts function) used.  example, covariate agegroup specified unordered factor levels 20-29, 30-39, 40-49, 50-59, baseline level 20-29, three contrasts.  return summaries groups 20-29 40-49, supply X = rbind(c(0,0,0), c(0,1,0)), since contrasts zero baseline level, second contrast ``turned '' third level 40-49. type \"survival\" survival probabilities. \"cumhaz\" cumulative hazards. \"hazard\" hazards. \"rmst\" restricted mean survival. \"mean\" mean survival. \"median\" median survival (alternative type=\"quantile\" quantiles=0.5). \"quantile\" quantiles survival time distribution. \"link\" fitted value location parameter (.e. \"linear predictor\" natural scale parameter, log scale) Ignored \"fn\" specified. fn Custom function parameters summarise time. optional first two arguments t representing time, start representing left-truncation points, remaining arguments must parameters distribution.  vectorised, return vector corresponding vectors given t, start parameter vectors. t Times calculate fitted values . default, sorted unique observation (including censoring) times data - left-truncated datasets \"stop\" times. quantiles type=\"quantile\", specifies quantiles survival time distribution return estimates . start Optional left-truncation time times.  returned survival, hazard cumulative hazard conditioned survival time.   Predicted times returned \"rmst\", \"mean\", \"median\" \"quantile\" times since time zero, times since start time. vector length t can supplied allow different truncation times prediction time, though make sense usual case function used calculate predicted trajectory single individual.  default start time changed version 0.4 flexsurv - previously vector start times observed data. cross TRUE (default) summaries calculated combinations times specified t covariate vectors specifed newdata. FALSE, times t length equal number rows newdata, one summary produced row newdata paired corresponding element t. used, e.g. determining Cox-Snell residuals. ci Set FALSE omit confidence intervals. se Set TRUE include standard errors. B Number simulations normal asymptotic distribution estimates used calculate confidence intervals standard errors. Decrease greater speed expense accuracy, set B=0 turn calculation CIs SEs. cl Width symmetric confidence intervals, relative 1. tidy TRUE, results returned tidy data frame instead list.  can help using ggplot2 package compare summaries different covariate values. na.action Function determining done missing values newdata.  na.pass (default) summaries NA produced missing covariate values.  na.omit, missing values dropped, behaviour summary.flexsurvreg flexsurv version 1.2. ... arguments passed methods.  Currently unused.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/summary.flexsurvreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summaries of fitted flexible survival models — summary.flexsurvreg","text":"tidy=FALSE, list one component unique covariate value (categorical covariates) one component (covariates continuous covariates).  components matrix one row time t, giving estimated survival (cumulative hazard, hazard) 95% confidence limits.  list components named covariate names values define . tidy=TRUE, data frame returned instead.  formed stacking list components, additional columns identify covariate values block corresponds . multiple summaries, additional list component named X contains matrix exact values contrasts (dummy covariates) defining summary. plot.flexsurvreg function can used quickly plot model-based summaries empirical summaries Kaplan-Meier curves, diagnose model fit. Confidence intervals obtained sampling randomly asymptotic normal distribution maximum likelihood estimates taking quantiles (see, e.g. Mandel (2013)).","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/summary.flexsurvreg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summaries of fitted flexible survival models — summary.flexsurvreg","text":"Time-dependent covariates currently supported.  covariate values assumed constant time fitted curve.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/summary.flexsurvreg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Summaries of fitted flexible survival models — summary.flexsurvreg","text":"Mandel, M. (2013). \"Simulation based confidence intervals functions complicated derivatives.\" American Statistician (press).","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/summary.flexsurvreg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summaries of fitted flexible survival models — summary.flexsurvreg","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/summary.flexsurvrtrunc.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise quantities of interest from fitted flexsurvrtrunc models — summary.flexsurvrtrunc","title":"Summarise quantities of interest from fitted flexsurvrtrunc models — summary.flexsurvrtrunc","text":"function extracts quantities interest untruncated  version model individual-specific right truncation points  fitted flexsurvrtrunc.  Note covariates currently supported flexsurvrtrunc.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/summary.flexsurvrtrunc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise quantities of interest from fitted flexsurvrtrunc models — summary.flexsurvrtrunc","text":"","code":"# S3 method for flexsurvrtrunc summary(   object,   type = \"survival\",   fn = NULL,   t = NULL,   quantiles = 0.5,   ci = TRUE,   se = FALSE,   B = 1000,   cl = 0.95,   ... )"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/summary.flexsurvrtrunc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise quantities of interest from fitted flexsurvrtrunc models — summary.flexsurvrtrunc","text":"object Output flexsurvreg flexsurvspline, representing fitted survival model object. type \"survival\" survival probabilities. \"cumhaz\" cumulative hazards. \"hazard\" hazards. \"rmst\" restricted mean survival. \"mean\" mean survival. \"median\" median survival (alternative type=\"quantile\" quantiles=0.5). \"quantile\" quantiles survival time distribution. Ignored \"fn\" specified. fn Custom function parameters summarise time. optional first argument t representing time, remaining arguments must parameters distribution.  return vector length t. t Times calculate fitted values . default, sorted unique observation (including censoring) times data - left-truncated datasets \"stop\" times. quantiles type=\"quantile\", specifies quantiles survival time distribution return estimates . ci Set FALSE omit confidence intervals. se Set TRUE include standard errors. B Number simulations normal asymptotic distribution estimates used calculate confidence intervals standard errors. Decrease greater speed expense accuracy, set B=0 turn calculation CIs SEs. cl Width symmetric confidence intervals, relative 1. ... arguments passed methods.  Currently unused.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/survrtrunc.html","id":null,"dir":"Reference","previous_headings":"","what":"Nonparametric estimator of survival from right-truncated, uncensored data — survrtrunc","title":"Nonparametric estimator of survival from right-truncated, uncensored data — survrtrunc","text":"Estimates survivor function right-truncated, uncensored data reversing time, interpreting data left-truncated, applying Kaplan-Meier / Lynden-Bell estimator transforming back.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/survrtrunc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nonparametric estimator of survival from right-truncated, uncensored data — survrtrunc","text":"","code":"survrtrunc(t, rtrunc, tmax, data = NULL, eps = 0.001, conf.int = 0.95)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/survrtrunc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nonparametric estimator of survival from right-truncated, uncensored data — survrtrunc","text":"t Vector observed times initial event final event. rtrunc Individual-specific right truncation points, individual's survival time t observed greater corresponding element rtrunc.   greater tmax, actual individual-level truncation point individuals taken tmax. tmax Maximum possible time event observed. data Data frame find t rtrunc .  supplied, working environment. eps Small number added t implementing time-reversed estimator, ensure risk set consistent forward reverse time scales. just large enough t+eps ==t. need changing default 0.001, unless t extremely large small data rounded integer. conf.int Confidence level, defaulting 0.95.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/survrtrunc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nonparametric estimator of survival from right-truncated, uncensored data — survrtrunc","text":"list components:  time Time points estimated survival changes.  surv Estimated survival time, truncated  tmax.  se.surv Standard error survival.  std.err Standard error -log(survival). Named way consistency survfit.  lower Lower confidence limits survival.  upper Upper confidence limits survival.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/survrtrunc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Nonparametric estimator of survival from right-truncated, uncensored data — survrtrunc","text":"Note estimate untruncated survivor function - instead estimates survivor function truncated time defined maximum possible time might observed data. Define \\(X\\) time initial event, \\(Y\\) time final event, wish determine distribution \\(T = Y- X\\). Observations recorded \\(Y \\leq t_{max}\\).  distribution \\(T\\) resulting sample right-truncated rtrunc \\( = t_{max} - X\\). Equivalently, distribution \\(t_{max} - T\\) left-truncated, since observed \\(t_{max} - T \\geq X\\).  standard Kaplan-Meier type estimator implemented survfit used (described Lynden-Bell, 1971) results transformed back. situation might happen disease epidemic, \\(X\\) date disease onset individual, \\(Y\\) date death, wish estimate distribution time \\(T\\) onset death, given observed people died date \\(t_{max}\\). estimated survival unstable highest times, consider replacing tmax slightly lower value, necessary, removing individuals t > tmax, estimand changed survivor function truncated slightly narrower interval.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/survrtrunc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Nonparametric estimator of survival from right-truncated, uncensored data — survrtrunc","text":"D. Lynden-Bell (1971)  method allowing known observational selection small samples applied 3CR quasars. Monthly Notices Royal Astronomical Society, 155:95–118. Seaman, S., Presanis, . Jackson, C. (2020) Review methods estimating distribution time event right-truncated data.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/survrtrunc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nonparametric estimator of survival from right-truncated, uncensored data — survrtrunc","text":"","code":"## simulate some event time data set.seed(1) X <- rweibull(100, 2, 10) T <- rweibull(100, 2, 10)  ## truncate above tmax <- 20 obs <- X + T < tmax rtrunc <- tmax - X dat <- data.frame(X, T, rtrunc)[obs,] sf <-    survrtrunc(T, rtrunc, data=dat, tmax=tmax) plot(sf, conf.int=TRUE) ## Kaplan-Meier estimate ignoring truncation is biased sfnaive <- survfit(Surv(T) ~ 1, data=dat) lines(sfnaive, conf.int=TRUE, lty=2, col=\"red\")   ## truncate above the maximum observed time tmax <- max(X + T) + 10 obs <- X + T < tmax rtrunc <- tmax - X dat <- data.frame(X, T, rtrunc)[obs,] sf <-    survrtrunc(T, rtrunc, data=dat, tmax=tmax) plot(sf, conf.int=TRUE) ## estimates identical to the standard Kaplan-Meier sfnaive <- survfit(Surv(T) ~ 1, data=dat) lines(sfnaive, conf.int=TRUE, lty=2, col=\"red\")"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/tidy.flexsurvreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy a flexsurv model object — tidy.flexsurvreg","title":"Tidy a flexsurv model object — tidy.flexsurvreg","text":"Tidy summarizes information components model tidy data frame.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/tidy.flexsurvreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy a flexsurv model object — tidy.flexsurvreg","text":"","code":"# S3 method for flexsurvreg tidy(   x,   conf.int = FALSE,   conf.level = 0.95,   pars = \"all\",   transform = \"none\",   ... )"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/tidy.flexsurvreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy a flexsurv model object — tidy.flexsurvreg","text":"x Output flexsurvreg flexsurvspline, representing fitted survival model object. conf.int Logical. confidence intervals returned? Default FALSE. conf.level confidence level use confidence interval conf.int = TRUE. Default 0.95. pars One \"\", \"baseline\", \"coefs\" parameters, baseline distribution parameters, covariate effects (.e. regression betas), respectively. Default \"\". transform Character vector transformations apply requested pars. Default \"none\", returns pars -. Users can specify one types transformations: \"baseline.real\" transforms baseline distribution parameters real number line used estimation. \"coefs.exp\" exponentiates covariate effects. See Details complete explanation. ... currently used.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/tidy.flexsurvreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy a flexsurv model object — tidy.flexsurvreg","text":"tibble containing columns: term, estimate, std.error, statistic, p.value, conf.low, conf.high, default. statistic p.value provided covariate effects (NA baseline distribution parameters). computed Wald-type test statistics p-values standard normal distribution.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/tidy.flexsurvreg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tidy a flexsurv model object — tidy.flexsurvreg","text":"flexsurvreg models estimate two types coefficients, baseline distribution parameters, covariate effects act baseline distribution. design, flexsurvreg returns distribution parameters scale found relevant d/p/q/r functions. Covariate effects returned log-scale, represents either log-time ratios (accelerated failure time models) log-hazard ratios proportional hazard models. default, tidy() return baseline distribution parameters natural scale covariate effects log-scale. transform baseline distribution parameters real-value number line (scale used estimation), pass character argument \"baseline.real\" transform. get time ratios hazard ratios, pass \"coefs.exp\" transform. transformations may done together submitting arguments character vector.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/tidy.flexsurvreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy a flexsurv model object — tidy.flexsurvreg","text":"","code":"fitg <- flexsurvreg(formula = Surv(futime, fustat) ~ age, data = ovarian, dist = \"gengamma\") tidy(fitg) #> # A tibble: 4 × 5 #>   term  estimate std.error statistic   p.value #>   <chr>    <dbl>     <dbl>     <dbl>     <dbl> #> 1 mu     11.7       1.66       NA    NA        #> 2 sigma   0.751     0.244      NA    NA        #> 3 Q       0.295     0.912      NA    NA        #> 4 age    -0.0875    0.0250     -3.50  0.000467 tidy(fitg, pars = \"coefs\", transform = \"coefs.exp\") #> # A tibble: 1 × 5 #>   term  estimate std.error statistic  p.value #>   <chr>    <dbl>     <dbl>     <dbl>    <dbl> #> 1 age      0.916      1.03     -3.50 0.000467"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/tidy.standsurv.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy a standsurv object. — tidy.standsurv","title":"Tidy a standsurv object. — tidy.standsurv","text":"function used internally standsurv tidy data.frames automatically returned function.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/tidy.standsurv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy a standsurv object. — tidy.standsurv","text":"","code":"# S3 method for standsurv tidy(x, ...)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/tidy.standsurv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy a standsurv object. — tidy.standsurv","text":"x standsurv object. ... currently used.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/tidy.standsurv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy a standsurv object. — tidy.standsurv","text":"Returns additional tidy data.frames (tibbles) stored attributes named standpred_at standpred_contrast.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/totlos.fs.html","id":null,"dir":"Reference","previous_headings":"","what":"Total length of stay in particular states for a fully-parametric, time-inhomogeneous Markov multi-state model — totlos.fs","title":"Total length of stay in particular states for a fully-parametric, time-inhomogeneous Markov multi-state model — totlos.fs","text":"matrix whose \\(r,s\\) entry expected amount time spent state \\(s\\) time-inhomogeneous, continuous-time Markov multi-state process starts state \\(r\\), maximum time \\(t\\). defined integral corresponding transition probability time.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/totlos.fs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Total length of stay in particular states for a fully-parametric, time-inhomogeneous Markov multi-state model — totlos.fs","text":"","code":"totlos.fs(   x,   trans = NULL,   t = 1,   newdata = NULL,   ci = FALSE,   tvar = \"trans\",   sing.inf = 1e+10,   B = 1000,   cl = 0.95,   ... )"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/totlos.fs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Total length of stay in particular states for a fully-parametric, time-inhomogeneous Markov multi-state model — totlos.fs","text":"x model fitted flexsurvreg.  See msfit.flexsurvreg required form model data.  Additionally, must Markov / clock-forward model, can time-inhomogeneous.  See package vignette explanation. x can also list models, one component permitted transition, illustrated msfit.flexsurvreg. trans Matrix indicating allowed transitions.  See msfit.flexsurvreg. t Time vector times predict .  Must finite. newdata data frame specifying values covariates fitted model, transition number.  See msfit.flexsurvreg. ci Return confidence interval calculated simulating asymptotic normal distribution maximum likelihood estimates.  Turned default, since computationally intensive.  turned , users increase B results reach desired precision. tvar Variable data representing transition type. required x list models. sing.inf singularity observed hazard, example Weibull distribution shape < 1 infinite hazard t=0, workaround, hazard assumed large finite number, sing.inf, time.  results sensitive exact value assumed, users make sure adjusting parameter cases. B Number simulations normal asymptotic distribution used calculate variances.  Decrease greater speed expense accuracy. cl Width symmetric confidence intervals, relative 1. ... Arguments passed ode deSolve.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/totlos.fs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Total length of stay in particular states for a fully-parametric, time-inhomogeneous Markov multi-state model — totlos.fs","text":"matrix lengths stay \\(T(t)\\), t length 1, list matrices t longer. ci=TRUE, element attributes \"lower\" \"upper\" giving matrices corresponding confidence limits. formatted printing may extracted using attr(). result also attribute P giving transition probability matrices, since unavoidably computed side effect.  suppressed printing, can extracted attr(...,\"P\").","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/totlos.fs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Total length of stay in particular states for a fully-parametric, time-inhomogeneous Markov multi-state model — totlos.fs","text":"computed solving second order extension Kolmogorov forward differential equation numerically, using methods deSolve package.  equation expressed linear system $$\\frac{dT(t)}{dt} = P(t)$$ $$\\frac{dP(t)}{dt} = P(t) Q(t)$$ solved \\(T(t)\\) \\(P(t)\\) simultaneously, \\(T(t)\\) matrix total lengths stay, \\(P(t)\\) transition probability matrix time \\(t\\), \\(Q(t)\\) transition hazard intensity function \\(t\\).  initial conditions \\(T(0) = 0\\) \\(P(0) = \\). Note package msm similar method totlos.msm. totlos.fs give results totlos.msm conditions hold: time--event distribution exponential transitions, thus flexsurvreg model fitted dist=\"exp\", time-homogeneous. msm model fitted exacttimes=TRUE, thus event times known, time-dependent covariates. msm allows exponential piecewise-exponential time--event distributions, flexsurvreg allows flexible models. msm however designed particular panel data, process observed arbitrary times, thus times transition unknown, makes flexible models difficult. function valid Markov (\"clock-forward\") multi-state models, though warning error currently given model Markov.  See totlos.simfs equivalent semi-Markov (\"clock-reset\") models.","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/totlos.fs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Total length of stay in particular states for a fully-parametric, time-inhomogeneous Markov multi-state model — totlos.fs","text":"Christopher Jackson chris.jackson@mrc-bsu.cam.ac.uk.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/totlos.fs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Total length of stay in particular states for a fully-parametric, time-inhomogeneous Markov multi-state model — totlos.fs","text":"","code":"# BOS example in vignette, and in msfit.flexsurvreg bexp <- flexsurvreg(Surv(Tstart, Tstop, status) ~ trans,                     data=bosms3, dist=\"exp\") tmat <- rbind(c(NA,1,2),c(NA,NA,3),c(NA,NA,NA))  # predict 4 years spent without BOS, 3 years with BOS, before death # As t increases, this should converge  totlos.fs(bexp, t=10, trans=tmat) #>          [,1]     [,2]      [,3] #> [1,] 3.749105 2.126570  4.124326 #> [2,] 0.000000 3.518329  6.481671 #> [3,] 0.000000 0.000000 10.000000 totlos.fs(bexp, t=1000, trans=tmat) #>          [,1]     [,2]      [,3] #> [1,] 4.109742 2.956493  992.9338 #> [2,] 0.000000 3.788904  996.2111 #> [3,] 0.000000 0.000000 1000.0000 totlos.fs(bexp, t=c(5,10), trans=tmat) #> $`5` #>          [,1]     [,2]     [,3] #> [1,] 2.892316 1.068225 1.039459 #> [2,] 0.000000 2.776392 2.223608 #> [3,] 0.000000 0.000000 5.000000 #>  #> $`10` #>          [,1]     [,2]      [,3] #> [1,] 3.749105 2.126570  4.124326 #> [2,] 0.000000 3.518329  6.481671 #> [3,] 0.000000 0.000000 10.000000 #>   # Answers should match results in help(totlos.simfs) up to Monte Carlo # error there / ODE solving precision here, since with an exponential # distribution, the \"semi-Markov\" model there is the same as the Markov # model here"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/totlos.simfs.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected total length of stay in specific states, from a fully-parametric, semi-Markov multi-state model — totlos.simfs","title":"Expected total length of stay in specific states, from a fully-parametric, semi-Markov multi-state model — totlos.simfs","text":"expected total time spent state semi-Markov multi-state models fitted time--event data flexsurvreg.  defined integral transition probability matrix, though analytically possible computed simulation.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/totlos.simfs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected total length of stay in specific states, from a fully-parametric, semi-Markov multi-state model — totlos.simfs","text":"","code":"totlos.simfs(   x,   trans,   t = 1,   start = 1,   newdata = NULL,   ci = FALSE,   tvar = \"trans\",   tcovs = NULL,   group = NULL,   M = 1e+05,   B = 1000,   cl = 0.95,   cores = NULL )"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/totlos.simfs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected total length of stay in specific states, from a fully-parametric, semi-Markov multi-state model — totlos.simfs","text":"x model fitted flexsurvreg.  See msfit.flexsurvreg required form model data.  Additionally semi-Markov, time variable represents time since last transition.  words response form Surv(time,status). See package vignette explanation. x can also list flexsurvreg models, one component permitted transition, illustrated msfit.flexsurvreg.  can constructed fmsm. trans Matrix indicating allowed transitions.  See msfit.flexsurvreg.  required x  list constructed fmsm. t Maximum time predict . start Starting state. newdata data frame specifying values covariates fitted model, transition number.  See msfit.flexsurvreg. ci Return confidence interval calculated simulating asymptotic normal distribution maximum likelihood estimates.  turned default, since two levels simulation required.  turned , users adjust B /M results reach desired precision.  simulation M generally vectorised, therefore increasing B usually expensive increasing M. tvar Variable data representing transition type. required x list models. tcovs Predictable time-dependent covariates age, see sim.fmsm. group Optional grouping states.  example, four states, group=c(1,1,2,2), totlos.simfs returns expected total time states 1 2 combined, states 3 4 combined. M Number individuals simulate order approximate transition probabilities.  Users adjust obtain required precision. B Number simulations normal asymptotic distribution used calculate confidence limits.  Decrease greater speed expense accuracy. cl Width symmetric confidence intervals, relative 1. cores Number processor cores used calculating confidence  limits repeated simulation.  default uses single-core processing.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/totlos.simfs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected total length of stay in specific states, from a fully-parametric, semi-Markov multi-state model — totlos.simfs","text":"expected total time spent state (group states given group) time t, corresponding confidence intervals requested.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/totlos.simfs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Expected total length of stay in specific states, from a fully-parametric, semi-Markov multi-state model — totlos.simfs","text":"computed simulating large number individuals M using maximum likelihood estimates fitted model function sim.fmsm.  Therefore requires random sampling function parametric survival model available: see \"Details\" section sim.fmsm.  available built-distributions, though users may need write custom models. Note random sampling method flexsurvspline models currently inefficient, looping M slow. equivalent function time-inhomogeneous Markov models totlos.fs.  Note neither functions give errors warnings used wrong type model, results invalid.","code":""},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/totlos.simfs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Expected total length of stay in specific states, from a fully-parametric, semi-Markov multi-state model — totlos.simfs","text":"Christopher Jackson chris.jackson@mrc-bsu.cam.ac.uk.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/totlos.simfs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected total length of stay in specific states, from a fully-parametric, semi-Markov multi-state model — totlos.simfs","text":"","code":"# BOS example in vignette, and in msfit.flexsurvreg bexp <- flexsurvreg(Surv(years, status) ~ trans, data=bosms3, dist=\"exp\") tmat <- rbind(c(NA,1,2),c(NA,NA,3),c(NA,NA,NA))  # predict 4 years spent without BOS, 3 years with BOS, before death # As t increases, this should converge totlos.simfs(bexp, t=10, trans=tmat) #>        1        2        3  #> 3.744539 2.125464 4.129996  totlos.simfs(bexp, t=1000, trans=tmat) #>          1          2          3  #>   4.127571   2.957678 992.914751"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/unroll.function.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a function with matrix arguments to a function with vector arguments. — unroll.function","title":"Convert a function with matrix arguments to a function with vector arguments. — unroll.function","text":"Given function matrix arguments, construct equivalent function takes vector arguments defined columns matrix.  new function simply uses cbind vector arguments make matrix, calls old one.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/unroll.function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a function with matrix arguments to a function with vector arguments. — unroll.function","text":"","code":"unroll.function(mat.fn, ...)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/unroll.function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a function with matrix arguments to a function with vector arguments. — unroll.function","text":"mat.fn function number arguments, matrices. ... series arguments.  names define arguments mat.fn matrices.  values define vector strings appended names arguments new function. example fn <- unroll.function(oldfn, gamma=1:3, alpha=0:1) make new function fn arguments gamma1,gamma2,gamma3,alpha0,alpha1. Calling fn(gamma1=,gamma2=b,gamma3=c,alpha0=d,alpha1=e) give answer oldfn(gamma=cbind(,b,c),alpha=cbind(d,e))","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/unroll.function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a function with matrix arguments to a function with vector arguments. — unroll.function","text":"new function, vector arguments.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/unroll.function.html","id":"usage-in-flexsurv","dir":"Reference","previous_headings":"","what":"Usage in flexsurv","title":"Convert a function with matrix arguments to a function with vector arguments. — unroll.function","text":"used flexsurvspline allow spline models, arbitrary number parameters, fitted using flexsurvreg. ``custom distributions'' facility flexsurvreg expects user-supplied probability density distribution functions one explicitly named argument scalar parameter, given R vectorisation, arguments supplied vector alternative parameter values. However, spline models varying number scalar parameters, determined number knots spline. dsurvspline psurvspline argument called gamma.  can supplied matrix, number columns n determined number knots (plus 2), rows referring alternative parameter values.  following statements used source flexsurvspline: convert functions arguments gamma0, gamma1,...,gamman, corresponding columns gamma, n = nk-1, arguments format.","code":"dfn <- unroll.function(dsurvspline, gamma=0:(nk-1)) pfn <- unroll.function(psurvspline, gamma=0:(nk-1))"},{"path":[]},{"path":"http://chjackson.github.io/flexsurv-dev/reference/unroll.function.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert a function with matrix arguments to a function with vector arguments. — unroll.function","text":"Christopher Jackson <chris.jackson@mrc-bsu.cam.ac.uk>","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/unroll.function.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a function with matrix arguments to a function with vector arguments. — unroll.function","text":"","code":"fn <- unroll.function(ncol, x=1:3) fn(1:3, 1:3, 1:3) # equivalent to... #> [1] 3 ncol(cbind(1:3,1:3,1:3)) #> [1] 3"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/vcov.flexsurvreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Variance-covariance matrix from a flexsurvreg model — vcov.flexsurvreg","title":"Variance-covariance matrix from a flexsurvreg model — vcov.flexsurvreg","text":"Variance-covariance matrix  flexsurvreg model","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/vcov.flexsurvreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variance-covariance matrix from a flexsurvreg model — vcov.flexsurvreg","text":"","code":"# S3 method for flexsurvreg vcov(object, ...)"},{"path":"http://chjackson.github.io/flexsurv-dev/reference/vcov.flexsurvreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variance-covariance matrix from a flexsurvreg model — vcov.flexsurvreg","text":"object fitted model object class flexsurvreg, e.g. returned flexsurvreg flexsurvspline. ... arguments (currently unused).","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/reference/vcov.flexsurvreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variance-covariance matrix from a flexsurvreg model — vcov.flexsurvreg","text":"Variance-covariance matrix estimated parameters,   scale estimated (positive parameters   log scale).","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-23-2024-04-05","dir":"Changelog","previous_headings":"","what":"Version 2.3 (2024-04-05)","title":"Version 2.3 (2024-04-05)","text":"Analytic Hessian calculation models possible, , Weibull, Gompertz, exponential, spline models hazard odds scales. Analytic gradient calculation Weibull proportional hazards models. Vignette now firmly warns using flexsurv time-dependent covariates (#176). Weighted likelihood relative survival models now implemented consistently models, weighted sum individual log-likelihoods. standsurv now returns results order times t given user, consistency summary.flexsurvreg. Quantiles standardised survival now available standsurv. Non-default factor contrasts now handled. pmatrix.simfs can now accept vector times t tidy output option. BIC AICc functions added. Column name predict() output changed \"time\" \"eval_time\", consistency tidymodels update. Default value t now chosen hr_flexsurvreg. coxsnell.flexsurvreg now handles delayed entry. Warning given name location parameter included ancillary part model specification. Fix computing quantiles custom distributions (#187). Thank contributed code version: @mikesweeting @stephematician @ndunnewind @mattwarkentin @hfrick @kkmann; reported issues: @anddis @irtimmins @sbihorel @zou-ims @aghaynes @huftis @mafed @hezht3 @sebffischer (anyone else reported issues via email).","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-222-2023-01-31","dir":"Changelog","previous_headings":"","what":"Version 2.2.2 (2023-01-31)","title":"Version 2.2.2 (2023-01-31)","text":"CRAN release: 2023-02-01 Allow unicode characters vignette, satisfy R CMD check r-devel.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-221-2022-12-22","dir":"Changelog","previous_headings":"","what":"Version 2.2.1 (2022-12-22)","title":"Version 2.2.1 (2022-12-22)","text":"CRAN release: 2022-12-22 New simulate.flexsurvreg method simulate data fitted flexsurvreg flexsurvspline model. Thanks Mark Clements help . Fix bug summary() method type = \"quantile\" \"median\" left-truncation prediction (start > 0). Correction examples interpretation Cox-Snell residuals.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-22-2022-06-16","dir":"Changelog","previous_headings":"","what":"Version 2.2 (2022-06-16)","title":"Version 2.2 (2022-06-16)","text":"CRAN release: 2022-06-17 New function standsurv survival hazards standardised observed distribution covariates. Contributed Michael Sweeting mikesweeting79@gmail.com. See new vignette . New function hr_flexsurvreg compute hazard ratio fitted flexsurvreg flexsurvspline model function time, confidence intervals. summary.flexsurvreg rewritten make cleaner faster. User-visible changes: Custom summary functions summary.flexsurvreg must now vectorised. new argument cross specifies whether compute summaries combinations times t covariate values, covariate values matched corresponding times t, custom summary functions. Covariate names tidy=FALSE now consistently don’t include spaces. Better handling NAs summary prediction functions. Thanks Matthew Warkentin. New functions Cox-Snell residuals: coxsnell_flexsurvreg residuals(…, type=“coxsnell”). rmst_generic, mean_survspline, rmst_survspline related functions (e.g. mean_survspline1) handle alternative parameter values vectorised way. Allow output functions work models stripped data x$data <- NULL, possible.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-21-2021-09-13","dir":"Changelog","previous_headings":"","what":"Version 2.1 (2021-09-13)","title":"Version 2.1 (2021-09-13)","text":"CRAN release: 2021-09-13 Fix bug affected models baseline hazard offsets exponential, Weibull, Gompertz hazard/odds-based spline models, convergence may falsely reported due incorrect likelihood derivatives. New vignette section better help page documentation relative survival models. start parameter added predict.flexsurvreg. New function pdf_flexsurmix fitted density function flexsurvmix model. Fix tidy method one-parameter exponential models. Fixes h/Hgamma h/Hlnorm log = TRUE. Minor numerical improvements h/H functions distributions. Bug fix simfs_bytrans transitions don’t happen. NaNs produced warnings occur less often fitting.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-20-2021-02-22","dir":"Changelog","previous_headings":"","what":"Version 2.0 (2021-02-22)","title":"Version 2.0 (2021-02-22)","text":"CRAN release: 2021-02-22 new class multi-state models based mixtures (Larson Dinse 1985). new vignette multi-state modelling describes model class contrasts standard (cause-specific hazards) multi-state models. Different parametric families now supported different transitions multi-state models. New function fmsm allows list flexsurvreg objects associated particular transition structure matrix, create multi-state model. New function simfinal_fmsm summarise times probabilities final absorbing events multi-state models, using simulation. features right-truncated data. Individual-level right-truncation times supported new “rtrunc” argument flexsurvreg flexsurvspline. comparable non-parametric estimator right-truncated data provided new function, survrtrunc. Alternative parametric estimators, make use time initiating event, provided new function, flexsurvrtrunc. new vignette describes properties different built-parametric distributions detail. qgeneric now vectorised, thanks vuniroot function imported rstpm2 package Mark Clements. massively boosts speed rsurvspline, hence speeding simulations spline-based multi-state models. pmatrix.fs can now calculate transition probabilities conditionally transition one subset states. “tidy” argument pmatrix.fs tidy data frame output. “tidy” argument sim.fmsm returning simulations tidy data frame format one row per transition, associated function simfs_bytrans. Bootstrapping function bootci.fmsm made available users get confidence intervals / distributions flexsurv model output functions. Parallel processing capability bootstrap confidence intervals. Distribution mean functions Royston-Parmar model named like dsurvspline2, psurvspline4 , one argument per parameter, rather parameters collected single argument, going 7 knots / 9 parameters. Return value pars.fmsm now list rather matrix, even model family transition. summary.flexsurvreg given new argument “na.action” control whether missing values “newdata” dropped. Defaults producing summaries NA missing values, previously missing values dropped. S3 methods added generics defined broom package. functions create tidy data frames containing results fitted models. new functions tidy.flexsurvreg, glance.flexsurvreg, augment.flexsurvreg. S3 methods added predict residuals generics. predict.flexsurvreg full support model outcomes supported summary.flexsurvreg. residuals.flexsurvreg currently supports naive difference observed survival predicted mean, neglecting censoring. Case weights accounted nonparametric survival cumulative hazard estimates plot.flexsurvreg. Thanks https://github.com/andbe.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-111-2019-03-18","dir":"Changelog","previous_headings":"","what":"Version 1.1.1 (2019-03-18)","title":"Version 1.1.1 (2019-03-18)","text":"CRAN release: 2019-03-18 New type=“quantiles” type=“link” summary.flexsurvreg. Thanks Leonardo Marques contribution. Allow different covariates per transition multi-state models supplied list flexsurvreg objects. Thanks David McAllister contribution. Bug fix qllogis lower.tail=FALSE. Bug fix likelihood events observed. Bug fix “ylim” argument plot method survival cumulative hazard. Allow dynamic symbols C code. Various minor code doc fixes, see github commit history.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-11-2017-03-27","dir":"Changelog","previous_headings":"","what":"Version 1.1 (2017-03-27)","title":"Version 1.1 (2017-03-27)","text":"CRAN release: 2017-03-27 Substantial speed improvements fitting built-models, implementing PDFs CDFs C++. Thanks Paul Metcalfe contributing . Results may therefore differ previous versions edge cases. result package now depends Rcpp. Mean, median restricted mean included built-functions summary.flexsurvreg. Thanks Jordan Amdahl contribution. Documentation migrated roxygen. Thanks Paul Metcalfe contribution. Various minor bug fixes, see github commits.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-102-2016-09-26","dir":"Changelog","previous_headings":"","what":"Version 1.0.2 (2016-09-26)","title":"Version 1.0.2 (2016-09-26)","text":"Bug fix: “start” ignored plot.flexsurvreg. Thanks Ruth Keogh. Built-distribution names now case-insensitive. Thanks Jordan Amdahl. Fix Weibull hazard function avoid numeric instability. Thanks Jordan Amdahl. Fix hsurvspline t includes 0. Thanks Jordan Amdahl. Vectorised parameters supported qgeneric.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-101-2016-05-31","dir":"Changelog","previous_headings":"","what":"Version 1.0.1 (2016-05-31)","title":"Version 1.0.1 (2016-05-31)","text":"Bug fix: covariates labelled wrongly summary.flexsurvreg tidy output. Thanks Owain Saunders.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-100-2016-05-10","dir":"Changelog","previous_headings":"","what":"Version 1.0.0 (2016-05-10)","title":"Version 1.0.0 (2016-05-10)","text":"CRAN release: 2016-05-11 Version number bumped 1.0.0 accompany publication vignette Journal Statistical Software.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-071-2016-03-24","dir":"Changelog","previous_headings":"","what":"Version 0.7.1 (2016-03-24)","title":"Version 0.7.1 (2016-03-24)","text":"CRAN release: 2016-03-24 Slightly efficient likelihood calculations, removed spurious warning likelihood interval censoring. Tests modified work latest (current) testthat.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-07-2015-11-13","dir":"Changelog","previous_headings":"","what":"Version 0.7 (2015-11-13)","title":"Version 0.7 (2015-11-13)","text":"CRAN release: 2015-11-13 flexsurvspline now allows log cumulative hazard (alternatives) modelled spline function time instead log time. routine generating initial values flexsurvspline improved. now obeys constraint log cumulative hazard increasing, thus avoiding errors optim() wasn’t satisfied. Cox regression used fallback initialise covariate effects fails. result, flexsurv now depends “quadprog” package. dweibullPH related functions give Weibull distribution proportional hazards parameterisation, “weibullPH” supported built-model flexsurvreg. Option summary.flexsurvreg return tidy data frame. New “logliki” component model objects, containing vector log-likelihoods observation estimated fixed parameters. Fix various bugs supplying “newdata” summary functions (github issue #7). behaviour now like predict.lm, e.g. variables newdata originally factors supplied factor character, numeric. Fix bug prevented plots drawn categorical covariates default. Fix bugs spline models data censored, data interval censored (github issue #3). Fix bugs subsetting flexsurvspline (github issue #6).","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-06-2015-04-13","dir":"Changelog","previous_headings":"","what":"Version 0.6 (2015-04-13)","title":"Version 0.6 (2015-04-13)","text":"CRAN release: 2015-04-14 CRAN release. Also includes changes Version 0.5.1. Full support multi-state models fitted list independent transition-specific models. New function pars.fmsm return transition-specific parameters multi-state models. Bug fix empirical hazard plots categorical covariates. Thanks Milan Bouchet-Valat.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-051-2015-02-24","dir":"Changelog","previous_headings":"","what":"Version 0.5.1 (2015-02-24)","title":"Version 0.5.1 (2015-02-24)","text":"github-release. Log-logistic distribution built flexsurvreg, distribution functions provided. Bug fix tcovs option semi-Markov model simulation. “digits” argument supported default model print function. passed “format” format parameter estimates, defaults 3. Bug fix “events” printed output interval censored data. Thanks Sabrina Russo. pgompertz returns Inf q=Inf, even parameters denoting “living forever”, since CDF P(X <= q) P(X < q). affected fits Gompertz distribution.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-05-2014-09-22","dir":"Changelog","previous_headings":"","what":"Version 0.5 (2014-09-22)","title":"Version 0.5 (2014-09-22)","text":"CRAN release: 2014-09-22 Major new release, version number bumped 0.3 0.5. New package vignettes: user guide vignette examples. Development moved r-forge https://github.com/chjackson/flexsurv-dev. Spline models ancillary covariates: Major rewrite flexsurvspline. now works calling flexsurvreg custom distribution written dynamically. Models can now include covariate effects vary spline functions time, including covariates “gamma1” parameters. New argument “anc” flexsurvreg, alternative preferred way modelling covariates ancillary parameters. New general utility “unroll.function” converts function matrix arguments equivalent function vector arguments. new flexsurvspline works unrolling “dsurvspline”. Quantile, random number, hazard cumulative hazard functions spline distribution. Autogeneration initial values flexsurvspline now accounts left-truncation. Thanks Ana Borges report. new modelling features: Several utilities parametric multi-state modelling, including transition probabilities simulation (“pmatrix.fs”, “totlos.fs”, “sim.fmsm”,“pmatrix.simfs”, “totlos.simfs”). “msfit.flexsurvreg” method also gives cumulative transition-specific hazards format “mstate” package. Interval censoring supported Surv() response. Relative survival models, using “bhazard” argument flexsurvreg specify expected mortality rate. flexsurvreg now uses survreg internally fit Weibull, exponential log-normal models, unless left-truncation. Custom distributions: Custom distributions can defined hazard function. can optionally supplemented cumulative hazard function, otherwise obtained numerical integration. custom distributions specified density, cumulative distribution can now omitted, calculated numerical integration. New arguments “dfns” “aux” flexsurvreg, can used supply custom distribution functions arguments pass . Document density functions custom distributions need “log” argument. Documented supply derivatives custom distributions use optimisation. Output functions: New “newdata” argument summary.flexsurvreg plot.flexsurvreg easier way supplying covariate values. User-defined summary functions can used summary.flexsurvreg plot.flexsurvreg alternative survival, hazard cumulative hazard. New function “normboot.flexsurvreg” simulate parameters asymptotic normal distribution estimates. Used representing uncertainty function parameters. summary.flexsurvreg can called ci=FALSE omit confidence intervals. “start” argument defaults 0 prediction times summary.flexsurvreg. Bug fix summary.flexsurvreg left-truncated models, returning probabilities > 1 truncation time. New model.frame model.matrix methods extract data fitted flexsurvreg objects. Accept vector X summary.flexsurvreg, give informative error X wrong format. Thanks Mark Danese. Extra arguments can passed muhaz plot.muhaz plot.flexsurvreg(…,type=“hazard”,…) Printed output: Use format() signif() printing flexsurvreg objects, avoid spurious zero significant figures. Thanks Kenneth Chen. Standard errors included printed output flexsurvreg, parameters optimised natural log scales (includes built-distributions). Distribution functions: Bug fix rgengamma Q=0 (log-normal) sigma equal 1. Don’t warn shape parameters exactly zero generalized gamma F, just give NaN. basis() fss() functions natural cubic spline basis made available users.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-031-2014-02-14","dir":"Changelog","previous_headings":"","what":"Version 0.3.1 (2014-02-14)","title":"Version 0.3.1 (2014-02-14)","text":"R-forge release. Distribution functions tidied , making special value handling vectorisation consistent. Hazard cumulative hazard functions supported distributions. Vectors different col, lwd lty can passed plot.flexsurvreg multiple fitted lines. Thanks Julia Sandberg report.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-03-2014-01-19","dir":"Changelog","previous_headings":"","what":"Version 0.3 (2014-01-19)","title":"Version 0.3 (2014-01-19)","text":"CRAN release: 2014-01-20 CRAN release. Includes changes 0.2.1 0.2.3.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-023-2013-10-09","dir":"Changelog","previous_headings":"","what":"Version 0.2.3 (2013-10-09)","title":"Version 0.2.3 (2013-10-09)","text":"R-forge release. Parameters location parameter can now covariates flexsurvreg. Thanks Milan Bouchet-Valat help . subset na.action arguments flexsurvreg flexsurvspline. coef, vcov confint methods fitted model objects. Distribution functions generalized gamma, generalized F, Gompertz, now allow parameters vectorised. Bug fix analytic derivatives Weibull. Restored print output introduced 0.1.2 accidentally removed 0.1.5.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-022-2013-07-26","dir":"Changelog","previous_headings":"","what":"Version 0.2.2 (2013-07-26)","title":"Version 0.2.2 (2013-07-26)","text":"R-forge release. Case weights supported flexsurvreg flexsurvspline.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-021-2013-07-03","dir":"Changelog","previous_headings":"","what":"Version 0.2.1 (2013-07-03)","title":"Version 0.2.1 (2013-07-03)","text":"R-forge release. Default left truncation times set wrongly user-supplied times summary.flexsurvreg, giving wrong confidence intervals. now default 0. Confidence intervals set 1 t=0 spline models. Thanks Paul Pynsent. dgompertz,dgengamma,dgengamma.orig,dgenf,dgenf.orig fixed return -Inf instead 0 density zero log=TRUE. Thanks Gao Zheng.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-02-2013-05-13","dir":"Changelog","previous_headings":"","what":"Version 0.2 (2013-05-13)","title":"Version 0.2 (2013-05-13)","text":"CRAN release: 2013-05-15 New summary() method fitted flexsurvreg flexsurvspline model objects gives fitted survival, cumulative hazard hazard curves, confidence intervals mosly computed simulation method. allows plot.flexsurvreg plot confidence intervals fitted survival, hazard cumulative hazard. Left-truncated survival observations supported flexsurvreg flexsurvspline. New psurvspline dsurvspline functions giving distribution density function spline model. Analytic derivatives used optimisation spline (odds hazard scale, normal), exponential, Weibull Gompertz models. Default BFGS optimisation method, uses derivatives available much faster, instead Nelder-Mead. Work around NaN warnings spline models presumably due parameters violating implicit constraints. “knots” specified, boundary knots set min/max uncensored times, times, match results “k” specified. Thanks Paul Pynsent.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-015-2012-08-29","dir":"Changelog","previous_headings":"","what":"Version 0.1.5 (2012-08-29)","title":"Version 0.1.5 (2012-08-29)","text":"CRAN release: 2012-08-29 Data now stored fitted flexsurvreg flexsurvspline model objects, avoiding environment search errors allowing package functions called within functions. Thanks Hanna Daniel report. Gompertz documentation clarified case chance living forever. qgompertz rgompertz now return Inf cases, warning, instead NaN. Thanks Michael Sweeting.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-014-2012-03-22","dir":"Changelog","previous_headings":"","what":"Version 0.1.4 (2012-03-22)","title":"Version 0.1.4 (2012-03-22)","text":"CRAN release: 2012-03-24 maxt argument plot.flexsurvreg. Plots longer complain data named “dat”. Corrected wrong bug fix Version 0.1.3 transforming parameter estimates output fixedpars=TRUE. AIC penalty corrected models fixed parameters. qgengamma corrected parameter Q<0. Thanks Benn Ackley.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-013-2012-01-17","dir":"Changelog","previous_headings":"","what":"Version 0.1.3 (2012-01-17)","title":"Version 0.1.3 (2012-01-17)","text":"CRAN release: 2012-01-17 longer complains invalid initial values zero survival times. Don’t transform parameter estimates output fixedpars=TRUE. Checking functions distribution utilities don’t complain vectorised parameter values.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-012-2011-11-08","dir":"Changelog","previous_headings":"","what":"Version 0.1.2 (2011-11-08)","title":"Version 0.1.2 (2011-11-08)","text":"CRAN release: 2011-11-09 Initial CRAN release. features print output flexsurvreg flexsurvspline models.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-011-2011-04-19","dir":"Changelog","previous_headings":"","what":"Version 0.1.1 (2011-04-19)","title":"Version 0.1.1 (2011-04-19)","text":"Fix drop=FALSE bug flexsurvspline.inits caused flexsurvspline fail single covariates.","code":""},{"path":"http://chjackson.github.io/flexsurv-dev/news/index.html","id":"version-01-2011-03-14","dir":"Changelog","previous_headings":"","what":"Version 0.1 (2011-03-14)","title":"Version 0.1 (2011-03-14)","text":"Initial release","code":""}]
